<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【28-29】行级锁</title>
      <link href="/2022/02/19/JDBC/%E3%80%9028-29%E3%80%91%E8%A1%8C%E7%BA%A7%E9%94%81/"/>
      <url>/2022/02/19/JDBC/%E3%80%9028-29%E3%80%91%E8%A1%8C%E7%BA%A7%E9%94%81/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="悲观锁（行级锁）"><a href="#悲观锁（行级锁）" class="headerlink" title="悲观锁（行级锁）"></a>悲观锁（行级锁）</h2><ul><li>在select语句后加”for update”  </li><li>也叫做悲观锁  </li><li>事务必须排队执行，数据被锁住了，不允许并发  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span>语句) <span class="keyword">for</span> update;</span><br></pre></td></tr></table></figure></li></ul><h2 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h2><ul><li>支持并发，事务也不需要排队，只不过需要一个版本号<br><img src="%E6%82%B2%E8%A7%82%E9%94%81%E4%B8%8E%E4%B9%90%E8%A7%82%E9%94%81.png" alt="悲观锁与乐观锁"></li></ul><h1 id="演示行级锁"><a href="#演示行级锁" class="headerlink" title="演示行级锁"></a>演示行级锁</h1><h2 id="演示行级锁01"><a href="#演示行级锁01" class="headerlink" title="演示行级锁01"></a>演示行级锁01</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> _28_29_行级锁;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> _28_29_行级锁.util.DBUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这个程序专门查询，并使用行级锁</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 演示行级锁01 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet res = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DBUtil.getConnection();</span><br><span class="line">            conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">            String sql = <span class="string">&quot;select ename,job,sal from emp where job = ? for update&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>,<span class="string">&quot;MANAGER&quot;</span>);</span><br><span class="line">            res = ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span> (res.next())&#123;</span><br><span class="line">                System.out.println(res.getString(<span class="string">&quot;ename&quot;</span>) + <span class="string">&quot;\t&quot;</span> +</span><br><span class="line">                        res.getString(<span class="string">&quot;job&quot;</span>) + <span class="string">&quot;\t&quot;</span> +</span><br><span class="line">                        res.getString(<span class="string">&quot;sal&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            conn.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.rollback();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">                    ex.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            DBUtil.close(conn, ps, res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="演示行级锁02"><a href="#演示行级锁02" class="headerlink" title="演示行级锁02"></a>演示行级锁02</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> _28_29_行级锁;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> _28_29_行级锁.util.DBUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这个程序负责修改被锁定的记录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 演示行级锁02 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DBUtil.getConnection();</span><br><span class="line">            conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">            String sql = <span class="string">&quot;update emp set sal = sal*1.1 where job = ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>, <span class="string">&quot;MANAGER&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> count = ps.executeUpdate();</span><br><span class="line">            System.out.println(<span class="string">&quot;count = &quot;</span> + count);</span><br><span class="line"></span><br><span class="line">            conn.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.rollback();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">                    ex.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">           DBUtil.close(conn, ps, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><ol><li>在代码01中commit打断点，也就是给job为”MANAGER”的人员添加行级锁，并调试执行     </li><li>此是执行代码02，代码02想要修改job为”MANAGER”的人员的薪资，会发现代码02在执行过程中停止不动了  </li><li>体现了行级锁的作用  </li></ol>]]></content>
      
      
      <categories>
          
          <category> JDBC </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【26-27】JDBC工具类封装与模糊查询</title>
      <link href="/2022/02/18/JDBC/%E3%80%9026-27%E3%80%91JDBC%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%B0%81%E8%A3%85%E4%B8%8E%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/"/>
      <url>/2022/02/18/JDBC/%E3%80%9026-27%E3%80%91JDBC%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%B0%81%E8%A3%85%E4%B8%8E%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="JDBC工具类的封装"><a href="#JDBC工具类的封装" class="headerlink" title="JDBC工具类的封装"></a>JDBC工具类的封装</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> _26_26_JDBC工具类的封装.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 工具类中的构造方法都是私有的</span></span><br><span class="line"><span class="comment">     * 因为工具类中的方法都是静态的，不需要new对象，通过类名调用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">DBUtil</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加载此类的时候只需要加载一次驱动</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取数据库连接对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 连接对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(</span><br><span class="line">                <span class="string">&quot;jdbc:mysql://localhost:3306/sunlie&quot;</span>,</span><br><span class="line">                <span class="string">&quot;root&quot;</span>,</span><br><span class="line">                <span class="string">&quot;root&quot;</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭资源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn 连接对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stmt 数据库操作对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> res 结果集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn, Statement stmt, ResultSet res)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (res != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                res.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (stmt != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                stmt.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="测试工具类并实现模糊查询"><a href="#测试工具类并实现模糊查询" class="headerlink" title="测试工具类并实现模糊查询"></a>测试工具类并实现模糊查询</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> _26_26_JDBC工具类的封装;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> _26_26_JDBC工具类的封装.util.DBUtil;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 实现模糊查询 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet res = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// get connection</span></span><br><span class="line">            conn = DBUtil.getConnection();</span><br><span class="line">            <span class="comment">// get precompiled database operation object</span></span><br><span class="line">            String sql = <span class="string">&quot;select ename from emp where ename like ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>,<span class="string">&quot;_A%&quot;</span>);</span><br><span class="line">            <span class="comment">// execute SQL statement</span></span><br><span class="line">            res = ps.executeQuery();</span><br><span class="line">            <span class="comment">// precess result set</span></span><br><span class="line">            <span class="keyword">while</span> (res.next())&#123;</span><br><span class="line">                System.out.println(res.getString(<span class="string">&quot;ename&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                WARD</span></span><br><span class="line"><span class="comment">                MARTIN</span></span><br><span class="line"><span class="comment">                JAMES</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            DBUtil.close(conn, ps, res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JDBC </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【24-25】事务自动提交</title>
      <link href="/2022/02/18/JDBC/%E3%80%9024-25%E3%80%91%E4%BA%8B%E5%8A%A1%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4/"/>
      <url>/2022/02/18/JDBC/%E3%80%9024-25%E3%80%91%E4%BA%8B%E5%8A%A1%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="事务自动提交"><a href="#事务自动提交" class="headerlink" title="事务自动提交"></a>事务自动提交</h1><ol><li>JDBC中只要执行任意一条DML语句，事务就提交一次  </li></ol><h2 id="演示事务自动提交"><a href="#演示事务自动提交" class="headerlink" title="演示事务自动提交"></a>演示事务自动提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> _24_事务自动提交;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 演示事务自动提交 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet res = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1. register driver</span></span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            <span class="comment">// 2. get connection</span></span><br><span class="line">            conn = DriverManager.getConnection(</span><br><span class="line">                    <span class="string">&quot;jdbc:mysql://localhost:3306/sunlie&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span></span><br><span class="line">            );</span><br><span class="line">            <span class="comment">// 3 create database operation object</span></span><br><span class="line">            String sql;</span><br><span class="line">            <span class="keyword">int</span> count;</span><br><span class="line">            sql = <span class="string">&quot;update dept set dname = ? where deptno = ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 4 execute SQL statement</span></span><br><span class="line">            ps.setString(<span class="number">1</span>,<span class="string">&quot;XXX&quot;</span>);</span><br><span class="line">            ps.setInt(<span class="number">2</span>,<span class="number">40</span>);</span><br><span class="line">            count = ps.executeUpdate();</span><br><span class="line">            System.out.println(<span class="string">&quot;count = &quot;</span> + count);</span><br><span class="line">            <span class="comment">// 这里打断点，查询表中数据发现数据更改，也就是事务提交了</span></span><br><span class="line">            <span class="comment">// 体现了事务的自动提交</span></span><br><span class="line"></span><br><span class="line">            ps.setString(<span class="number">1</span>,<span class="string">&quot;YYY&quot;</span>);</span><br><span class="line">            ps.setInt(<span class="number">2</span>,<span class="number">30</span>);</span><br><span class="line">            count = ps.executeUpdate();</span><br><span class="line">            System.out.println(<span class="string">&quot;count = &quot;</span> + count);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 6. close resource</span></span><br><span class="line">            <span class="keyword">if</span> (res != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    res.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ps != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    ps.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="事务手动提交"><a href="#事务手动提交" class="headerlink" title="事务手动提交"></a>事务手动提交</h1><ol><li>conn.setAutoCommit(false) 关闭自动提交  </li><li>conn.commit() 手动提交  </li><li>出现异常 conn.rollback() 回滚事务  </li></ol><h2 id="演示银行转账"><a href="#演示银行转账" class="headerlink" title="演示银行转账"></a>演示银行转账</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> _24_事务自动提交;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * sql:</span></span><br><span class="line"><span class="comment"> * drop table if exists t_act;</span></span><br><span class="line"><span class="comment"> * create table t_act(</span></span><br><span class="line"><span class="comment"> *      actno bigint,</span></span><br><span class="line"><span class="comment"> *      balance double(7,2) -- 7表示有效数字个数，2表示小数位个数</span></span><br><span class="line"><span class="comment"> * );</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * insert into t_act(actno, balance) values(111, 20000);</span></span><br><span class="line"><span class="comment"> * insert into t_act(actno, balance) values(222, 0);</span></span><br><span class="line"><span class="comment"> * commit;</span></span><br><span class="line"><span class="comment"> * select * from t_act;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 银行转账演示事务 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet res = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            conn = DriverManager.getConnection(</span><br><span class="line">                    <span class="string">&quot;jdbc:mysql://localhost:3306/sunlie&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span></span><br><span class="line">            );</span><br><span class="line">            <span class="comment">// * 关闭自动提交</span></span><br><span class="line">            conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">                String sql;</span><br><span class="line">                <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">                sql = <span class="string">&quot;update t_act set balance = ? where actno = ?&quot;</span>;</span><br><span class="line">                ps = conn.prepareStatement(sql);</span><br><span class="line">                ps.setDouble(<span class="number">1</span>, <span class="number">10000</span>);</span><br><span class="line">                ps.setInt(<span class="number">2</span>,<span class="number">111</span>);</span><br><span class="line">                count += ps.executeUpdate();</span><br><span class="line"></span><br><span class="line">                ps.setDouble(<span class="number">1</span>, <span class="number">10000</span>);</span><br><span class="line">                ps.setInt(<span class="number">2</span>, <span class="number">222</span>);</span><br><span class="line">                count += ps.executeUpdate();</span><br><span class="line"></span><br><span class="line">                System.out.println(count == <span class="number">2</span>? <span class="string">&quot;转账成功&quot;</span> : <span class="string">&quot;转账失败&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// * 事务结束手动提交</span></span><br><span class="line">            conn.commit();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="comment">// * 出现异常 手动回滚</span></span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.rollback();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">                    ex.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 6. close resource</span></span><br><span class="line">            <span class="keyword">if</span> (res != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    res.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ps != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    ps.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JDBC </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【21-23】Statement和PreparedStatement</title>
      <link href="/2022/02/18/JDBC/%E3%80%9021-23%E3%80%91Statement%E5%92%8CPreparedStatement/"/>
      <url>/2022/02/18/JDBC/%E3%80%9021-23%E3%80%91Statement%E5%92%8CPreparedStatement/</url>
      
        <content type="html"><![CDATA[<h1 id="对比Statement和PreparedStatement"><a href="#对比Statement和PreparedStatement" class="headerlink" title="对比Statement和PreparedStatement"></a>对比Statement和PreparedStatement</h1><ol><li>PreparedStatement 效率比 Statement 高，因为 PreparedStatement 预编译，编译一次执行 n 次，而 Statement 编译 n 次执行 n 次   </li><li>PreparedStatement 会在编译阶段做类型检查，会更安全  </li><li>PreparedStatement 不存在 SQL 注入，而 Statement 存在  </li><li>综上所以 PreparedStatement 使用较多  </li><li>当业务要求 SQL注入 那么使用 Statement，拼接SQL语句，支持 SQL注入  </li></ol><h1 id="举例利用-Statement-SQL注入"><a href="#举例利用-Statement-SQL注入" class="headerlink" title="举例利用 Statement SQL注入"></a>举例利用 Statement SQL注入</h1><ul><li>在浏览商品，例如价格升序降序等等，利用 PreparedStatement 中的 ‘?’ 并不能注入 ‘xxx desc’，所以利用 Statement  </li><li>以下升序或者降序输出ename和sal   </li><li>因为用 PreparedStatement ，在 处理sql字符串时，利用setString() 会让输入的 desc 加上单引号导致 sql 语句不合法，所以利用 Statement   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> _21_Statement和PreparedStatement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 演示<span class="title">Statement</span>用途 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.printf(<span class="string">&quot;输入asc或者desc分别表示升序或降序：&quot;</span>);</span><br><span class="line">        String s = scanner.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!(<span class="string">&quot;asc&quot;</span>.equals(s) || <span class="string">&quot;desc&quot;</span>.equals(s)))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入不合法!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行SQL</span></span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet res = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1. register driver</span></span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            <span class="comment">// 2. get connection</span></span><br><span class="line">            conn = DriverManager.getConnection(</span><br><span class="line">                    <span class="string">&quot;jdbc:mysql://localhost:3306/sunlie&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span></span><br><span class="line">            );</span><br><span class="line">            <span class="comment">// 3. create database operation object</span></span><br><span class="line">            stmt = conn.createStatement();</span><br><span class="line">            <span class="comment">// 4. execute SQL statement</span></span><br><span class="line">            String sql = <span class="string">&quot;select ename, sal from emp order by sal &quot;</span> + s;</span><br><span class="line">            res = stmt.executeQuery(sql);</span><br><span class="line">            <span class="comment">// 5. process result set</span></span><br><span class="line">            <span class="keyword">while</span>(res.next())&#123;</span><br><span class="line">                System.out.println(res.getString(<span class="string">&quot;ename&quot;</span>) + <span class="string">&quot;\t&quot;</span> +</span><br><span class="line">                        res.getString(<span class="string">&quot;sal&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 6. close resource</span></span><br><span class="line">            <span class="keyword">if</span> (res != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    res.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (stmt != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    stmt.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="PrepareStatement-完成增删改"><a href="#PrepareStatement-完成增删改" class="headerlink" title="PrepareStatement 完成增删改"></a>PrepareStatement 完成增删改</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> _21_Statement和PreparedStatement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PerparedStatement</span>完成增删改 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1. register Driver</span></span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            <span class="comment">// 2. get connection</span></span><br><span class="line">            conn = DriverManager.getConnection(</span><br><span class="line">                    <span class="string">&quot;jdbc:mysql://localhost:3306/sunlie&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span></span><br><span class="line">            );</span><br><span class="line">            <span class="comment">// 3. get database operation object</span></span><br><span class="line">            <span class="comment">/* 3.1 insert statement</span></span><br><span class="line"><span class="comment">                String sql = &quot;insert into dept(deptno,dname,loc) values(?,?,?)&quot;;</span></span><br><span class="line"><span class="comment">                ps = conn.prepareStatement(sql);</span></span><br><span class="line"><span class="comment">                ps.setInt(1, 60);</span></span><br><span class="line"><span class="comment">                ps.setString(2, &quot;SALES&quot;);</span></span><br><span class="line"><span class="comment">                ps.setString(3,&quot;SHANGHAI&quot;);</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 3.2 update statement</span></span><br><span class="line"><span class="comment">                String sql = &quot;update dept set dname = ?, loc = ? where deptno = ?&quot;;</span></span><br><span class="line"><span class="comment">                ps = conn.prepareStatement(sql);</span></span><br><span class="line"><span class="comment">                ps.setString(1, &quot;RESEARCH&quot;);</span></span><br><span class="line"><span class="comment">                ps.setString(2, &quot;BEIJING&quot;);</span></span><br><span class="line"><span class="comment">                ps.setInt(3, 60);</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.3 delete statement</span></span><br><span class="line">            String sql = <span class="string">&quot;delete from dept where deptno = ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            ps.setInt(<span class="number">1</span>,<span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 4. execute SQL statement</span></span><br><span class="line">            <span class="keyword">int</span> count = ps.executeUpdate();</span><br><span class="line">            <span class="comment">// 5. process result set</span></span><br><span class="line">            System.out.println(<span class="string">&quot;count = &quot;</span> + count);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 6. close resource</span></span><br><span class="line">            <span class="keyword">if</span> (ps != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    ps.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JDBC </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【14-20】用户登录业务</title>
      <link href="/2022/02/18/JDBC/%E3%80%9014-20%E3%80%91%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E4%B8%9A%E5%8A%A1/"/>
      <url>/2022/02/18/JDBC/%E3%80%9014-20%E3%80%91%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E4%B8%9A%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="用户登录业务"><a href="#用户登录业务" class="headerlink" title="用户登录业务"></a>用户登录业务</h1><h2 id="version-01"><a href="#version-01" class="headerlink" title="version 01"></a>version 01</h2><ol><li>没有处理SQL注入  </li><li>例如：username = abc, password = abc’ or ‘1’=’1  </li><li>用户输入的信息中有SQL语句的关键字，关键字参与SQL语句的编译过程，达到SQL注入  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> _14_用户登录业务;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Version01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 初始化界面</span></span><br><span class="line">        Map&lt;String, String&gt; userLoginInfo = initUI();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证用户名和密码</span></span><br><span class="line">        <span class="keyword">boolean</span> loginSuccess = login(userLoginInfo);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出登录结果</span></span><br><span class="line">        System.out.println(loginSuccess == <span class="keyword">true</span>? <span class="string">&quot;登录成功！&quot;</span> : <span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户登录验证</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userLoginInfo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> false失败，true成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(Map&lt;String, String&gt; userLoginInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> loginSuccess = <span class="keyword">false</span>;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet res = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1. register driver</span></span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2. get connection</span></span><br><span class="line">            conn = DriverManager.getConnection(</span><br><span class="line">                    <span class="string">&quot;jdbc:mysql://localhost:3306/sunlie&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span></span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3. get database operation object</span></span><br><span class="line">            stmt = conn.createStatement();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 4. execute sql statement</span></span><br><span class="line">            String sql = <span class="string">&quot;select * from t_user where username = &#x27;&quot;</span> +</span><br><span class="line">                    userLoginInfo.get(<span class="string">&quot;username&quot;</span>) + <span class="string">&quot;&#x27; and password = &#x27;&quot;</span> +</span><br><span class="line">                    userLoginInfo.get(<span class="string">&quot;password&quot;</span>) + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">            res = stmt.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5. process result set</span></span><br><span class="line">            <span class="keyword">if</span> (res.next())&#123;</span><br><span class="line">                loginSuccess = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 6. close resource</span></span><br><span class="line">            <span class="keyword">if</span> (res != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    res.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (stmt != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    stmt.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> loginSuccess;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化界面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户输入的用户名和密码等信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,String&gt; <span class="title">initUI</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.printf(<span class="string">&quot;用户名：&quot;</span>);</span><br><span class="line">        String username = scanner.nextLine();</span><br><span class="line">        System.out.printf(<span class="string">&quot;密码：&quot;</span>);</span><br><span class="line">        String password = scanner.nextLine();</span><br><span class="line">        Map&lt;String, String&gt; userLoginInfo = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        userLoginInfo.put(<span class="string">&quot;username&quot;</span>,username);</span><br><span class="line">        userLoginInfo.put(<span class="string">&quot;password&quot;</span>,password);</span><br><span class="line">        <span class="keyword">return</span> userLoginInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="version-02"><a href="#version-02" class="headerlink" title="version 02"></a>version 02</h2><ol><li>解决SQL注入问题  </li><li>只要用户的输入的信息不参与SQL语句的编译过程就可行  </li><li>使用java.sql.PreparedStatement，该接口继承java.sql.Statement接口，属于预编译的数据库操作对象   </li><li>PreparedStatement原理是：预先对SQL语句的框架进行编译，然后再给SQL语句传值    <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> _14_用户登录业务;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Version02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 初始化界面</span></span><br><span class="line">        Map&lt;String, String&gt; userLoginInfo = initUI();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证用户名和密码</span></span><br><span class="line">        <span class="keyword">boolean</span> loginSuccess = login(userLoginInfo);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出登录结果</span></span><br><span class="line">        System.out.println(loginSuccess == <span class="keyword">true</span>? <span class="string">&quot;登录成功！&quot;</span> : <span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户登录验证</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userLoginInfo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> false失败，true成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(Map&lt;String, String&gt; userLoginInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> loginSuccess = <span class="keyword">false</span>;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>; <span class="comment">// 更改的位置</span></span><br><span class="line">        ResultSet res = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1. register driver</span></span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2. get connection</span></span><br><span class="line">            conn = DriverManager.getConnection(</span><br><span class="line">                    <span class="string">&quot;jdbc:mysql://localhost:3306/sunlie&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;root&quot;</span></span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3. get precompiled database operation object</span></span><br><span class="line">            <span class="comment">// 其中一个 &#x27;?&#x27; 代表一个占位符，并且不能用 单引号 括起来</span></span><br><span class="line">            String sql = <span class="string">&quot;select * from t_user where username = ? and password = ?&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            <span class="comment">// 给占位符 &#x27;?&#x27; 传值，第一个 ? 下标是 1, 第二个 ? 是 2</span></span><br><span class="line">            ps.setString(<span class="number">1</span>, userLoginInfo.get(<span class="string">&quot;username&quot;</span>));</span><br><span class="line">            ps.setString(<span class="number">2</span>, userLoginInfo.get(<span class="string">&quot;password&quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 4. execute sql statement</span></span><br><span class="line">            res = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5. process result set</span></span><br><span class="line">            <span class="keyword">if</span> (res.next())&#123;</span><br><span class="line">                loginSuccess = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 6. close resource</span></span><br><span class="line">            <span class="keyword">if</span> (res != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    res.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ps != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    ps.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> loginSuccess;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化界面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户输入的用户名和密码等信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,String&gt; <span class="title">initUI</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.printf(<span class="string">&quot;用户名：&quot;</span>);</span><br><span class="line">        String username = scanner.nextLine();</span><br><span class="line">        System.out.printf(<span class="string">&quot;密码：&quot;</span>);</span><br><span class="line">        String password = scanner.nextLine();</span><br><span class="line">        Map&lt;String, String&gt; userLoginInfo = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        userLoginInfo.put(<span class="string">&quot;username&quot;</span>,username);</span><br><span class="line">        userLoginInfo.put(<span class="string">&quot;password&quot;</span>,password);</span><br><span class="line">        <span class="keyword">return</span> userLoginInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> JDBC </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【1-13】概述</title>
      <link href="/2022/02/18/JDBC/%E3%80%901-13%E3%80%91%E6%A6%82%E8%BF%B0/"/>
      <url>/2022/02/18/JDBC/%E3%80%901-13%E3%80%91%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="JDBC是什么"><a href="#JDBC是什么" class="headerlink" title="JDBC是什么"></a>JDBC是什么</h1><ul><li>Java DataBase Connectivity（Java语言连接数据库）</li></ul><h1 id="JDBC的本质是什么"><a href="#JDBC的本质是什么" class="headerlink" title="JDBC的本质是什么"></a>JDBC的本质是什么</h1><ul><li>JDBC是SUN公司指定的一套接口（interface）</li><li>在 java.sql.* 下;</li><li>可以面向接口编程（降低程序的耦合度，提高程序扩展力）  </li></ul><h1 id="为什么SUN制定一套JDBC接口"><a href="#为什么SUN制定一套JDBC接口" class="headerlink" title="为什么SUN制定一套JDBC接口"></a>为什么SUN制定一套JDBC接口</h1><ul><li>因为每个数据库实现原理不一样</li><li>详细如下图…<br><img src="%E5%AF%B9JDBC%E6%9C%AC%E8%B4%A8%E7%9A%84%E7%90%86%E8%A7%A3.png" alt="对JDBC本质的理解"></li></ul><h1 id="JDBC编程六步"><a href="#JDBC编程六步" class="headerlink" title="JDBC编程六步"></a>JDBC编程六步</h1><ol><li>注册驱动（告诉Java程序，要连接的是哪个品牌的数据库）</li><li>获取连接（标识JVM的进程和数据库进程之间通道打开，属于进程之间的通讯）</li><li>获取数据库操作对象（专门执行sql语句的对象）</li><li>执行SQL语句（DQL DML…）</li><li>处理查询结果集（select之后执行）</li><li>释放资源（使用完关闭）</li></ol><h2 id="完整步骤"><a href="#完整步骤" class="headerlink" title="完整步骤"></a>完整步骤</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">tt4</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet res = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">// 1. register driver</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. get connection</span></span><br><span class="line">conn = DriverManager.getConnection(</span><br><span class="line"><span class="string">&quot;jdbc:mysql://localhost:3306/sunlie&quot;</span>,</span><br><span class="line"><span class="string">&quot;root&quot;</span>,</span><br><span class="line"><span class="string">&quot;root&quot;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. create database operation object</span></span><br><span class="line">stmt = conn.createStatement();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. execute SQL statement</span></span><br><span class="line">String sql = <span class="string">&quot;select empno, ename, sal as xxx from emp&quot;</span>;</span><br><span class="line">res = stmt.executeQuery(sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5. process query result set</span></span><br><span class="line"><span class="keyword">int</span> rows = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(res.next())&#123;</span><br><span class="line">rows++;</span><br><span class="line"><span class="comment">/* JDBC index start with 1 </span></span><br><span class="line"><span class="comment">String empno = res.getString(1);</span></span><br><span class="line"><span class="comment">String ename = res.getString(2);</span></span><br><span class="line"><span class="comment">String sal = res.getString(3);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// res.getString(这里的列名称是结果集的列名称)</span></span><br><span class="line">String empno = res.getString(<span class="string">&quot;empno&quot;</span>);</span><br><span class="line">String ename = res.getString(<span class="string">&quot;ename&quot;</span>);</span><br><span class="line">String sal = res.getString(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line">System.out.println(empno+<span class="string">&quot;\t&quot;</span>+ename+<span class="string">&quot;\t&quot;</span>+sal);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;rows = &quot;</span> + rows);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">7369    SMITH   800.0</span></span><br><span class="line"><span class="comment">7499    ALLEN   1600.0</span></span><br><span class="line"><span class="comment">7521    WARD    1250.0</span></span><br><span class="line"><span class="comment">7566    JONES   2975.0</span></span><br><span class="line"><span class="comment">7654    MARTIN  1250.0</span></span><br><span class="line"><span class="comment">7698    BLAKE   2850.0</span></span><br><span class="line"><span class="comment">7782    CLARK   2450.0</span></span><br><span class="line"><span class="comment">7788    SCOTT   3000.0</span></span><br><span class="line"><span class="comment">7839    KING    5000.0</span></span><br><span class="line"><span class="comment">7844    TURNER  1500.0</span></span><br><span class="line"><span class="comment">7876    ADAMS   1100.0</span></span><br><span class="line"><span class="comment">7900    JAMES   950.0</span></span><br><span class="line"><span class="comment">7902    FORD    3000.0</span></span><br><span class="line"><span class="comment">7934    MILLER  1300.0</span></span><br><span class="line"><span class="comment">rows = 14</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="comment">// 6. close resource</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(res != <span class="keyword">null</span>) res.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(stmt != <span class="keyword">null</span>) stmt.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(conn != <span class="keyword">null</span>) conn.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于遍历Resultset"><a href="#关于遍历Resultset" class="headerlink" title="关于遍历Resultset"></a>关于遍历Resultset</h2><p><img src="%E9%81%8D%E5%8E%86Resultset.png" alt="遍历Resultset"></p><h2 id="注册驱动的两种方法"><a href="#注册驱动的两种方法" class="headerlink" title="注册驱动的两种方法"></a>注册驱动的两种方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">tt2</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">// 1. 注册驱动</span></span><br><span class="line"><span class="comment">/*1.1 第一种方法</span></span><br><span class="line"><span class="comment">多态：左边是java中的接口，右边是mysql实现类</span></span><br><span class="line"><span class="comment">Driver dirver = new com.mysql.cj.jdbc.Driver();</span></span><br><span class="line"><span class="comment">DriverManager.registerDriver(dirver);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*1.2 第二种方法（常用）参数是字符串可以写到配置文件中</span></span><br><span class="line"><span class="comment">com.mysql.cj.jdbc.Driver() 类中静态代码块有相关代码</span></span><br><span class="line"><span class="comment">利用类加载执行静态代码块动作</span></span><br><span class="line"><span class="comment">Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 获取连接</span></span><br><span class="line">String url = <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/sunlie&quot;</span>;</span><br><span class="line">String user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">String password = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">conn = DriverManager.getConnection(url, user, password);</span><br><span class="line">System.out.println(<span class="string">&quot;数据库连接对象 = &quot;</span> + conn);</span><br><span class="line"><span class="comment">// 数据库连接对象 = com.mysql.cj.jdbc.ConnectionImpl@3f200884</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="将连接数据库的所有信息放入配置文件中"><a href="#将连接数据库的所有信息放入配置文件中" class="headerlink" title="将连接数据库的所有信息放入配置文件中"></a>将连接数据库的所有信息放入配置文件中</h1><h2 id="properties-file"><a href="#properties-file" class="headerlink" title="properties file"></a>properties file</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/sunlie</span></span><br><span class="line"><span class="attr">user</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure><h2 id="java-file"><a href="#java-file" class="headerlink" title="java file"></a>java file</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">tt3</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">// 0. bind resource file</span></span><br><span class="line">ResourceBundle bundle = ResourceBundle.getBundle(<span class="string">&quot;tt3&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. register driver</span></span><br><span class="line">String driver = bundle.getString(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;driver = &quot;</span> + driver);</span><br><span class="line"></span><br><span class="line">Class.forName(driver);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. get connection</span></span><br><span class="line">String url = bundle.getString(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">String user = bundle.getString(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">String password = bundle.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;url = &quot;</span> + url);</span><br><span class="line">System.out.println(<span class="string">&quot;user = &quot;</span> + user);</span><br><span class="line">System.out.println(<span class="string">&quot;password = &quot;</span> + password);</span><br><span class="line"></span><br><span class="line">Connection conn = DriverManager.getConnection(url, user, password);</span><br><span class="line">System.out.println(<span class="string">&quot;Database connection object = &quot;</span> + conn);</span><br><span class="line"><span class="comment">// Database connection object = com.mysql.cj.jdbc.ConnectionImpl@4d339552</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JDBC </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【76-95】34道作业题</title>
      <link href="/2022/02/17/MySQL/%E3%80%9076-95%E3%80%9134%E9%81%93%E4%BD%9C%E4%B8%9A%E9%A2%98/"/>
      <url>/2022/02/17/MySQL/%E3%80%9076-95%E3%80%9134%E9%81%93%E4%BD%9C%E4%B8%9A%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="相关表"><a href="#相关表" class="headerlink" title="相关表"></a>相关表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+-----------+------+------------+---------+---------+--------+</span></span><br><span class="line"><span class="operator">|</span> EMPNO <span class="operator">|</span> ENAME  <span class="operator">|</span> JOB       <span class="operator">|</span> MGR  <span class="operator">|</span> HIREDATE   <span class="operator">|</span> SAL     <span class="operator">|</span> COMM    <span class="operator">|</span> DEPTNO <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+-----------+------+------------+---------+---------+--------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7369</span> <span class="operator">|</span> SMITH  <span class="operator">|</span> CLERK     <span class="operator">|</span> <span class="number">7902</span> <span class="operator">|</span> <span class="number">1980</span><span class="number">-12</span><span class="number">-17</span> <span class="operator">|</span>  <span class="number">800.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7499</span> <span class="operator">|</span> ALLEN  <span class="operator">|</span> SALESMAN  <span class="operator">|</span> <span class="number">7698</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-02</span><span class="number">-20</span> <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span>  <span class="number">300.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7521</span> <span class="operator">|</span> WARD   <span class="operator">|</span> SALESMAN  <span class="operator">|</span> <span class="number">7698</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-02</span><span class="number">-22</span> <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span>  <span class="number">500.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7566</span> <span class="operator">|</span> JONES  <span class="operator">|</span> MANAGER   <span class="operator">|</span> <span class="number">7839</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-04</span><span class="number">-02</span> <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7654</span> <span class="operator">|</span> MARTIN <span class="operator">|</span> SALESMAN  <span class="operator">|</span> <span class="number">7698</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-09</span><span class="number">-28</span> <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span> <span class="number">1400.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7698</span> <span class="operator">|</span> BLAKE  <span class="operator">|</span> MANAGER   <span class="operator">|</span> <span class="number">7839</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-05</span><span class="number">-01</span> <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7782</span> <span class="operator">|</span> CLARK  <span class="operator">|</span> MANAGER   <span class="operator">|</span> <span class="number">7839</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-06</span><span class="number">-09</span> <span class="operator">|</span> <span class="number">2450.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7788</span> <span class="operator">|</span> SCOTT  <span class="operator">|</span> ANALYST   <span class="operator">|</span> <span class="number">7566</span> <span class="operator">|</span> <span class="number">1987</span><span class="number">-04</span><span class="number">-19</span> <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7839</span> <span class="operator">|</span> KING   <span class="operator">|</span> PRESIDENT <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-11</span><span class="number">-17</span> <span class="operator">|</span> <span class="number">5000.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7844</span> <span class="operator">|</span> TURNER <span class="operator">|</span> SALESMAN  <span class="operator">|</span> <span class="number">7698</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-09</span><span class="number">-08</span> <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span>    <span class="number">0.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7876</span> <span class="operator">|</span> ADAMS  <span class="operator">|</span> CLERK     <span class="operator">|</span> <span class="number">7788</span> <span class="operator">|</span> <span class="number">1987</span><span class="number">-05</span><span class="number">-23</span> <span class="operator">|</span> <span class="number">1100.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7900</span> <span class="operator">|</span> JAMES  <span class="operator">|</span> CLERK     <span class="operator">|</span> <span class="number">7698</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-12</span><span class="number">-03</span> <span class="operator">|</span>  <span class="number">950.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7902</span> <span class="operator">|</span> FORD   <span class="operator">|</span> ANALYST   <span class="operator">|</span> <span class="number">7566</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-12</span><span class="number">-03</span> <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7934</span> <span class="operator">|</span> MILLER <span class="operator">|</span> CLERK     <span class="operator">|</span> <span class="number">7782</span> <span class="operator">|</span> <span class="number">1982</span><span class="number">-01</span><span class="number">-23</span> <span class="operator">|</span> <span class="number">1300.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+-----------+------+------------+---------+---------+--------+</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span> DEPTNO <span class="operator">|</span> DNAME      <span class="operator">|</span> LOC      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> ACCOUNTING <span class="operator">|</span> <span class="keyword">NEW</span> YORK <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> RESEARCH   <span class="operator">|</span> DALLAS   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> SALES      <span class="operator">|</span> CHICAGO  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">40</span> <span class="operator">|</span> OPERATIONS <span class="operator">|</span> BOSTON   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> salgrade;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> GRADE <span class="operator">|</span> LOSAL <span class="operator">|</span> HISAL <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span>   <span class="number">700</span> <span class="operator">|</span>  <span class="number">1200</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span>  <span class="number">1201</span> <span class="operator">|</span>  <span class="number">1400</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">3</span> <span class="operator">|</span>  <span class="number">1401</span> <span class="operator">|</span>  <span class="number">2000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span>  <span class="number">2001</span> <span class="operator">|</span>  <span class="number">3000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">5</span> <span class="operator">|</span>  <span class="number">3001</span> <span class="operator">|</span>  <span class="number">9999</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------+-------+</span></span><br></pre></td></tr></table></figure><h1 id="1-取得每个部门最高薪水的人员名称"><a href="#1-取得每个部门最高薪水的人员名称" class="headerlink" title="1. 取得每个部门最高薪水的人员名称"></a>1. 取得每个部门最高薪水的人员名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 取出每个部门最高薪水  </span></span><br><span class="line"><span class="keyword">select</span> deptno, <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 取得每个部门最高薪水的人员名称</span></span><br><span class="line"><span class="keyword">select</span> a.deptno, a.ename, a.sal</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">join</span> (<span class="keyword">select</span> deptno, <span class="built_in">max</span>(sal) maxsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno) b</span><br><span class="line"><span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno <span class="keyword">and</span> a.sal <span class="operator">=</span> b.maxsal;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2-哪些人的薪水在部门平均薪水之上"><a href="#2-哪些人的薪水在部门平均薪水之上" class="headerlink" title="2. 哪些人的薪水在部门平均薪水之上"></a>2. 哪些人的薪水在部门平均薪水之上</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 每个部门的平均薪水</span></span><br><span class="line"><span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 哪些人的薪水在部门平均薪水之上</span></span><br><span class="line"><span class="keyword">select</span> a.ename, a.sal, a.deptno, b.avgsal</span><br><span class="line"><span class="keyword">from</span> emp a,</span><br><span class="line">(<span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno) b</span><br><span class="line"><span class="keyword">where</span> a.deptno <span class="operator">=</span> b.deptno <span class="keyword">and</span> a.sal <span class="operator">&gt;</span> b.avgsal;</span><br></pre></td></tr></table></figure><h1 id="3-取得部门中（所有人的）平均的薪水等级"><a href="#3-取得部门中（所有人的）平均的薪水等级" class="headerlink" title="3. 取得部门中（所有人的）平均的薪水等级"></a>3. 取得部门中（所有人的）平均的薪水等级</h1><ol><li>平均的薪水等级: 先计算每一个薪水的等级，然后找出薪水等级的平均值  </li><li>平均薪水的等级: 先计算平均薪水，然后找出每个平均薪水的等级值  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 求出每个人的薪水等级</span></span><br><span class="line"><span class="keyword">select</span> a.ename, a.sal, a.deptno, b.grade </span><br><span class="line"><span class="keyword">from</span> emp a, salgrade b</span><br><span class="line"><span class="keyword">where</span> a.sal <span class="keyword">between</span> b.losal <span class="keyword">and</span> b.hisal;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 取得部门中（所有人的）平均的薪水等级</span></span><br><span class="line"><span class="keyword">select</span> a.deptno, <span class="built_in">avg</span>(b.grade)</span><br><span class="line"><span class="keyword">from</span> emp a, salgrade b</span><br><span class="line"><span class="keyword">where</span> a.sal <span class="keyword">between</span> b.losal <span class="keyword">and</span> b.hisal</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> a.deptno;</span><br></pre></td></tr></table></figure></li></ol><h1 id="4-不准用组函数（Max），取出最高薪水（给出两种解决方案）"><a href="#4-不准用组函数（Max），取出最高薪水（给出两种解决方案）" class="headerlink" title="4. 不准用组函数（Max），取出最高薪水（给出两种解决方案）"></a>4. 不准用组函数（Max），取出最高薪水（给出两种解决方案）</h1><ul><li><p>第一种</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> limit <span class="number">1</span>;</span><br></pre></td></tr></table></figure></li><li><p>第二种</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 表的自连接 可以发现没有出现最高薪水</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> a.sal </span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">join</span> emp b</span><br><span class="line"><span class="keyword">on</span> a.sal <span class="operator">&lt;</span> b.sal;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 取出最高薪水</span></span><br><span class="line"><span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">not</span> <span class="keyword">in</span>(</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> a.sal </span><br><span class="line">    <span class="keyword">from</span> emp a</span><br><span class="line">    <span class="keyword">join</span> emp b</span><br><span class="line">    <span class="keyword">on</span> a.sal <span class="operator">&lt;</span> b.sal</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><h1 id="5-取得平均薪水最高的部门的部门编号（至少给出两种解决方案）"><a href="#5-取得平均薪水最高的部门的部门编号（至少给出两种解决方案）" class="headerlink" title="5. 取得平均薪水最高的部门的部门编号（至少给出两种解决方案）"></a>5. 取得平均薪水最高的部门的部门编号（至少给出两种解决方案）</h1><ul><li><p>第一种</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> avgsal <span class="keyword">desc</span> limit <span class="number">1</span>;</span><br></pre></td></tr></table></figure></li><li><p>第二种</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 取出最高薪水</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(a.avgsal)</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno) a;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 取得平均薪水最高的部门的部门编号</span></span><br><span class="line"><span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) avgsal </span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno </span><br><span class="line"><span class="keyword">having</span> avgsal <span class="operator">=</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">max</span>(a.avgsal)</span><br><span class="line">    <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno) a</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><h1 id="6-取出平均薪水最高的部门的部门名称"><a href="#6-取出平均薪水最高的部门的部门名称" class="headerlink" title="6. 取出平均薪水最高的部门的部门名称"></a>6. 取出平均薪水最高的部门的部门名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 取出平均薪水最高的部门编号</span></span><br><span class="line"><span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) avgsal </span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> avgsal <span class="keyword">desc</span> limit <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 取出平均薪水最高的部门的部门名称</span></span><br><span class="line"><span class="keyword">select</span> dname</span><br><span class="line"><span class="keyword">from</span> dept a</span><br><span class="line"><span class="keyword">join</span> (</span><br><span class="line">    <span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) avgsal </span><br><span class="line">    <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno </span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> avgsal <span class="keyword">desc</span> limit <span class="number">1</span></span><br><span class="line">) b</span><br><span class="line"><span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><h1 id="7-求平均薪水的等级最低的部门的部门名称"><a href="#7-求平均薪水的等级最低的部门的部门名称" class="headerlink" title="7. 求平均薪水的等级最低的部门的部门名称"></a>7. 求平均薪水的等级最低的部门的部门名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 求每个部门平均薪水的最低的</span></span><br><span class="line"><span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> avgsal <span class="keyword">asc</span> limit <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 求最低的平均薪水的等级</span></span><br><span class="line"><span class="keyword">select</span> grade</span><br><span class="line"><span class="keyword">from</span> salgrade a</span><br><span class="line"><span class="keyword">where</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> avgsal <span class="keyword">asc</span> limit <span class="number">1</span>) </span><br><span class="line"><span class="keyword">between</span> a.losal <span class="keyword">and</span> a.hisal;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 平均薪水的等级最低的部门的部门名称</span></span><br><span class="line"><span class="keyword">select</span> a.deptno, c.dname, a.avgsal, b.grade</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno) a</span><br><span class="line"><span class="keyword">join</span> salgrade b</span><br><span class="line"><span class="keyword">on</span> a.avgsal <span class="keyword">between</span> b.losal <span class="keyword">and</span> b.hisal</span><br><span class="line"><span class="keyword">join</span> dept c</span><br><span class="line"><span class="keyword">on</span> a.deptno <span class="operator">=</span> c.deptno</span><br><span class="line"><span class="keyword">where</span> b.grade <span class="operator">=</span> (</span><br><span class="line">    <span class="keyword">select</span> grade</span><br><span class="line">    <span class="keyword">from</span> salgrade a</span><br><span class="line">    <span class="keyword">where</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> avgsal <span class="keyword">asc</span> limit <span class="number">1</span>) </span><br><span class="line">    <span class="keyword">between</span> a.losal <span class="keyword">and</span> a.hisal</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="8-取得比普通员工（员工代码没有在mgr字段上出现的）的最高薪水还要高的领导人名字"><a href="#8-取得比普通员工（员工代码没有在mgr字段上出现的）的最高薪水还要高的领导人名字" class="headerlink" title="8. 取得比普通员工（员工代码没有在mgr字段上出现的）的最高薪水还要高的领导人名字"></a>8. 取得比普通员工（员工代码没有在mgr字段上出现的）的最高薪水还要高的领导人名字</h1><ul><li>not in(集合) 如果集合有空的话需要手动排除  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 取得普通员工的最高薪水</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">where</span> empno <span class="keyword">not</span> <span class="keyword">in</span>(<span class="keyword">select</span> <span class="keyword">distinct</span> mgr <span class="keyword">from</span> emp <span class="keyword">where</span> mgr <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 取得领导人名字</span></span><br><span class="line"><span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line">    <span class="keyword">where</span> empno <span class="keyword">not</span> <span class="keyword">in</span>(<span class="keyword">select</span> <span class="keyword">distinct</span> mgr <span class="keyword">from</span> emp <span class="keyword">where</span> mgr <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>)</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="9-取得薪水最高的前五名员工"><a href="#9-取得薪水最高的前五名员工" class="headerlink" title="9. 取得薪水最高的前五名员工"></a>9. 取得薪水最高的前五名员工</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> limit <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h1 id="10-取得薪水最高的第六道第十名员工"><a href="#10-取得薪水最高的第六道第十名员工" class="headerlink" title="10. 取得薪水最高的第六道第十名员工"></a>10. 取得薪水最高的第六道第十名员工</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> limit <span class="number">5</span>, <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h1 id="11-取得最后入职的五名员工"><a href="#11-取得最后入职的五名员工" class="headerlink" title="11. 取得最后入职的五名员工"></a>11. 取得最后入职的五名员工</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename, hiredate <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> hiredate <span class="keyword">desc</span> limit <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h1 id="12-取得每个薪水等级有多少员工"><a href="#12-取得每个薪水等级有多少员工" class="headerlink" title="12. 取得每个薪水等级有多少员工"></a>12. 取得每个薪水等级有多少员工</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> b.grade, <span class="built_in">count</span>(b.grade)</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">join</span> salgrade b</span><br><span class="line"><span class="keyword">on</span> a.sal <span class="keyword">between</span> b.losal <span class="keyword">and</span> b.hisal</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> b.grade;</span><br></pre></td></tr></table></figure><h1 id="13-面试题"><a href="#13-面试题" class="headerlink" title="13. 面试题"></a>13. 面试题</h1><ol><li><p>有3个表 S(学生表)，C(课程表), SC(学生选课表)  </p></li><li><p>S (SNO, SNAME) 代表 (学号,姓名)  </p></li><li><p>C (CNO, CNAME, CTEACHER) 代表 (课号, 课名, 教师)</p></li><li><p>SC (SNO, CNO, SCGRADE) 代表 (学号, 课号, 成绩)<br>问题:</p></li><li><p>找出没选过”黎明”老师的所有学生姓名  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出&quot;黎明&quot;老师教的课号</span></span><br><span class="line"><span class="keyword">select</span> cno</span><br><span class="line"><span class="keyword">from</span> c</span><br><span class="line"><span class="keyword">where</span> cteacher <span class="operator">=</span> <span class="string">&#x27;黎明&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 找出&quot;黎明&quot;老师教的学生的学号</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> sc.sno</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">join</span> (</span><br><span class="line">    <span class="keyword">select</span> cno</span><br><span class="line">    <span class="keyword">from</span> c</span><br><span class="line">    <span class="keyword">where</span> cteacher <span class="operator">=</span> <span class="string">&#x27;黎明&#x27;</span></span><br><span class="line">) t</span><br><span class="line"><span class="keyword">on</span> sc.cno <span class="operator">=</span> t.cno;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 找出没选过&quot;黎明&quot;老师的所有学生姓名 </span></span><br><span class="line"><span class="keyword">select</span> s.sname</span><br><span class="line"><span class="keyword">from</span> s</span><br><span class="line"><span class="keyword">where</span> s.sno <span class="keyword">not</span> <span class="keyword">in</span>(</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> sc.sno</span><br><span class="line">    <span class="keyword">from</span> sc</span><br><span class="line">    <span class="keyword">join</span> (</span><br><span class="line">        <span class="keyword">select</span> cno</span><br><span class="line">        <span class="keyword">from</span> c</span><br><span class="line">        <span class="keyword">where</span> cteacher <span class="operator">=</span> <span class="string">&#x27;黎明&#x27;</span></span><br><span class="line">    ) t</span><br><span class="line">    <span class="keyword">on</span> sc.cno <span class="operator">=</span> t.cno</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>列出2门以上(含2门)不及格学生姓名及平均成绩</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 列出2门以上(含2门)不及格的学生学号</span></span><br><span class="line"><span class="keyword">select</span> sc.sno</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> sc.scgrade <span class="operator">&lt;</span> <span class="number">60</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(sc.cno) <span class="operator">&gt;=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出每个学生的平均成绩</span></span><br><span class="line"><span class="keyword">select</span> sc.sno, <span class="built_in">avg</span>(sc.scgrade) avggrade</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.sno;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出2门以上(含2门)不及格学生姓名及平均成绩</span></span><br><span class="line"><span class="keyword">select</span> s.sname, j.avggrade</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> sc.sno</span><br><span class="line">    <span class="keyword">from</span> sc</span><br><span class="line">    <span class="keyword">where</span> sc.scgrade <span class="operator">&lt;</span> <span class="number">60</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> sc.sno</span><br><span class="line">    <span class="keyword">having</span> <span class="built_in">count</span>(sc.cno) <span class="operator">&gt;=</span> <span class="number">2</span></span><br><span class="line">) i</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> s</span><br><span class="line"><span class="keyword">on</span> i.sno <span class="operator">=</span> s.sno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> (</span><br><span class="line">    <span class="keyword">select</span> sc.sno, <span class="built_in">avg</span>(sc.scgrade) avggrade</span><br><span class="line">    <span class="keyword">from</span> sc</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> sc.sno</span><br><span class="line">) j</span><br><span class="line"><span class="keyword">on</span> i.sno <span class="operator">=</span> j.sno;</span><br></pre></td></tr></table></figure></li><li><p>即学过1号课程又学过2号课所有学生的姓名  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 学过1号课程的学生学号</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> sc.sno</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> sc.cno <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学过2号课程的学生学号</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> sc.sno</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> sc.cmo <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 即学过1号课程又学过2号课所有学生的姓名  </span></span><br><span class="line"><span class="keyword">select</span> s.sname</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> sc.sno</span><br><span class="line">    <span class="keyword">from</span> sc</span><br><span class="line">    <span class="keyword">where</span> sc.cno <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">) a</span><br><span class="line"><span class="keyword">join</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> sc.sno</span><br><span class="line">    <span class="keyword">from</span> sc</span><br><span class="line">    <span class="keyword">where</span> sc.cmo <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">) b</span><br><span class="line"><span class="keyword">on</span> a.sno <span class="operator">=</span> b.sno</span><br><span class="line"><span class="keyword">join</span> s</span><br><span class="line"><span class="keyword">on</span> a.sno <span class="operator">=</span> s.sno;</span><br></pre></td></tr></table></figure></li></ol><h1 id="14-列出所有员工及领导的姓名"><a href="#14-列出所有员工及领导的姓名" class="headerlink" title="14. 列出所有员工及领导的姓名"></a>14. 列出所有员工及领导的姓名</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.ename, ifnull(b.ename, &quot;无上级&quot;)</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> emp b</span><br><span class="line"><span class="keyword">on</span> a.mgr <span class="operator">=</span> b.empno;</span><br></pre></td></tr></table></figure><h1 id="15-列出受雇日期早于其直接上级的所有员工的编号，姓名，部门名称"><a href="#15-列出受雇日期早于其直接上级的所有员工的编号，姓名，部门名称" class="headerlink" title="15. 列出受雇日期早于其直接上级的所有员工的编号，姓名，部门名称"></a>15. 列出受雇日期早于其直接上级的所有员工的编号，姓名，部门名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.empno, a.ename, a.hiredate, b.empno, b.ename, b.hiredate, c.dname</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">join</span> emp b</span><br><span class="line"><span class="keyword">on</span> a.mgr <span class="operator">=</span> b.empno</span><br><span class="line"><span class="keyword">join</span> dept c</span><br><span class="line"><span class="keyword">on</span> a.deptno <span class="operator">=</span> c.deptno</span><br><span class="line"><span class="keyword">where</span> a.hiredate <span class="operator">&lt;</span> b.hiredate;</span><br></pre></td></tr></table></figure><h1 id="16-列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门"><a href="#16-列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门" class="headerlink" title="16. 列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门"></a>16. 列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> dept a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> emp b</span><br><span class="line"><span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><h1 id="17-列出至少有五个员工的所有部门"><a href="#17-列出至少有五个员工的所有部门" class="headerlink" title="17. 列出至少有五个员工的所有部门"></a>17. 列出至少有五个员工的所有部门</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> b.<span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> dept b</span><br><span class="line"><span class="keyword">join</span> (</span><br><span class="line">    <span class="keyword">select</span> a.deptno</span><br><span class="line">    <span class="keyword">from</span> emp a</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> a.deptno</span><br><span class="line">    <span class="keyword">having</span> <span class="built_in">count</span>(a.deptno) <span class="operator">&gt;=</span> <span class="number">5</span></span><br><span class="line">) c</span><br><span class="line"><span class="keyword">on</span> b.deptno <span class="operator">=</span> c.deptno;</span><br></pre></td></tr></table></figure><h1 id="18-列出薪水比”SMITH”多的所有员工信息"><a href="#18-列出薪水比”SMITH”多的所有员工信息" class="headerlink" title="18. 列出薪水比”SMITH”多的所有员工信息"></a>18. 列出薪水比”SMITH”多的所有员工信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">where</span> a.sal <span class="operator">&gt;</span> (</span><br><span class="line">    <span class="keyword">select</span> b.sal</span><br><span class="line">    <span class="keyword">from</span> emp b</span><br><span class="line">    <span class="keyword">where</span> b.ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="19-列出所有”CLERK”（办事员）的姓名及其部门名称，部门的人数"><a href="#19-列出所有”CLERK”（办事员）的姓名及其部门名称，部门的人数" class="headerlink" title="19. 列出所有”CLERK”（办事员）的姓名及其部门名称，部门的人数"></a>19. 列出所有”CLERK”（办事员）的姓名及其部门名称，部门的人数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 列出所有&quot;CLERK&quot;的姓名和部门编号</span></span><br><span class="line"><span class="keyword">select</span> a.ename, a.deptno</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">where</span> a.job <span class="operator">=</span> <span class="string">&#x27;CLERK&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出所有部门的人数</span></span><br><span class="line"><span class="keyword">select</span> b.deptno, <span class="built_in">count</span>(b.deptno)</span><br><span class="line"><span class="keyword">from</span> emp b</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> b.deptno;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出所有&quot;CLERK&quot;（办事员）的姓名及其部门名称，部门的人数</span></span><br><span class="line"><span class="keyword">select</span> c.ename, e.dname, d.cnt</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> a.ename, a.deptno</span><br><span class="line">    <span class="keyword">from</span> emp a</span><br><span class="line">    <span class="keyword">where</span> a.job <span class="operator">=</span> <span class="string">&#x27;CLERK&#x27;</span></span><br><span class="line">) c</span><br><span class="line"><span class="keyword">join</span> (</span><br><span class="line">    <span class="keyword">select</span> b.deptno, <span class="built_in">count</span>(b.deptno) cnt</span><br><span class="line">    <span class="keyword">from</span> emp b</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> b.deptno</span><br><span class="line">) d</span><br><span class="line"><span class="keyword">on</span> c.deptno <span class="operator">=</span> d.deptno</span><br><span class="line"><span class="keyword">join</span> dept e</span><br><span class="line"><span class="keyword">on</span> e.deptno <span class="operator">=</span> c.deptno;</span><br></pre></td></tr></table></figure><h1 id="20-列出最低薪金大于1500的各种工作及从事此工作的全部雇佣人数"><a href="#20-列出最低薪金大于1500的各种工作及从事此工作的全部雇佣人数" class="headerlink" title="20. 列出最低薪金大于1500的各种工作及从事此工作的全部雇佣人数"></a>20. 列出最低薪金大于1500的各种工作及从事此工作的全部雇佣人数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.job, <span class="built_in">count</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> a.job</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">min</span>(a.sal) <span class="operator">&gt;</span> <span class="number">1500</span>;</span><br></pre></td></tr></table></figure><h1 id="21-列出在部门”SALES”-lt-销售部-gt-工作的员工的姓名，假定不知道销售部的部门编号"><a href="#21-列出在部门”SALES”-lt-销售部-gt-工作的员工的姓名，假定不知道销售部的部门编号" class="headerlink" title="21. 列出在部门”SALES”&lt;销售部&gt;工作的员工的姓名，假定不知道销售部的部门编号"></a>21. 列出在部门”SALES”&lt;销售部&gt;工作的员工的姓名，假定不知道销售部的部门编号</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出销售部的部门编号</span></span><br><span class="line"><span class="keyword">select</span> a.deptno</span><br><span class="line"><span class="keyword">from</span> dept a</span><br><span class="line"><span class="keyword">where</span> a.dname <span class="operator">=</span> <span class="string">&#x27;SALES&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出在部门&quot;SALES&quot;&lt;销售部&gt;工作的员工的姓名，假定不知道销售部的部门编号</span></span><br><span class="line"><span class="keyword">select</span> b.ename</span><br><span class="line"><span class="keyword">from</span> emp b</span><br><span class="line"><span class="keyword">where</span> b.deptno <span class="operator">=</span> (</span><br><span class="line">    <span class="keyword">select</span> a.deptno</span><br><span class="line">    <span class="keyword">from</span> dept a</span><br><span class="line">    <span class="keyword">where</span> a.dname <span class="operator">=</span> <span class="string">&#x27;SALES&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="22-列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，雇员的工资等级"><a href="#22-列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，雇员的工资等级" class="headerlink" title="22. 列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，雇员的工资等级"></a>22. 列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，雇员的工资等级</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 高于平均薪水的所有员工</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">where</span> a.sal <span class="operator">&gt;</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">avg</span>(b.sal)</span><br><span class="line">    <span class="keyword">from</span> emp b</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，雇员的工资等级</span></span><br><span class="line"><span class="keyword">select</span> c.empno, c.ename, c.deptno, c.mgr, d.grade</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> a.empno, a.ename, a.mgr, a.sal, a.deptno</span><br><span class="line">    <span class="keyword">from</span> emp a</span><br><span class="line">    <span class="keyword">where</span> a.sal <span class="operator">&gt;</span> (</span><br><span class="line">        <span class="keyword">select</span> <span class="built_in">avg</span>(b.sal)</span><br><span class="line">        <span class="keyword">from</span> emp b</span><br><span class="line">    )</span><br><span class="line">) c</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> salgrade d</span><br><span class="line"><span class="keyword">on</span> c.sal <span class="keyword">between</span> d.losal <span class="keyword">and</span> d.hisal;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="23-列出与”SCOTT”从事相同工作的所有员工及部门名称"><a href="#23-列出与”SCOTT”从事相同工作的所有员工及部门名称" class="headerlink" title="23. 列出与”SCOTT”从事相同工作的所有员工及部门名称"></a>23. 列出与”SCOTT”从事相同工作的所有员工及部门名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出&quot;SCOTT&quot;从事的工作</span></span><br><span class="line"><span class="keyword">select</span> a.job</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">where</span> a.ename <span class="operator">=</span> <span class="string">&#x27;SCOTT&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出与&quot;SCOTT&quot;从事相同工作的所有员工及部门名称</span></span><br><span class="line"><span class="keyword">select</span> b.empno, b.ename, d.deptno, d.dname</span><br><span class="line"><span class="keyword">from</span> emp b</span><br><span class="line"><span class="keyword">join</span> (</span><br><span class="line">    <span class="keyword">select</span> a.job</span><br><span class="line">    <span class="keyword">from</span> emp a</span><br><span class="line">    <span class="keyword">where</span> a.ename <span class="operator">=</span> <span class="string">&#x27;SCOTT&#x27;</span></span><br><span class="line">) c</span><br><span class="line"><span class="keyword">on</span> b.job <span class="operator">=</span> c.job</span><br><span class="line"><span class="keyword">join</span> dept d</span><br><span class="line"><span class="keyword">on</span> b.deptno <span class="operator">=</span> d.deptno</span><br><span class="line"><span class="keyword">where</span> b.ename <span class="operator">&lt;&gt;</span> <span class="string">&#x27;SCOTT&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="24-列出薪金等于部门30中员工的薪金的其他员工的姓名和薪金"><a href="#24-列出薪金等于部门30中员工的薪金的其他员工的姓名和薪金" class="headerlink" title="24. 列出薪金等于部门30中员工的薪金的其他员工的姓名和薪金"></a>24. 列出薪金等于部门30中员工的薪金的其他员工的姓名和薪金</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 30部门员工的薪金</span></span><br><span class="line"><span class="keyword">select</span> a.sal</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">where</span> a.deptno <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出薪金等于部门30中员工的薪金的其他员工的姓名和薪金</span></span><br><span class="line"><span class="keyword">select</span> b.ename, b.sal</span><br><span class="line"><span class="keyword">from</span> emp b</span><br><span class="line"><span class="keyword">where</span> b.sal <span class="keyword">in</span>(</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> a.sal</span><br><span class="line">    <span class="keyword">from</span> emp a</span><br><span class="line">    <span class="keyword">where</span> a.deptno <span class="operator">=</span> <span class="number">30</span></span><br><span class="line">) <span class="keyword">and</span> b.deptno <span class="operator">&lt;&gt;</span> <span class="number">30</span>;</span><br></pre></td></tr></table></figure><h1 id="25-列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金，部门名称"><a href="#25-列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金，部门名称" class="headerlink" title="25. 列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金，部门名称"></a>25. 列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金，部门名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在部门30工作的所有员工的最高薪金</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(a.sal)</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">where</span> a.deptno <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金，部门名称</span></span><br><span class="line"><span class="keyword">select</span> c.ename, c.sal, d.dname</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> b.ename, b.sal, b.deptno</span><br><span class="line">    <span class="keyword">from</span> emp b</span><br><span class="line">    <span class="keyword">where</span> b.sal <span class="operator">&gt;</span> (</span><br><span class="line">        <span class="keyword">select</span> <span class="built_in">max</span>(a.sal)</span><br><span class="line">        <span class="keyword">from</span> emp a</span><br><span class="line">        <span class="keyword">where</span> a.deptno <span class="operator">=</span> <span class="number">30</span></span><br><span class="line">    )</span><br><span class="line">) c</span><br><span class="line"><span class="keyword">join</span> dept d</span><br><span class="line"><span class="keyword">on</span> c.deptno <span class="operator">=</span> d.deptno;</span><br></pre></td></tr></table></figure><h1 id="26-列出在每个部门工作的员工数量，平均工资和平均服务期限"><a href="#26-列出在每个部门工作的员工数量，平均工资和平均服务期限" class="headerlink" title="26. 列出在每个部门工作的员工数量，平均工资和平均服务期限"></a>26. 列出在每个部门工作的员工数量，平均工资和平均服务期限</h1><ul><li>函数TimeStampDiff(间隔类型，前一个日期，后一个日期)  </li><li>间隔类型：SECOND秒,MINUTE分钟,HOUR小时,DAY天,WEEK星期,MONTH月,QUARTER季度,YEAR年   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.deptno, <span class="built_in">count</span>(b.empno), ifnull(<span class="built_in">avg</span>(b.sal),<span class="number">0</span>), <span class="built_in">avg</span>(TimeStampDiff(<span class="keyword">year</span>, b.hiredate, now()))</span><br><span class="line"><span class="keyword">from</span> dept a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> emp b</span><br><span class="line"><span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> a.deptno;</span><br></pre></td></tr></table></figure></li></ul><h1 id="27-列出所有员工的姓名、部门名称和工资"><a href="#27-列出所有员工的姓名、部门名称和工资" class="headerlink" title="27. 列出所有员工的姓名、部门名称和工资"></a>27. 列出所有员工的姓名、部门名称和工资</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.ename, b.dname, a.sal</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> dept b</span><br><span class="line"><span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><h1 id="28-列出所有部门的详细信息和人数"><a href="#28-列出所有部门的详细信息和人数" class="headerlink" title="28. 列出所有部门的详细信息和人数"></a>28. 列出所有部门的详细信息和人数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出所有部门的人数</span></span><br><span class="line"><span class="keyword">select</span> a.deptno, <span class="built_in">count</span>(a.deptno)</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> a.deptno;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出所有部门的详细信息和人数</span></span><br><span class="line"><span class="keyword">select</span> b.<span class="operator">*</span>, ifnull(c.cnt,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">from</span> dept b</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> (</span><br><span class="line">    <span class="keyword">select</span> a.deptno, <span class="built_in">count</span>(a.deptno) cnt</span><br><span class="line">    <span class="keyword">from</span> emp a</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> a.deptno</span><br><span class="line">) c</span><br><span class="line"><span class="keyword">on</span> b.deptno <span class="operator">=</span> c.deptno;</span><br></pre></td></tr></table></figure><h1 id="29-列出各种工作的最低工资及从事此工作的雇员姓名"><a href="#29-列出各种工作的最低工资及从事此工作的雇员姓名" class="headerlink" title="29. 列出各种工作的最低工资及从事此工作的雇员姓名"></a>29. 列出各种工作的最低工资及从事此工作的雇员姓名</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 列出各种工作的最低工资</span></span><br><span class="line"><span class="keyword">select</span> a.job, <span class="built_in">min</span>(a.sal)</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> a.job;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出各种工作的最低工资及从事此工作的雇员姓名</span></span><br><span class="line"><span class="keyword">select</span> b.job, b.minsal, c.ename, c.sal</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> a.job, <span class="built_in">min</span>(a.sal) minsal</span><br><span class="line">    <span class="keyword">from</span> emp a</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> a.job</span><br><span class="line">) b</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> emp c</span><br><span class="line"><span class="keyword">on</span> b.job <span class="operator">=</span> c.job <span class="keyword">and</span> b.minsal <span class="operator">=</span> c.sal;</span><br></pre></td></tr></table></figure><h1 id="30-列出各个部门的MANAGER（领导）的最低薪金"><a href="#30-列出各个部门的MANAGER（领导）的最低薪金" class="headerlink" title="30. 列出各个部门的MANAGER（领导）的最低薪金"></a>30. 列出各个部门的MANAGER（领导）的最低薪金</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.deptno, <span class="built_in">min</span>(a.sal)</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">where</span> a.job <span class="operator">=</span> <span class="string">&#x27;MANAGER&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> a.deptno;</span><br></pre></td></tr></table></figure><h1 id="31-列出所有员工的年工资，按年薪从低到高排序"><a href="#31-列出所有员工的年工资，按年薪从低到高排序" class="headerlink" title="31. 列出所有员工的年工资，按年薪从低到高排序"></a>31. 列出所有员工的年工资，按年薪从低到高排序</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.ename, (a.sal<span class="operator">+</span>ifnull(a.comm,<span class="number">0</span>))<span class="operator">*</span><span class="number">12</span> yearsal</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> yearsal <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure><h1 id="32-求出员工领导的薪水超过3000的员工名称与领导名称"><a href="#32-求出员工领导的薪水超过3000的员工名称与领导名称" class="headerlink" title="32. 求出员工领导的薪水超过3000的员工名称与领导名称"></a>32. 求出员工领导的薪水超过3000的员工名称与领导名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.ename, b.ename, b.sal</span><br><span class="line"><span class="keyword">from</span> emp a</span><br><span class="line"><span class="keyword">join</span> emp b</span><br><span class="line"><span class="keyword">on</span> a.mgr <span class="operator">=</span> b.empno</span><br><span class="line"><span class="keyword">where</span> b.sal <span class="operator">&gt;</span> <span class="number">3000</span>;</span><br></pre></td></tr></table></figure><h1 id="33-求出部门名称中，带’S’字符的部门员工的工资合计、部门人数"><a href="#33-求出部门名称中，带’S’字符的部门员工的工资合计、部门人数" class="headerlink" title="33. 求出部门名称中，带’S’字符的部门员工的工资合计、部门人数"></a>33. 求出部门名称中，带’S’字符的部门员工的工资合计、部门人数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出部门名称中带&#x27;S&#x27;字符的部门</span></span><br><span class="line"><span class="keyword">select</span> a.deptno, a.dname</span><br><span class="line"><span class="keyword">from</span> dept a</span><br><span class="line"><span class="keyword">where</span> a.dname <span class="keyword">like</span> <span class="string">&#x27;%S%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 求出部门名称中，带&#x27;S&#x27;字符的部门员工的工资合计、部门人数</span></span><br><span class="line"><span class="keyword">select</span> b.deptno, b.dname, ifnull(<span class="built_in">sum</span>(c.sal),<span class="number">0</span>), <span class="built_in">count</span>(c.ename)</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> a.deptno, a.dname</span><br><span class="line">    <span class="keyword">from</span> dept a</span><br><span class="line">    <span class="keyword">where</span> a.dname <span class="keyword">like</span> <span class="string">&#x27;%S%&#x27;</span></span><br><span class="line">) b</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> emp c</span><br><span class="line"><span class="keyword">on</span> b.deptno <span class="operator">=</span> c.deptno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> b.deptno;</span><br></pre></td></tr></table></figure><h1 id="34-给任职日期超过30年的员工加薪10"><a href="#34-给任职日期超过30年的员工加薪10" class="headerlink" title="34. 给任职日期超过30年的员工加薪10%"></a>34. 给任职日期超过30年的员工加薪10%</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update emp a</span><br><span class="line"><span class="keyword">set</span> a.sal <span class="operator">=</span> a.sal <span class="operator">*</span> <span class="number">1.1</span></span><br><span class="line"><span class="keyword">where</span> TimeStampDiff(<span class="keyword">year</span>, a.hiredate, now()) <span class="operator">&gt;</span> <span class="number">30</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【74-75】数据库设计三范式</title>
      <link href="/2022/02/15/MySQL/%E3%80%9074-75%E3%80%91%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E4%B8%89%E8%8C%83%E5%BC%8F/"/>
      <url>/2022/02/15/MySQL/%E3%80%9074-75%E3%80%91%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E4%B8%89%E8%8C%83%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="什么是设计范式"><a href="#什么是设计范式" class="headerlink" title="什么是设计范式"></a>什么是设计范式</h2><p>设计表的依据<br>按照三范式设计的表不会出现数据冗余  </p><h2 id="三范式是哪些"><a href="#三范式是哪些" class="headerlink" title="三范式是哪些"></a>三范式是哪些</h2><h3 id="第一范式"><a href="#第一范式" class="headerlink" title="第一范式"></a>第一范式</h3><ul><li>任何一张表都要有主键，每一个字段原子性不可再分  </li></ul><h3 id="第二范式"><a href="#第二范式" class="headerlink" title="第二范式"></a>第二范式</h3><ul><li>建立在第一范式的基础上，所有非主键字段完全依赖主键，不产生部份依赖<br><img src="%E7%AC%AC%E4%BA%8C%E8%8C%83%E5%BC%8F%E4%B8%BE%E4%BE%8B.png" alt="第二范式举例"></li></ul><h3 id="第三范式"><a href="#第三范式" class="headerlink" title="第三范式"></a>第三范式</h3><ul><li>建立在第二范式的基础上，所有非主键字段直接以来主键，不产生传递依赖<br><img src="%E7%AC%AC%E4%B8%89%E8%8C%83%E5%BC%8F%E4%B8%BE%E4%BE%8B.png" alt="第三范式举例"></li></ul><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul><li>在实际的开发中，以满足客户的需求为主，有的时候会拿冗余换执行速度  </li></ul><h2 id="关于一对一表的设计"><a href="#关于一对一表的设计" class="headerlink" title="关于一对一表的设计"></a>关于一对一表的设计</h2><h3 id="主键共享"><a href="#主键共享" class="headerlink" title="主键共享"></a>主键共享</h3><p><img src="%E4%B8%80%E5%AF%B9%E4%B8%80%E8%A1%A8%E8%AE%BE%E8%AE%A1%E4%B8%BB%E9%94%AE%E5%85%B1%E4%BA%AB.png" alt="一对一表设计主键共享"></p><h3 id="外键唯一"><a href="#外键唯一" class="headerlink" title="外键唯一"></a>外键唯一</h3><p><img src="%E4%B8%80%E5%AF%B9%E4%B8%80%E8%A1%A8%E8%AE%BE%E8%AE%A1%E5%A4%96%E9%94%AE%E5%94%AF%E4%B8%80.png" alt="一对一表设计外键唯一"></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【73-73】数据库数据导入导出</title>
      <link href="/2022/02/15/MySQL/%E3%80%9073-73%E3%80%91%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/"/>
      <url>/2022/02/15/MySQL/%E3%80%9073-73%E3%80%91%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="数据库数据导出"><a href="#数据库数据导出" class="headerlink" title="数据库数据导出"></a>数据库数据导出</h2><ul><li>在windowsdos命令窗口执行  </li></ul><h3 id="全部导出"><a href="#全部导出" class="headerlink" title="全部导出"></a>全部导出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump 数据库名&gt;路径 -uroot -p密码;</span><br></pre></td></tr></table></figure><h3 id="指定表导出"><a href="#指定表导出" class="headerlink" title="指定表导出"></a>指定表导出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump 数据库名 表名&gt;路径 -uroot -p密码;</span><br></pre></td></tr></table></figure><h2 id="数据库数据导入"><a href="#数据库数据导入" class="headerlink" title="数据库数据导入"></a>数据库数据导入</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database 数据库名;</span><br><span class="line">use 数据库名;</span><br><span class="line">source <span class="keyword">sql</span>文件路径; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【72-72】视图</title>
      <link href="/2022/02/15/MySQL/%E3%80%9072-72%E3%80%91%E8%A7%86%E5%9B%BE/"/>
      <url>/2022/02/15/MySQL/%E3%80%9072-72%E3%80%91%E8%A7%86%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="什么是视图-view"><a href="#什么是视图-view" class="headerlink" title="什么是视图 view"></a>什么是视图 view</h2><p>站在不同角度去看数据  </p><h2 id="怎么创建视图"><a href="#怎么创建视图" class="headerlink" title="怎么创建视图"></a>怎么创建视图</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> 视图名 <span class="keyword">as</span> (<span class="keyword">select</span>语句);</span><br></pre></td></tr></table></figure><h2 id="怎么删除视图"><a href="#怎么删除视图" class="headerlink" title="怎么删除视图"></a>怎么删除视图</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> 视图名;</span><br></pre></td></tr></table></figure><h2 id="对视图进行增删改查，会影响原表数据"><a href="#对视图进行增删改查，会影响原表数据" class="headerlink" title="对视图进行增删改查，会影响原表数据"></a>对视图进行增删改查，会影响原表数据</h2><p>可以对视图CRUD操作  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp_bak <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> myview1 <span class="keyword">as</span> <span class="keyword">select</span> empno,ename,sal <span class="keyword">from</span> emp_bak;</span><br><span class="line">update myview1 <span class="keyword">set</span> ename<span class="operator">=</span><span class="string">&#x27;hehe&#x27;</span>,sal<span class="operator">=</span><span class="number">1</span> <span class="keyword">where</span> empno <span class="operator">=</span> <span class="number">7369</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> myview1 <span class="keyword">where</span> empno <span class="operator">=</span> <span class="number">7369</span>;</span><br></pre></td></tr></table></figure><h2 id="视图作用"><a href="#视图作用" class="headerlink" title="视图作用"></a>视图作用</h2><ol><li>视图可以隐藏表的实现细节，保密级别较高的系统，之对外提供相关的视图，只对视图对象进行CRUD  </li></ol>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【71-71】索引</title>
      <link href="/2022/02/15/MySQL/%E3%80%9071-71%E3%80%91%E7%B4%A2%E5%BC%95/"/>
      <url>/2022/02/15/MySQL/%E3%80%9071-71%E3%80%91%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="什么是索引和作用"><a href="#什么是索引和作用" class="headerlink" title="什么是索引和作用"></a>什么是索引和作用</h2><ol><li>索引就像是一本书的目录，可以通过目录快速找到对应资源  </li><li>查询一张表的两种方式：全表扫描，根据索引检索（效率好）  </li><li>索引提高效率的原理就是缩小扫描范围  </li><li>索引也是数据库中的对象，也需要数据库不断维护，表中的数据经常被修改就不适合添加索引，因为数据一旦修改，索引需要重新排序维护  </li><li>添加索引是给某些字段添加索引  </li><li>如以下代码，如果ename上没有添加索引就全表扫描，添加索引就根据索引扫描   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>主键和具有unique约束的字段会自动添加索引，根据主键查询效率高    </li></ol><h2 id="给字段添加索引的条件"><a href="#给字段添加索引的条件" class="headerlink" title="给字段添加索引的条件"></a>给字段添加索引的条件</h2><ol><li>数据量庞大</li><li>该字段很少DML操作</li><li>该字段进场出现在where子句</li></ol><h2 id="索引采用的数据结构"><a href="#索引采用的数据结构" class="headerlink" title="索引采用的数据结构"></a>索引采用的数据结构</h2><p>Btree  </p><h2 id="索引的实现原理"><a href="#索引的实现原理" class="headerlink" title="索引的实现原理"></a>索引的实现原理</h2><ul><li>会在内存或者硬盘生成一个索引（取决于存储引擎），会将该字段数据自动排序，并分区存储到Btree上<br><img src="%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86.png" alt="创建索引原理.png"></li></ul><h2 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h2><ol><li>单一索引：单个字段添加索引  </li><li>复合索引：给多个字段联合起来添加一个索引  </li><li>主键索引：主键自动添加索引  </li><li>唯一索引：unique约束的字段上自动添加索引  </li></ol><h2 id="索引什么时候失效"><a href="#索引什么时候失效" class="headerlink" title="索引什么时候失效"></a>索引什么时候失效</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%A%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>模糊查询的时候，第一个通配符是’%’，这个时候索引是失效的  </p><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><h2 id="查看语句执行状况"><a href="#查看语句执行状况" class="headerlink" title="查看语句执行状况"></a>查看语句执行状况</h2><ul><li>以下 table 是 ALL 所以是全表扫描  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> <span class="number">5000</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key  <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> emp   <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>   <span class="number">14</span> <span class="operator">|</span>    <span class="number">10.00</span> <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="创建索引对象"><a href="#创建索引对象" class="headerlink" title="创建索引对象"></a>创建索引对象</h2><ul><li>给sal字段添加索引  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> index emp_sal_index <span class="keyword">on</span> emp(sal);</span><br><span class="line">explain <span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> index emp_sal_index <span class="keyword">on</span> emp(sal);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.04</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> <span class="number">5000</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key           <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> emp   <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> emp_sal_index <span class="operator">|</span> emp_sal_index <span class="operator">|</span> <span class="number">9</span>       <span class="operator">|</span> const <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="删除索引对象"><a href="#删除索引对象" class="headerlink" title="删除索引对象"></a>删除索引对象</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> index emp_sal_index <span class="keyword">on</span> emp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【61-70】事务</title>
      <link href="/2022/02/14/MySQL/%E3%80%9061-70%E3%80%91%E4%BA%8B%E5%8A%A1/"/>
      <url>/2022/02/14/MySQL/%E3%80%9061-70%E3%80%91%E4%BA%8B%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h2><ol><li>一个事务时一个完整的业务逻辑单元，不可再分  </li><li>比如转账一方+100，另一方-100，两个update操作不可分，所以这两条DML语句同时成功或者同时失败，使用事务来实现  </li></ol><h2 id="事务作用"><a href="#事务作用" class="headerlink" title="事务作用"></a>事务作用</h2><ol><li>和事务相关的语句只有：DML语句（insert delete update）  </li><li>保证数据完整性，安全性  </li></ol><h2 id="事务特性"><a href="#事务特性" class="headerlink" title="事务特性"></a>事务特性</h2><ol><li>ACID 四大特性</li><li>A 原子性：事务时最小的工作单元，不可再分    </li><li>C 一致性：事务必须保证多条DML语句同时成功或者同时失败  </li><li>I 隔离性：事务A与事务B之间具有隔离  </li><li>D 持久性：最终数据必须持久化到硬盘文件中   </li></ol><h2 id="事务的隔离性"><a href="#事务的隔离性" class="headerlink" title="事务的隔离性"></a>事务的隔离性</h2><ul><li>事务隔离性存在隔离级别，理论上隔离级别包括4个  </li></ul><ol><li>第一级别：读未提交（read uncommitted）<br>对方事务未提交，当前事务可以读取到对方未提交的数据<br>读未提交存在脏读（Dirty Read）现象：读到脏数据  </li><li>第二级别：读已提交（read committed）<br>对方事务提交之后的数据我方可以读到<br>这种级别解决了脏读现象<br>读已提交存在的问题是：不可重复读<br>不可重复读就是读表的结果不确定，可能在不同时间读到的结果不同  </li><li>第三级别：可重复读（repeatable read）<br>解决了不可重复读问题<br>这种级别存在的问题：读取到的数据是幻象  </li><li>第四级别：序列化读/串行化读（serializable）<br>解决了所有问题，但效率低，需要事务排队  </li><li>Oracle默认是：读已提交  </li><li>MySQL默认是：可重复读  </li></ol><h1 id="演示事务"><a href="#演示事务" class="headerlink" title="演示事务"></a>演示事务</h1><ul><li>MySQL默认情况下是自动提交的，自动提交就是执行任意一条DML语句就提交一次</li><li>start transaction 关闭自动提交   </li></ul><h2 id="未关闭自动提交"><a href="#未关闭自动提交" class="headerlink" title="未关闭自动提交"></a>未关闭自动提交</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(name) <span class="keyword">values</span>(<span class="string">&#x27;zs&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="keyword">rollback</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     name <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.03</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(name) <span class="keyword">values</span>(<span class="string">&#x27;zs&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> zs   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">rollback</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> zs   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="关闭自动提交"><a href="#关闭自动提交" class="headerlink" title="关闭自动提交"></a>关闭自动提交</h2><ul><li>rollback 后事务结束，要再次开启需要重新 start transaction  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">start</span> transaction;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(name) <span class="keyword">values</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="keyword">rollback</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">start</span> transaction;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(name) <span class="keyword">values</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> zs   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> li   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">rollback</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> zs   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><h2 id="手动提交"><a href="#手动提交" class="headerlink" title="手动提交"></a>手动提交</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">start</span> transaction;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(name) <span class="keyword">values</span>(<span class="string">&#x27;xx&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(name) <span class="keyword">values</span>(<span class="string">&#x27;yy&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">rollback</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">start</span> transaction;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(name) <span class="keyword">values</span>(<span class="string">&#x27;xx&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(name) <span class="keyword">values</span>(<span class="string">&#x27;yy&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> zs   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> xx   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> yy   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">commit</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">rollback</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> zs   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> xx   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> yy   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 设置 全局 事务 隔离 级别 读未提交  </span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> transaction isolation level read uncommitted;</span><br><span class="line"><span class="comment">-- 查看全局事务隔离级别  </span></span><br><span class="line"><span class="keyword">select</span> @<span class="variable">@global</span>.transaction_isolation;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【56-60】存储引擎</title>
      <link href="/2022/02/14/MySQL/%E3%80%9056-60%E3%80%91%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/"/>
      <url>/2022/02/14/MySQL/%E3%80%9056-60%E3%80%91%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="查询MySQL可用引擎"><a href="#查询MySQL可用引擎" class="headerlink" title="查询MySQL可用引擎"></a>查询MySQL可用引擎</h2><ul><li>默认 InnoDB  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show engines;</span><br><span class="line">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">| Engine             | Support | Comment                                                        | Transactions | XA   | Savepoints |</span><br><span class="line">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">| MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO         |</span><br><span class="line">| MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO         |</span><br><span class="line">| CSV                | YES     | CSV storage engine                                             | NO           | NO   | NO         |</span><br><span class="line">| FEDERATED          | NO      | Federated MySQL storage engine                                 | NULL         | NULL | NULL       |</span><br><span class="line">| PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO   | NO         |</span><br><span class="line">| MyISAM             | YES     | MyISAM storage engine                                          | NO           | NO   | NO         |</span><br><span class="line">| InnoDB             | DEFAULT | Supports transactions, row-level locking, and foreign keys     | YES          | YES  | YES        |</span><br><span class="line">| BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO         |</span><br><span class="line">| ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO   | NO         |</span><br><span class="line">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">9 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h2 id="完整的相关建表语句"><a href="#完整的相关建表语句" class="headerlink" title="完整的相关建表语句"></a>完整的相关建表语句</h2><ul><li>其中就有 ‘ENGINE’ 字段  </li><li>也有 ‘CHARSET’ 字段，字符集<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `emp` (</span><br><span class="line">  `EMPNO` int NOT NULL,</span><br><span class="line">  `ENAME` varchar(10) DEFAULT NULL,</span><br><span class="line">  `JOB` varchar(9) DEFAULT NULL,</span><br><span class="line">  `MGR` int DEFAULT NULL,</span><br><span class="line">  `HIREDATE` date DEFAULT NULL,</span><br><span class="line">  `SAL` double(7,2) DEFAULT NULL,</span><br><span class="line">  `COMM` double(7,2) DEFAULT NULL,</span><br><span class="line">  `DEPTNO` int DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`EMPNO`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;</span><br></pre></td></tr></table></figure></li></ul><h2 id="什么是存储引擎"><a href="#什么是存储引擎" class="headerlink" title="什么是存储引擎"></a>什么是存储引擎</h2><ol><li>只在 MySQL 存在（Oracle中有相应的机制，不叫存储引擎，无特殊规定，就是’表的存储方式’）  </li><li>每一个都对应一种不同的存储方式，都有优缺点  </li></ol><h1 id="常见存储引擎"><a href="#常见存储引擎" class="headerlink" title="常见存储引擎"></a>常见存储引擎</h1><h2 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h2><ol><li>常用的引擎  </li><li>由三个文件组成：表结构（格式文件.frm），表中数据（数据文件.MYD），表的索引（索引文件.MYI）  </li><li>灵活的 auto_increment</li><li>可被压缩，可以转化为只读表来节省空间  </li><li>不支持事务</li></ol><h2 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h2><ol><li>默认的存储引擎  </li><li>支持事务，安全  </li><li>提供行级锁、外键等  </li><li>数据存储在tablespace表空间中（逻辑概念）中，无法被压缩，无法被转化为只读    </li><li>在MySQL服务器崩溃后自动恢复   </li><li>级联删除，级联更新（父表相应字段删除更改，子表相应记录删除更改）  </li></ol><h2 id="MEMORY"><a href="#MEMORY" class="headerlink" title="MEMORY"></a>MEMORY</h2><ol><li>不支持事务  </li><li>数据容易丢失，数据索引存于内存当中，不过查询速度最快   </li><li>以前叫做 HEAP   </li><li>不能存储 TEXT（CLOB）和 BLOB   </li></ol>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【49-54】约束</title>
      <link href="/2022/02/14/MySQL/%E3%80%9049-54%E3%80%91%E7%BA%A6%E6%9D%9F/"/>
      <url>/2022/02/14/MySQL/%E3%80%9049-54%E3%80%91%E7%BA%A6%E6%9D%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="什么是约束"><a href="#什么是约束" class="headerlink" title="什么是约束"></a>什么是约束</h2><ol><li>在创建表的时候可以给表的字段添加相应的约束    </li><li>目的保证表中数据的合法性，有效性，完整性    </li></ol><h2 id="常见的约束"><a href="#常见的约束" class="headerlink" title="常见的约束"></a>常见的约束</h2><ol><li>非空约束 not null    </li><li>唯一约束 unique  </li><li>主键约束 primary key 约束的字段不能为null也不能重复（PK）  </li><li>外键约束 foreign key （FK）   </li><li>检查约束 check  （Oracle有，MySQL没有）   </li></ol><h1 id="非空约束-not-null"><a href="#非空约束-not-null" class="headerlink" title="非空约束 not null"></a>非空约束 not null</h1><ul><li>只能在字段数据类型后面加  </li><li>无法写成表级约束  <h2 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     id <span class="type">int</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     username <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     password <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> t_user;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field    <span class="operator">|</span> Type         <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> id       <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">255</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> password <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">255</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><h1 id="唯一约束-unique"><a href="#唯一约束-unique" class="headerlink" title="唯一约束 unique"></a>唯一约束 unique</h1><ul><li>唯一约束的字段具有唯一性，不能重复。NULL除外。  </li></ul><h2 id="给一个列添加-unique"><a href="#给一个列添加-unique" class="headerlink" title="给一个列添加 unique"></a>给一个列添加 unique</h2><ul><li>列级约束  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.03</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     id <span class="type">int</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     username <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">unique</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;zhangsan&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user <span class="keyword">values</span>(<span class="number">2</span>, <span class="string">&#x27;zhangsan&#x27;</span>);</span><br><span class="line">ERROR <span class="number">1062</span> (<span class="number">23000</span>): Duplicate entry <span class="string">&#x27;zhangsan&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;t_user.username&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="给多个列添加-unique"><a href="#给多个列添加-unique" class="headerlink" title="给多个列添加 unique"></a>给多个列添加 unique</h2><ul><li>联合起来必须唯一    </li><li>表级约束  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    usercode <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    username <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    <span class="keyword">unique</span>(usercode, username)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;111&#x27;</span>, <span class="string">&#x27;zhangsan&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;222&#x27;</span>, <span class="string">&#x27;zhangsan&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;111&#x27;</span>, <span class="string">&#x27;lisi&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     id <span class="type">int</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     usercode <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     username <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     <span class="keyword">unique</span>(usercode, username)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;111&#x27;</span>, <span class="string">&#x27;zhangsan&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;222&#x27;</span>, <span class="string">&#x27;zhangsan&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;111&#x27;</span>, <span class="string">&#x27;lisi&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> usercode <span class="operator">|</span> username <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> <span class="number">111</span>      <span class="operator">|</span> zhangsan <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> <span class="number">222</span>      <span class="operator">|</span> zhangsan <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> <span class="number">111</span>      <span class="operator">|</span> lisi     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+----------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="主键约束-primary-key"><a href="#主键约束-primary-key" class="headerlink" title="主键约束 primary key"></a>主键约束 primary key</h1><ul><li>约束的字段不能为null也不能重复  </li><li>表的设计三范式中有要求，第一范式要求任何一张表都要有主键  </li><li>一张表的主键约束只能有一个  </li></ul><h2 id="列级约束添加主键"><a href="#列级约束添加主键" class="headerlink" title="列级约束添加主键"></a>列级约束添加主键</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    username <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    email <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(id, username, email) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;zs@e.com&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(id, username, email) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;ls&#x27;</span>,<span class="string">&#x27;ls@e.com&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(username, email) <span class="keyword">values</span>(<span class="string">&#x27;ww&#x27;</span>,<span class="string">&#x27;ww@e.com&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(id, username, email) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;zl&#x27;</span>,<span class="string">&#x27;zl@e.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     id <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     username <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     email <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(id, username, email) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;zs@e.com&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(id, username, email) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;ls&#x27;</span>,<span class="string">&#x27;ls@e.com&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(username, email) <span class="keyword">values</span>(<span class="string">&#x27;ww&#x27;</span>,<span class="string">&#x27;ww@e.com&#x27;</span>);</span><br><span class="line">ERROR <span class="number">1364</span> (HY000): Field <span class="string">&#x27;id&#x27;</span> doesn<span class="string">&#x27;t have a default value</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; insert into t_user(id, username, email) values(1,&#x27;</span>zl<span class="string">&#x27;,&#x27;</span>zl<span class="variable">@e</span>.com<span class="string">&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ERROR 1062 (23000): Duplicate entry &#x27;</span><span class="number">1</span><span class="string">&#x27; for key &#x27;</span>t_user.PRIMARY<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h2 id="表级约束添加主键"><a href="#表级约束添加主键" class="headerlink" title="表级约束添加主键"></a>表级约束添加主键</h2><h3 id="单一主键"><a href="#单一主键" class="headerlink" title="单一主键"></a>单一主键</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    username <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    <span class="keyword">primary</span> key(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="复合主键"><a href="#复合主键" class="headerlink" title="复合主键"></a>复合主键</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    username <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    password <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    <span class="keyword">primary</span> key(id, username)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="主键相关术语"><a href="#主键相关术语" class="headerlink" title="主键相关术语"></a>主键相关术语</h2><ol><li>主键约束  </li><li>主键字段  </li><li>主键值  </li></ol><h2 id="主键作用"><a href="#主键作用" class="headerlink" title="主键作用"></a>主键作用</h2><ol><li>是这张表的唯一标识  </li></ol><h2 id="主键的分类"><a href="#主键的分类" class="headerlink" title="主键的分类"></a>主键的分类</h2><h3 id="按照字段数量"><a href="#按照字段数量" class="headerlink" title="按照字段数量"></a>按照字段数量</h3><ol><li>单一主键（推荐常用）  </li><li>复合主键（多个字段联合添加，但是违背三范式）  </li></ol><h3 id="按照主键性质"><a href="#按照主键性质" class="headerlink" title="按照主键性质"></a>按照主键性质</h3><ol><li>自然主键</li><li>业务主键（主键值和系统的业务挂钩，不推荐用…）  </li></ol><h2 id="MySQL主键值自增（非常重要）"><a href="#MySQL主键值自增（非常重要）" class="headerlink" title="MySQL主键值自增（非常重要）"></a>MySQL主键值自增（非常重要）</h2><ul><li>以 1 开始自增  </li><li>Oracle当中也有提供自增，叫：序列（sequence）对象<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    username <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(username) <span class="keyword">values</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(username) <span class="keyword">values</span>(<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(username) <span class="keyword">values</span>(<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(username) <span class="keyword">values</span>(<span class="string">&#x27;d&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(username) <span class="keyword">values</span>(<span class="string">&#x27;e&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     username <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(username) <span class="keyword">values</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(username) <span class="keyword">values</span>(<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(username) <span class="keyword">values</span>(<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(username) <span class="keyword">values</span>(<span class="string">&#x27;d&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(username) <span class="keyword">values</span>(<span class="string">&#x27;e&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> a        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> b        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> c        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> d        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> e        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><h1 id="外键约束-foreign-key"><a href="#外键约束-foreign-key" class="headerlink" title="外键约束 foreign key"></a>外键约束 foreign key</h1><h2 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h2><ol><li>外键约束  </li><li>外键字段  </li><li>外键值  </li></ol><h2 id="设计表用于维护学生和班级的信息"><a href="#设计表用于维护学生和班级的信息" class="headerlink" title="设计表用于维护学生和班级的信息"></a>设计表用于维护学生和班级的信息</h2><ol><li>删除信息的时候，先删除子表，在删除父表  </li><li>添加信息的时候，先添加父表，在添加子表  </li><li>创建表的时候，先添加父表，在添加子表  </li><li>删除表的时候，先删除子表，在删除父表  </li></ol><ul><li>以下t_student中classno引用t_class中的cno字段，此是t_student叫做子表，t_class叫做父表  </li><li>子表的外键值必须在相应父表中对应字段的值的集合中，但是可以为NULL  </li><li>外键字段引用其他表的某个字段是，被引用表的字段必须有唯一性  </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_student;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_class;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_class(</span><br><span class="line">    cno <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    cname <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_student(</span><br><span class="line">    sno <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    sname <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    classno <span class="type">int</span>,</span><br><span class="line">    <span class="keyword">foreign</span> key(classno) <span class="keyword">references</span> t_class(cno)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_class <span class="keyword">values</span>(<span class="number">101</span>,<span class="string">&#x27;xxx&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_class <span class="keyword">values</span>(<span class="number">102</span>,<span class="string">&#x27;yyy&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_student <span class="keyword">values</span>(<span class="number">101</span>, <span class="string">&#x27;zs1&#x27;</span>, <span class="number">101</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_student <span class="keyword">values</span>(<span class="number">102</span>, <span class="string">&#x27;zs2&#x27;</span>, <span class="number">101</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_student <span class="keyword">values</span>(<span class="number">201</span>, <span class="string">&#x27;zs3&#x27;</span>, <span class="number">102</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_student <span class="keyword">values</span>(<span class="number">202</span>, <span class="string">&#x27;zs4&#x27;</span>, <span class="number">102</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_student <span class="keyword">values</span>(<span class="number">203</span>, <span class="string">&#x27;zs5&#x27;</span>, <span class="number">102</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_student <span class="keyword">values</span>(<span class="number">204</span>, <span class="string">&#x27;zs6&#x27;</span>, <span class="number">102</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_student <span class="keyword">values</span>(<span class="number">205</span>, <span class="string">&#x27;zs7&#x27;</span>, <span class="number">102</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_class;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_student;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_class;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+</span></span><br><span class="line"><span class="operator">|</span> cno <span class="operator">|</span> cname <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span> <span class="operator">|</span> xxx   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span> <span class="operator">|</span> yyy   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_student;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+---------+</span></span><br><span class="line"><span class="operator">|</span> sno <span class="operator">|</span> sname <span class="operator">|</span> classno <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+---------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span> <span class="operator">|</span> zs1   <span class="operator">|</span>     <span class="number">101</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span> <span class="operator">|</span> zs2   <span class="operator">|</span>     <span class="number">101</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">201</span> <span class="operator">|</span> zs3   <span class="operator">|</span>     <span class="number">102</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">202</span> <span class="operator">|</span> zs4   <span class="operator">|</span>     <span class="number">102</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">203</span> <span class="operator">|</span> zs5   <span class="operator">|</span>     <span class="number">102</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">204</span> <span class="operator">|</span> zs6   <span class="operator">|</span>     <span class="number">102</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">205</span> <span class="operator">|</span> zs7   <span class="operator">|</span>     <span class="number">102</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+---------+</span></span><br><span class="line"><span class="number">7</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>6007. 数组的最大与和</title>
      <link href="/2022/02/13/leecode/6007.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B8%8E%E5%92%8C/"/>
      <url>/2022/02/13/leecode/6007.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B8%8E%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h1><p><a href="https://leetcode-cn.com/problems/maximum-and-sum-of-array/">https://leetcode-cn.com/problems/maximum-and-sum-of-array/</a></p><h1 id="Meaning"><a href="#Meaning" class="headerlink" title="Meaning"></a>Meaning</h1><ol><li>长度为 $n$ 的数组 $nums$</li><li>有 $numSlots$ 个篮子，编号 $1…numSlots$</li><li>$nums$ 中每个数字都需要放入篮子中</li><li>每个篮子最多放两个数字</li><li>每个篮子的权值是（篮子中的每个数字与篮子编号的与操作之和）</li><li>一种分配方式的权值和是（所有篮子权值之和）</li><li>求最大的权值和</li><li>$n == nums.length$</li><li>$1 &lt;= numSlots &lt;= 9$</li><li>$1 &lt;= n &lt;= 2 * numSlots$</li><li>$1 &lt;= nums[i] &lt;= 15$</li></ol><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><ol><li>每个篮子最多 $2$ 个整数，可看作 $2*numsSlots$ 个篮子</li><li>数据范围小，可以状压 $DP$</li><li>篮子的编号不能变，nums中的位置信息不重要</li><li>二进制数 $x$ 表示 $2*numSlots$ 个篮子是否被占有</li><li>设 $i$ 的二进制中的 $1$ 的个数为 $c$，定义 $f[i]$ 表示将 $nums$ 的前 $c$ 个数字放到篮子中，且放了数字的篮子集合为 $i$ 时的最大与和。初始值 $f[0]=0$</li><li>枚举空蓝子的位置 j，对应篮子编号为 j/2+1</li><li>f[i+2^j] = max( f[i+2^j], f[i] + (j/2+1)&amp;nums[c] )</li><li>当然倒过来转移也可行</li><li>f[i] = max( f[i], f[i-2^j] + (j/2+1)&amp;nums[c-1] )</li></ol><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.max;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maximumANDSum</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> numSlots)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> tot = (<span class="number">1</span>&lt;&lt;(numSlots&lt;&lt;<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[tot];</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        for (int i = 1; i &lt; tot; i++) &#123;</span></span><br><span class="line"><span class="comment">//            int cnt = Integer.bitCount(i);</span></span><br><span class="line"><span class="comment">//            if (cnt &gt; n) continue;</span></span><br><span class="line"><span class="comment">//            for (int j = 0; j &lt; (numSlots&lt;&lt;1); j++) &#123;</span></span><br><span class="line"><span class="comment">//                if (((i &gt;&gt; j) &amp; 1) == 1)&#123;</span></span><br><span class="line"><span class="comment">//                    dp[i] = max(dp[i], dp[i-(1&lt;&lt;j)] + ((j/2+1)&amp;nums[cnt-1]));</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            if (cnt == n) ans = max(ans, dp[i]);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> cnt = Integer.bitCount(i);</span><br><span class="line">            <span class="keyword">if</span> (cnt &gt;= n) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; (numSlots&lt;&lt;<span class="number">1</span>); j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (((i &gt;&gt; j) &amp; <span class="number">1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">                    dp[i|(<span class="number">1</span>&lt;&lt;j)] = max(dp[i|(<span class="number">1</span>&lt;&lt;j)], dp[i] + ((j/<span class="number">2</span>+<span class="number">1</span>)&amp;nums[cnt]));</span><br><span class="line">                    ans = max(ans, dp[i|(<span class="number">1</span>&lt;&lt;j)]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leecode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 状压DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【42-48】关于表</title>
      <link href="/2022/02/12/MySQL/%E3%80%9042-48%E3%80%91%E5%85%B3%E4%BA%8E%E8%A1%A8%E4%B8%8E%E8%A1%A8%E4%B8%AD%E6%95%B0%E6%8D%AE/"/>
      <url>/2022/02/12/MySQL/%E3%80%9042-48%E3%80%91%E5%85%B3%E4%BA%8E%E8%A1%A8%E4%B8%8E%E8%A1%A8%E4%B8%AD%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ol><li>在数据库中表名一般以：’t_表名’或者’tbl_表名’开始  </li><li>增删改查：CRUD操作  </li></ol><h1 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h1><h2 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表明&#123;</span><br><span class="line">    字段名<span class="number">1</span> 数据类型,</span><br><span class="line">    字段名<span class="number">2</span> 数据类型,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MySQL当中字段的数据类型"><a href="#MySQL当中字段的数据类型" class="headerlink" title="MySQL当中字段的数据类型"></a>MySQL当中字段的数据类型</h2><ol><li>int 整数型  </li><li>bigint 长整型(long)  </li><li>float 浮点型（Java中的float 和 double）  </li><li>char 定长字符串（String）  </li><li>varchar 可变长字符串（StringBuilder和StringBuffer）  </li><li>date 日期类型 （对应java.sql.Date类型）  </li><li>BLOB 二进制大对象（存图片、视频等流媒体信息）Binary Large OBject    </li><li>CLOB 字符大对象（存储较大文本，比如可以存储4G的字符串）Character Large OBject   </li><li>……</li></ol><h2 id="char-和-varchar-如何选择"><a href="#char-和-varchar-如何选择" class="headerlink" title="char 和 varchar 如何选择"></a>char 和 varchar 如何选择</h2><p>比如性别、生日等采用char<br>比如简介、姓名等采用varchar   </p><h2 id="创建学生表"><a href="#创建学生表" class="headerlink" title="创建学生表"></a>创建学生表</h2><h3 id="信息简要"><a href="#信息简要" class="headerlink" title="信息简要"></a>信息简要</h3><p>学生信息包括：</p><ol><li>学号：bigint  </li><li>姓名：varchar   </li><li>性别：char  </li><li>班级编号：varchar  </li><li>生日：char/date  </li></ol><h3 id="sql语句"><a href="#sql语句" class="headerlink" title="sql语句"></a>sql语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_student(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     <span class="keyword">no</span> <span class="type">bigint</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     name <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     sex <span class="type">char</span>(<span class="number">1</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     classno <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     birth <span class="type">char</span>(<span class="number">10</span>)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.04</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_sunlie <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> dept             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> emp              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> salgrade         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> t_student        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> t_user           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> t_student;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field   <span class="operator">|</span> Type         <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">no</span>      <span class="operator">|</span> <span class="type">bigint</span>       <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name    <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">255</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sex     <span class="operator">|</span> <span class="type">char</span>(<span class="number">1</span>)      <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> classno <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">255</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> birth   <span class="operator">|</span> <span class="type">char</span>(<span class="number">10</span>)     <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="关于默认"><a href="#关于默认" class="headerlink" title="关于默认"></a>关于默认</h3><ol><li>在建表的时候没有指定默认值，则默认为NULL   </li><li>格式：(字段名 数据类型 default 数据,)    </li></ol><h1 id="向表中插入数据"><a href="#向表中插入数据" class="headerlink" title="向表中插入数据"></a>向表中插入数据</h1><h2 id="语法格式-1"><a href="#语法格式-1" class="headerlink" title="语法格式"></a>语法格式</h2><p>字段名和值的数量相同，数据类型相同   </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(字段名<span class="number">1</span>,字段名<span class="number">2</span>,字段名<span class="number">3</span>, ...) <span class="keyword">values</span>(值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>, ...);</span><br></pre></td></tr></table></figure><h2 id="向-t-student-表中插入数据"><a href="#向-t-student-表中插入数据" class="headerlink" title="向 t_student 表中插入数据"></a>向 t_student 表中插入数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_student(<span class="keyword">no</span>,name,sex,classno,birth) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;gaosan1ban&#x27;</span>,<span class="string">&#x27;1950-10-12&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_student;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">no</span>   <span class="operator">|</span> name     <span class="operator">|</span> sex  <span class="operator">|</span> classno    <span class="operator">|</span> birth      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------------+------------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> zhangsan <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> gaosan1ban <span class="operator">|</span> <span class="number">1950</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------------+------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> t_student后的字段名可以省去  </span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_student <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;gaosan1ban&#x27;</span>,<span class="string">&#x27;1950-10-12&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_student;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">no</span>   <span class="operator">|</span> name     <span class="operator">|</span> sex  <span class="operator">|</span> classno    <span class="operator">|</span> birth      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------------+------------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> zhangsan <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> gaosan1ban <span class="operator">|</span> <span class="number">1950</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------------+------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="一行插入多条数据"><a href="#一行插入多条数据" class="headerlink" title="一行插入多条数据"></a>一行插入多条数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_student</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">values</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">1</span>,<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;gaosan1ban&#x27;</span>,<span class="string">&#x27;1950-10-12&#x27;</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">2</span>,<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;gaosan1ban&#x27;</span>,<span class="string">&#x27;1950-10-13&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">2</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line">Records: <span class="number">2</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_student;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">no</span>   <span class="operator">|</span> name     <span class="operator">|</span> sex  <span class="operator">|</span> classno    <span class="operator">|</span> birth      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------------+------------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> zhangsan <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> gaosan1ban <span class="operator">|</span> <span class="number">1950</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span> lisi     <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> gaosan1ban <span class="operator">|</span> <span class="number">1950</span><span class="number">-10</span><span class="number">-13</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+------+------------+------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="复制表"><a href="#复制表" class="headerlink" title="复制表"></a>复制表</h1><h2 id="语法格式-2"><a href="#语法格式-2" class="headerlink" title="语法格式"></a>语法格式</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 <span class="keyword">as</span> (<span class="keyword">select</span>语句);  </span><br></pre></td></tr></table></figure><h2 id="复制emp表"><a href="#复制emp表" class="headerlink" title="复制emp表"></a>复制emp表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> emp1 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp);</span><br><span class="line">Query OK, <span class="number">14</span> <span class="keyword">rows</span> affected, <span class="number">2</span> warnings (<span class="number">0.02</span> sec)</span><br><span class="line">Records: <span class="number">14</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="将查询结果复制入表"><a href="#将查询结果复制入表" class="headerlink" title="将查询结果复制入表"></a>将查询结果复制入表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> dept1 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept);</span><br><span class="line">Query OK, <span class="number">4</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">4</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept1;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span> DEPTNO <span class="operator">|</span> DNAME      <span class="operator">|</span> LOC      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> ACCOUNTING <span class="operator">|</span> <span class="keyword">NEW</span> YORK <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> RESEARCH   <span class="operator">|</span> DALLAS   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> SALES      <span class="operator">|</span> CHICAGO  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">40</span> <span class="operator">|</span> OPERATIONS <span class="operator">|</span> BOSTON   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> dept1 (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept);</span><br><span class="line">Query OK, <span class="number">4</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line">Records: <span class="number">4</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept1;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span> DEPTNO <span class="operator">|</span> DNAME      <span class="operator">|</span> LOC      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> ACCOUNTING <span class="operator">|</span> <span class="keyword">NEW</span> YORK <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> RESEARCH   <span class="operator">|</span> DALLAS   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> SALES      <span class="operator">|</span> CHICAGO  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">40</span> <span class="operator">|</span> OPERATIONS <span class="operator">|</span> BOSTON   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> ACCOUNTING <span class="operator">|</span> <span class="keyword">NEW</span> YORK <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> RESEARCH   <span class="operator">|</span> DALLAS   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> SALES      <span class="operator">|</span> CHICAGO  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">40</span> <span class="operator">|</span> OPERATIONS <span class="operator">|</span> BOSTON   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="修改表中数据"><a href="#修改表中数据" class="headerlink" title="修改表中数据"></a>修改表中数据</h1><h2 id="语法格式-3"><a href="#语法格式-3" class="headerlink" title="语法格式"></a>语法格式</h2><p>更新所有数据不加条件即可  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update 表名 <span class="keyword">set</span> 字段名<span class="number">1</span><span class="operator">=</span>值<span class="number">1</span>, 字段名<span class="number">2</span><span class="operator">=</span>值<span class="number">2</span> <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><h2 id="修改部门10的LOC改为’SHANGHAI’，部门名称修改为’RENSHIBU’"><a href="#修改部门10的LOC改为’SHANGHAI’，部门名称修改为’RENSHIBU’" class="headerlink" title="修改部门10的LOC改为’SHANGHAI’，部门名称修改为’RENSHIBU’"></a>修改部门10的LOC改为’SHANGHAI’，部门名称修改为’RENSHIBU’</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> update dept1 <span class="keyword">set</span> loc <span class="operator">=</span> <span class="string">&#x27;SHANGHAI&#x27;</span>, dname <span class="operator">=</span> <span class="string">&#x27;RENSHIBU&#x27;</span> <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">Query OK, <span class="number">2</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">2</span>  Changed: <span class="number">2</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept1;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span> DEPTNO <span class="operator">|</span> DNAME      <span class="operator">|</span> LOC      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> RENSHIBU   <span class="operator">|</span> SHANGHAI <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> RESEARCH   <span class="operator">|</span> DALLAS   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> SALES      <span class="operator">|</span> CHICAGO  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">40</span> <span class="operator">|</span> OPERATIONS <span class="operator">|</span> BOSTON   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> RENSHIBU   <span class="operator">|</span> SHANGHAI <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> RESEARCH   <span class="operator">|</span> DALLAS   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> SALES      <span class="operator">|</span> CHICAGO  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">40</span> <span class="operator">|</span> OPERATIONS <span class="operator">|</span> BOSTON   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+----------+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="修改表结构"><a href="#修改表结构" class="headerlink" title="修改表结构"></a>修改表结构</h1><p>表设计好后很少更改，在实际开发中很少用到…  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span></span><br></pre></td></tr></table></figure><h1 id="删除表中的数据"><a href="#删除表中的数据" class="headerlink" title="删除表中的数据"></a>删除表中的数据</h1><h2 id="语法格式-4"><a href="#语法格式-4" class="headerlink" title="语法格式"></a>语法格式</h2><p>没有条件全部删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><h2 id="删除10部门的数据"><a href="#删除10部门的数据" class="headerlink" title="删除10部门的数据"></a>删除10部门的数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">delete</span> <span class="keyword">from</span> dept1 <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">Query OK, <span class="number">2</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept1;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+---------+</span></span><br><span class="line"><span class="operator">|</span> DEPTNO <span class="operator">|</span> DNAME      <span class="operator">|</span> LOC     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+---------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> RESEARCH   <span class="operator">|</span> DALLAS  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> SALES      <span class="operator">|</span> CHICAGO <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">40</span> <span class="operator">|</span> OPERATIONS <span class="operator">|</span> BOSTON  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> RESEARCH   <span class="operator">|</span> DALLAS  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> SALES      <span class="operator">|</span> CHICAGO <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">40</span> <span class="operator">|</span> OPERATIONS <span class="operator">|</span> BOSTON  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+---------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="删除大表（重点）"><a href="#删除大表（重点）" class="headerlink" title="删除大表（重点）"></a>删除大表（重点）</h2><p>删前再三确认…<br>不可回滚 永久丢失<br>把表的字段啥的都给剪掉了…  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">truncate</span> <span class="keyword">table</span> emp1;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.03</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp1;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h1><h2 id="语法格式-5"><a href="#语法格式-5" class="headerlink" title="语法格式"></a>语法格式</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名; </span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> 表名;   <span class="operator">/</span><span class="operator">/</span>oracle 不支持</span><br></pre></td></tr></table></figure><h2 id="删除-t-student-表"><a href="#删除-t-student-表" class="headerlink" title="删除 t_student 表"></a>删除 t_student 表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_student;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【41-41】limit的使用</title>
      <link href="/2022/02/12/MySQL/%E3%80%9041-41%E3%80%91limit%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/02/12/MySQL/%E3%80%9041-41%E3%80%91limit%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ol><li>此为重点  </li><li>limit是mysql特有的，其他数据库没有，不通用  </li><li>Oracle有一个相同的机制，叫rownum  </li><li>limit取结果集中的部分数据  </li><li>语法机制：limit statrIndex, length （起始位置，数量）  </li><li>可以完成分页查询  </li></ol><h1 id="语句格式"><a href="#语句格式" class="headerlink" title="语句格式"></a>语句格式</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ...      <span class="number">5</span></span><br><span class="line"><span class="keyword">from</span> ...        <span class="number">1</span></span><br><span class="line"><span class="keyword">where</span> ...       <span class="number">2</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> ...    <span class="number">3</span></span><br><span class="line"><span class="keyword">having</span> ...      <span class="number">4</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> ...    <span class="number">6</span></span><br><span class="line">limit ...       <span class="number">7</span></span><br></pre></td></tr></table></figure><h1 id="取出工资前五名的员工"><a href="#取出工资前五名的员工" class="headerlink" title="取出工资前五名的员工"></a>取出工资前五名的员工</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> limit <span class="number">0</span>, <span class="number">5</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename <span class="operator">|</span> sal     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+</span></span><br><span class="line"><span class="operator">|</span> KING  <span class="operator">|</span> <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD  <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="取出工资在第四到第九的员工"><a href="#取出工资在第四到第九的员工" class="headerlink" title="取出工资在第四到第九的员工"></a>取出工资在第四到第九的员工</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> limit <span class="number">3</span>, <span class="number">6</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> sal     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="number">2450.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="number">1300.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【40-40】union</title>
      <link href="/2022/02/11/MySQL/%E3%80%9040-40%E3%80%91union/"/>
      <url>/2022/02/11/MySQL/%E3%80%9040-40%E3%80%91union/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>拼接作用  </p><h1 id="找出工作岗位是SALESMAN和MANAGER的员工"><a href="#找出工作岗位是SALESMAN和MANAGER的员工" class="headerlink" title="找出工作岗位是SALESMAN和MANAGER的员工"></a>找出工作岗位是SALESMAN和MANAGER的员工</h1><h2 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename, job <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">where</span> job <span class="operator">=</span> <span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">or</span> job <span class="operator">=</span> <span class="string">&#x27;MANAGER&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename, job <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">where</span> job <span class="keyword">in</span>(<span class="string">&#x27;SALESMAN&#x27;</span>, <span class="string">&#x27;MANAGER&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename, job <span class="keyword">from</span> emp <span class="keyword">where</span> job <span class="operator">=</span> <span class="string">&#x27;SALESMAN&#x27;</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">union</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">select</span> ename, job <span class="keyword">from</span> emp <span class="keyword">where</span> job <span class="operator">=</span> <span class="string">&#x27;MANAGER&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> job      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> MANAGER  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> MANAGER  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> MANAGER  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="number">7</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="两张不相干的表拼接"><a href="#两张不相干的表拼接" class="headerlink" title="两张不相干的表拼接"></a>两张不相干的表拼接</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename <span class="keyword">from</span> emp</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">union</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">select</span> dname <span class="keyword">from</span> dept;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> ename      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> SMITH      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ACCOUNTING <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> RESEARCH   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SALES      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> OPERATIONS <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="number">18</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【37-39】子查询</title>
      <link href="/2022/02/11/MySQL/%E3%80%9037-39%E3%80%91%E5%AD%90%E6%9F%A5%E8%AF%A2/"/>
      <url>/2022/02/11/MySQL/%E3%80%9037-39%E3%80%91%E5%AD%90%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="子查询是什么"><a href="#子查询是什么" class="headerlink" title="子查询是什么"></a>子查询是什么</h2><p>select语句嵌套select语句，被嵌套的select语句是子查询  </p><h2 id="子查询出现在哪里"><a href="#子查询出现在哪里" class="headerlink" title="子查询出现在哪里"></a>子查询出现在哪里</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    ..(<span class="keyword">select</span>).</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">    ..(<span class="keyword">select</span>).</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">    ..(<span class="keyword">select</span>).</span><br></pre></td></tr></table></figure><h1 id="嵌套子查询"><a href="#嵌套子查询" class="headerlink" title="嵌套子查询"></a>嵌套子查询</h1><h2 id="找出高于平均薪资员工-where嵌套子查询"><a href="#找出高于平均薪资员工-where嵌套子查询" class="headerlink" title="找出高于平均薪资员工 where嵌套子查询"></a>找出高于平均薪资员工 where嵌套子查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="找出每个部门平均薪水的薪资等级-from嵌套子查询"><a href="#找出每个部门平均薪水的薪资等级-from嵌套子查询" class="headerlink" title="找出每个部门平均薪水的薪资等级 from嵌套子查询"></a>找出每个部门平均薪水的薪资等级 from嵌套子查询</h2><h3 id="找出每个部门平均薪水"><a href="#找出每个部门平均薪水" class="headerlink" title="找出每个部门平均薪水"></a>找出每个部门平均薪水</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> deptno <span class="operator">|</span> avgsal      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> <span class="number">2175.000000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> <span class="number">1566.666667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> <span class="number">2916.666667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="最终sql"><a href="#最终sql" class="headerlink" title="最终sql"></a>最终sql</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> tmp.<span class="operator">*</span>, s.grade</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> (<span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno) tmp</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">join</span> salgrade s</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> tmp.avgsal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+-------+</span></span><br><span class="line"><span class="operator">|</span> deptno <span class="operator">|</span> avgsal      <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+-------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> <span class="number">2175.000000</span> <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> <span class="number">1566.666667</span> <span class="operator">|</span>     <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> <span class="number">2916.666667</span> <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+-------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="找出每个部门的薪资等级的平均值"><a href="#找出每个部门的薪资等级的平均值" class="headerlink" title="找出每个部门的薪资等级的平均值"></a>找出每个部门的薪资等级的平均值</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> e.deptno, <span class="built_in">avg</span>(s.grade)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> emp e</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">join</span> salgrade s</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">group</span> <span class="keyword">by</span> e.deptno;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------------+</span></span><br><span class="line"><span class="operator">|</span> deptno <span class="operator">|</span> <span class="built_in">avg</span>(s.grade) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span>       <span class="number">2.8000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span>       <span class="number">2.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span>       <span class="number">3.6667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="找出每个员工所在的部门名称-select嵌套子查询"><a href="#找出每个员工所在的部门名称-select嵌套子查询" class="headerlink" title="找出每个员工所在的部门名称 select嵌套子查询"></a>找出每个员工所在的部门名称 select嵌套子查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> e.ename, (</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>     <span class="keyword">select</span> d.dname <span class="keyword">from</span> dept d <span class="keyword">where</span> e.deptno <span class="operator">=</span> d.deptno</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ) dname</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> emp e;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> dname      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span> RESEARCH   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> SALES      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> SALES      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> RESEARCH   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> SALES      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> SALES      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> ACCOUNTING <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> RESEARCH   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> ACCOUNTING <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> SALES      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> RESEARCH   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span> SALES      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> RESEARCH   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> ACCOUNTING <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【36-36】navicat工具</title>
      <link href="/2022/02/11/MySQL/%E3%80%9036-36%E3%80%91navicat%E5%B7%A5%E5%85%B7/"/>
      <url>/2022/02/11/MySQL/%E3%80%9036-36%E3%80%91navicat%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>链接：<a href="https://pan.baidu.com/s/1r0ebLTAtzmuhr1YnQJpi9Q">https://pan.baidu.com/s/1r0ebLTAtzmuhr1YnQJpi9Q</a><br>提取码：6ytv</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【28-35】连接查询</title>
      <link href="/2022/02/11/MySQL/%E3%80%9028-35%E3%80%91%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2/"/>
      <url>/2022/02/11/MySQL/%E3%80%9028-35%E3%80%91%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="什么是连接查询"><a href="#什么是连接查询" class="headerlink" title="什么是连接查询"></a>什么是连接查询</h2><p>在实际开发中，大部分的情况都不是从单表查询数据，一般都是多张表联合查询取出最终结果  </p><h2 id="连接查询的分类"><a href="#连接查询的分类" class="headerlink" title="连接查询的分类"></a>连接查询的分类</h2><h3 id="根据语法出现的年代来划分"><a href="#根据语法出现的年代来划分" class="headerlink" title="根据语法出现的年代来划分"></a>根据语法出现的年代来划分</h3><ol><li>SQL92（一些老的DBA可能还在使用，DBA数据库管理员）   </li><li>SQL99  </li></ol><h3 id="根据表的连接方式来划分"><a href="#根据表的连接方式来划分" class="headerlink" title="根据表的连接方式来划分"></a>根据表的连接方式来划分</h3><ol><li>内连接<br>等值连接<br>非等值连接<br>自连接  </li><li>外连接<br>左外连接（左连接）<br>右外连接（右连接）    </li><li>全连接（较少用）  </li></ol><h1 id="笛卡尔积现象"><a href="#笛卡尔积现象" class="headerlink" title="笛卡尔积现象"></a>笛卡尔积现象</h1><ol><li>避免了笛卡尔积现象，不会减少记录的匹配次数</li></ol><h2 id="查询每个员工的部门名称，显示员工名和部门名"><a href="#查询每个员工的部门名称，显示员工名和部门名" class="headerlink" title="查询每个员工的部门名称，显示员工名和部门名"></a>查询每个员工的部门名称，显示员工名和部门名</h2><h3 id="mysql-gt-select-from-emp"><a href="#mysql-gt-select-from-emp" class="headerlink" title="mysql&gt; select * from emp;"></a>mysql&gt; select * from emp;</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">+-------+--------+-----------+------+------------+---------+---------+--------+</span><br><span class="line">| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |</span><br><span class="line">+-------+--------+-----------+------+------------+---------+---------+--------+</span><br><span class="line">|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |</span><br><span class="line">|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |</span><br><span class="line">|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |</span><br><span class="line">|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |</span><br><span class="line">|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |</span><br><span class="line">|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |</span><br><span class="line">|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |</span><br><span class="line">|  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 |</span><br><span class="line">|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |</span><br><span class="line">|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |</span><br><span class="line">|  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 |</span><br><span class="line">|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |</span><br><span class="line">|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |</span><br><span class="line">|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |</span><br><span class="line">+-------+--------+-----------+------+------------+---------+---------+--------+</span><br><span class="line">14 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="mysql-gt-select-from-dept"><a href="#mysql-gt-select-from-dept" class="headerlink" title="mysql&gt; select * from dept;"></a>mysql&gt; select * from dept;</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+--------+------------+----------+</span><br><span class="line">| DEPTNO | DNAME      | LOC      |</span><br><span class="line">+--------+------------+----------+</span><br><span class="line">|     10 | ACCOUNTING | NEW YORK |</span><br><span class="line">|     20 | RESEARCH   | DALLAS   |</span><br><span class="line">|     30 | SALES      | CHICAGO  |</span><br><span class="line">|     40 | OPERATIONS | BOSTON   |</span><br><span class="line">+--------+------------+----------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="mysql-gt-select-ename-dname-from-emp-dept"><a href="#mysql-gt-select-ename-dname-from-emp-dept" class="headerlink" title="mysql&gt; select ename, dname from emp, dept;"></a>mysql&gt; select ename, dname from emp, dept;</h3><p>记录数量是两张表的乘积  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">+--------+------------+</span><br><span class="line">| ename  | dname      |</span><br><span class="line">+--------+------------+</span><br><span class="line">| SMITH  | OPERATIONS |</span><br><span class="line">| SMITH  | SALES      |</span><br><span class="line">| SMITH  | RESEARCH   |</span><br><span class="line">| SMITH  | ACCOUNTING |</span><br><span class="line">| ALLEN  | OPERATIONS |</span><br><span class="line">| ALLEN  | SALES      |</span><br><span class="line">| ALLEN  | RESEARCH   |</span><br><span class="line">| ALLEN  | ACCOUNTING |</span><br><span class="line">| WARD   | OPERATIONS |</span><br><span class="line">| WARD   | SALES      |</span><br><span class="line">| WARD   | RESEARCH   |</span><br><span class="line">| WARD   | ACCOUNTING |</span><br><span class="line">| JONES  | OPERATIONS |</span><br><span class="line">| JONES  | SALES      |</span><br><span class="line">| JONES  | RESEARCH   |</span><br><span class="line">| JONES  | ACCOUNTING |</span><br><span class="line">| MARTIN | OPERATIONS |</span><br><span class="line">| MARTIN | SALES      |</span><br><span class="line">| MARTIN | RESEARCH   |</span><br><span class="line">| MARTIN | ACCOUNTING |</span><br><span class="line">| BLAKE  | OPERATIONS |</span><br><span class="line">| BLAKE  | SALES      |</span><br><span class="line">| BLAKE  | RESEARCH   |</span><br><span class="line">| BLAKE  | ACCOUNTING |</span><br><span class="line">| CLARK  | OPERATIONS |</span><br><span class="line">| CLARK  | SALES      |</span><br><span class="line">| CLARK  | RESEARCH   |</span><br><span class="line">| CLARK  | ACCOUNTING |</span><br><span class="line">| SCOTT  | OPERATIONS |</span><br><span class="line">| SCOTT  | SALES      |</span><br><span class="line">| SCOTT  | RESEARCH   |</span><br><span class="line">| SCOTT  | ACCOUNTING |</span><br><span class="line">| KING   | OPERATIONS |</span><br><span class="line">| KING   | SALES      |</span><br><span class="line">| KING   | RESEARCH   |</span><br><span class="line">| KING   | ACCOUNTING |</span><br><span class="line">| TURNER | OPERATIONS |</span><br><span class="line">| TURNER | SALES      |</span><br><span class="line">| TURNER | RESEARCH   |</span><br><span class="line">| TURNER | ACCOUNTING |</span><br><span class="line">| ADAMS  | OPERATIONS |</span><br><span class="line">| ADAMS  | SALES      |</span><br><span class="line">| ADAMS  | RESEARCH   |</span><br><span class="line">| ADAMS  | ACCOUNTING |</span><br><span class="line">| JAMES  | OPERATIONS |</span><br><span class="line">| JAMES  | SALES      |</span><br><span class="line">| JAMES  | RESEARCH   |</span><br><span class="line">| JAMES  | ACCOUNTING |</span><br><span class="line">| FORD   | OPERATIONS |</span><br><span class="line">| FORD   | SALES      |</span><br><span class="line">| FORD   | RESEARCH   |</span><br><span class="line">| FORD   | ACCOUNTING |</span><br><span class="line">| MILLER | OPERATIONS |</span><br><span class="line">| MILLER | SALES      |</span><br><span class="line">| MILLER | RESEARCH   |</span><br><span class="line">| MILLER | ACCOUNTING |</span><br><span class="line">+--------+------------+</span><br><span class="line">56 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="mysql-gt-select-e-ename-d-dname-from-emp-e-dept-d-where-e-deptno-d-deptno"><a href="#mysql-gt-select-e-ename-d-dname-from-emp-e-dept-d-where-e-deptno-d-deptno" class="headerlink" title="mysql&gt; select e.ename, d.dname from emp e, dept d where e.deptno = d.deptno;"></a>mysql&gt; select e.ename, d.dname from emp e, dept d where e.deptno = d.deptno;</h3><p>这是SQL92…   </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">+--------+------------+</span><br><span class="line">| ename  | dname      |</span><br><span class="line">+--------+------------+</span><br><span class="line">| SMITH  | RESEARCH   |</span><br><span class="line">| ALLEN  | SALES      |</span><br><span class="line">| WARD   | SALES      |</span><br><span class="line">| JONES  | RESEARCH   |</span><br><span class="line">| MARTIN | SALES      |</span><br><span class="line">| BLAKE  | SALES      |</span><br><span class="line">| CLARK  | ACCOUNTING |</span><br><span class="line">| SCOTT  | RESEARCH   |</span><br><span class="line">| KING   | ACCOUNTING |</span><br><span class="line">| TURNER | SALES      |</span><br><span class="line">| ADAMS  | RESEARCH   |</span><br><span class="line">| JAMES  | SALES      |</span><br><span class="line">| FORD   | RESEARCH   |</span><br><span class="line">| MILLER | ACCOUNTING |</span><br><span class="line">+--------+------------+</span><br><span class="line">14 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="mysql-gt-select-e-ename-d-dname-from-emp-e-inner-join-dept-d-on-e-deptno-d-deptno"><a href="#mysql-gt-select-e-ename-d-dname-from-emp-e-inner-join-dept-d-on-e-deptno-d-deptno" class="headerlink" title="mysql&gt; select e.ename, d.dname from emp e inner join dept d on e.deptno = d.deptno;"></a>mysql&gt; select e.ename, d.dname from emp e inner join dept d on e.deptno = d.deptno;</h3><p>这是SQL99…<br>这里inner可以省略，内连接，inner增加了可读性<br>SQL99结构更清晰，将表的连接条件和where语句分离  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">+--------+------------+</span><br><span class="line">| ename  | dname      |</span><br><span class="line">+--------+------------+</span><br><span class="line">| SMITH  | RESEARCH   |</span><br><span class="line">| ALLEN  | SALES      |</span><br><span class="line">| WARD   | SALES      |</span><br><span class="line">| JONES  | RESEARCH   |</span><br><span class="line">| MARTIN | SALES      |</span><br><span class="line">| BLAKE  | SALES      |</span><br><span class="line">| CLARK  | ACCOUNTING |</span><br><span class="line">| SCOTT  | RESEARCH   |</span><br><span class="line">| KING   | ACCOUNTING |</span><br><span class="line">| TURNER | SALES      |</span><br><span class="line">| ADAMS  | RESEARCH   |</span><br><span class="line">| JAMES  | SALES      |</span><br><span class="line">| FORD   | RESEARCH   |</span><br><span class="line">| MILLER | ACCOUNTING |</span><br><span class="line">+--------+------------+</span><br><span class="line">14 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h1 id="关于表的别名"><a href="#关于表的别名" class="headerlink" title="关于表的别名"></a>关于表的别名</h1><h2 id="mysql-gt-select-e-ename-d-dname-from-emp-e-dept-d"><a href="#mysql-gt-select-e-ename-d-dname-from-emp-e-dept-d" class="headerlink" title="mysql&gt; select e.ename, d.dname from emp e, dept d;"></a>mysql&gt; select e.ename, d.dname from emp e, dept d;</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">+--------+------------+</span><br><span class="line">| ename  | dname      |</span><br><span class="line">+--------+------------+</span><br><span class="line">| SMITH  | OPERATIONS |</span><br><span class="line">| SMITH  | SALES      |</span><br><span class="line">| SMITH  | RESEARCH   |</span><br><span class="line">| SMITH  | ACCOUNTING |</span><br><span class="line">| ALLEN  | OPERATIONS |</span><br><span class="line">| ALLEN  | SALES      |</span><br><span class="line">| ALLEN  | RESEARCH   |</span><br><span class="line">| ALLEN  | ACCOUNTING |</span><br><span class="line">| WARD   | OPERATIONS |</span><br><span class="line">| WARD   | SALES      |</span><br><span class="line">| WARD   | RESEARCH   |</span><br><span class="line">| WARD   | ACCOUNTING |</span><br><span class="line">| JONES  | OPERATIONS |</span><br><span class="line">| JONES  | SALES      |</span><br><span class="line">| JONES  | RESEARCH   |</span><br><span class="line">| JONES  | ACCOUNTING |</span><br><span class="line">| MARTIN | OPERATIONS |</span><br><span class="line">| MARTIN | SALES      |</span><br><span class="line">| MARTIN | RESEARCH   |</span><br><span class="line">| MARTIN | ACCOUNTING |</span><br><span class="line">| BLAKE  | OPERATIONS |</span><br><span class="line">| BLAKE  | SALES      |</span><br><span class="line">| BLAKE  | RESEARCH   |</span><br><span class="line">| BLAKE  | ACCOUNTING |</span><br><span class="line">| CLARK  | OPERATIONS |</span><br><span class="line">| CLARK  | SALES      |</span><br><span class="line">| CLARK  | RESEARCH   |</span><br><span class="line">| CLARK  | ACCOUNTING |</span><br><span class="line">| SCOTT  | OPERATIONS |</span><br><span class="line">| SCOTT  | SALES      |</span><br><span class="line">| SCOTT  | RESEARCH   |</span><br><span class="line">| SCOTT  | ACCOUNTING |</span><br><span class="line">| KING   | OPERATIONS |</span><br><span class="line">| KING   | SALES      |</span><br><span class="line">| KING   | RESEARCH   |</span><br><span class="line">| KING   | ACCOUNTING |</span><br><span class="line">| TURNER | OPERATIONS |</span><br><span class="line">| TURNER | SALES      |</span><br><span class="line">| TURNER | RESEARCH   |</span><br><span class="line">| TURNER | ACCOUNTING |</span><br><span class="line">| ADAMS  | OPERATIONS |</span><br><span class="line">| ADAMS  | SALES      |</span><br><span class="line">| ADAMS  | RESEARCH   |</span><br><span class="line">| ADAMS  | ACCOUNTING |</span><br><span class="line">| JAMES  | OPERATIONS |</span><br><span class="line">| JAMES  | SALES      |</span><br><span class="line">| JAMES  | RESEARCH   |</span><br><span class="line">| JAMES  | ACCOUNTING |</span><br><span class="line">| FORD   | OPERATIONS |</span><br><span class="line">| FORD   | SALES      |</span><br><span class="line">| FORD   | RESEARCH   |</span><br><span class="line">| FORD   | ACCOUNTING |</span><br><span class="line">| MILLER | OPERATIONS |</span><br><span class="line">| MILLER | SALES      |</span><br><span class="line">| MILLER | RESEARCH   |</span><br><span class="line">| MILLER | ACCOUNTING |</span><br><span class="line">+--------+------------+</span><br><span class="line">56 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ol><li>执行效率高（两个表可能会出现同一字段名）      </li><li>可读性高  </li></ol><h1 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h1><h2 id="等值连接"><a href="#等值连接" class="headerlink" title="等值连接"></a>等值连接</h2><h3 id="查询每个员工的部门名称，显示员工名和部门名-1"><a href="#查询每个员工的部门名称，显示员工名和部门名-1" class="headerlink" title="查询每个员工的部门名称，显示员工名和部门名"></a>查询每个员工的部门名称，显示员工名和部门名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename, d.dname <span class="keyword">from</span> emp e <span class="keyword">inner</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno <span class="operator">=</span> d.deptno;</span><br></pre></td></tr></table></figure><p>这是SQL99…<br>这里inner可以省略，内连接，inner增加了可读性<br>SQL99结构更清晰，将表的连接条件和where语句分离  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">+--------+------------+</span><br><span class="line">| ename  | dname      |</span><br><span class="line">+--------+------------+</span><br><span class="line">| SMITH  | RESEARCH   |</span><br><span class="line">| ALLEN  | SALES      |</span><br><span class="line">| WARD   | SALES      |</span><br><span class="line">| JONES  | RESEARCH   |</span><br><span class="line">| MARTIN | SALES      |</span><br><span class="line">| BLAKE  | SALES      |</span><br><span class="line">| CLARK  | ACCOUNTING |</span><br><span class="line">| SCOTT  | RESEARCH   |</span><br><span class="line">| KING   | ACCOUNTING |</span><br><span class="line">| TURNER | SALES      |</span><br><span class="line">| ADAMS  | RESEARCH   |</span><br><span class="line">| JAMES  | SALES      |</span><br><span class="line">| FORD   | RESEARCH   |</span><br><span class="line">| MILLER | ACCOUNTING |</span><br><span class="line">+--------+------------+</span><br><span class="line">14 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="非等值连接"><a href="#非等值连接" class="headerlink" title="非等值连接"></a>非等值连接</h2><h3 id="找出每个员工的工资等级，显示员工名、工资、工资等级"><a href="#找出每个员工的工资等级，显示员工名、工资、工资等级" class="headerlink" title="找出每个员工的工资等级，显示员工名、工资、工资等级"></a>找出每个员工的工资等级，显示员工名、工资、工资等级</h3><p>省略了inner  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> e.ename, e.sal, s.grade</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> emp e <span class="keyword">join</span> salgrade s</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> sal     <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>  <span class="number">800.00</span> <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span>     <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="number">2450.00</span> <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="number">5000.00</span> <span class="operator">|</span>     <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span>     <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="number">1100.00</span> <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span>  <span class="number">950.00</span> <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="number">1300.00</span> <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><p>最大的特点是：一张表看作两张表  </p><h3 id="找出每个员工的杀那个及领导，显示员工名和领导名"><a href="#找出每个员工的杀那个及领导，显示员工名和领导名" class="headerlink" title="找出每个员工的杀那个及领导，显示员工名和领导名"></a>找出每个员工的杀那个及领导，显示员工名和领导名</h3><p>查出来’king’没有领导，’king’就是领导  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> a.ename <span class="keyword">as</span> <span class="string">&#x27;员工&#x27;</span>, b.ename <span class="keyword">as</span> <span class="string">&#x27;领导&#x27;</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> emp a <span class="keyword">join</span> emp b</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> a.mgr <span class="operator">=</span> b.empno;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+</span></span><br><span class="line"><span class="operator">|</span> 员工   <span class="operator">|</span> 领导  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span> FORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> JONES <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> SCOTT <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> JONES <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> CLARK <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+</span></span><br><span class="line"><span class="number">13</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h1><h2 id="外连接和内连接的区别"><a href="#外连接和内连接的区别" class="headerlink" title="外连接和内连接的区别"></a>外连接和内连接的区别</h2><ol><li>内连接:<br>假设A和s表进行连接，使用内连接的话，凡是A表和s表能够匹配上的记录查询出来，这就是内连接。AB两张表没有主副之分，两张表是平等的。  </li><li>外连接:<br>假设a和B表进行连接，使用外连接的话，AB两张表中有一张表是主表，一张表是副表，主要查询主表中的数据，捎带着查询副表，当副表中的数据没有和主表中的数据匹配上，副表自动模拟出NULL与之匹配  </li></ol><h2 id="外连接的分类"><a href="#外连接的分类" class="headerlink" title="外连接的分类"></a>外连接的分类</h2><ol><li>左外连接（左连接）表示左边的表是主表      </li><li>右外连接（右连接）表示右边的表是主表    </li><li>两个写法能相互转换  </li></ol><h2 id="找出每个员工上级领导"><a href="#找出每个员工上级领导" class="headerlink" title="找出每个员工上级领导"></a>找出每个员工上级领导</h2><p>‘KING’的领导是NULL  </p><h3 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h3><p>outer 可以省略  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> a.ename <span class="string">&#x27;员工&#x27;</span>, b.ename <span class="string">&#x27;领导&#x27;</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> emp a <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> emp b</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> a.mgr <span class="operator">=</span> b.empno;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+</span></span><br><span class="line"><span class="operator">|</span> 员工   <span class="operator">|</span> 领导  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span> FORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> JONES <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> SCOTT <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> JONES <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> CLARK <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="右外连接"><a href="#右外连接" class="headerlink" title="右外连接"></a>右外连接</h3><p>省略了 outer     </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> a.ename <span class="string">&#x27;员工&#x27;</span>, b.ename <span class="string">&#x27;领导&#x27;</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> emp b <span class="keyword">right</span> <span class="keyword">join</span> emp a</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> a.mgr <span class="operator">=</span> b.empno;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+</span></span><br><span class="line"><span class="operator">|</span> 员工   <span class="operator">|</span> 领导  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span> FORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> JONES <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> SCOTT <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> JONES <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> CLARK <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="找出哪个部门没有员工"><a href="#找出哪个部门没有员工" class="headerlink" title="找出哪个部门没有员工"></a>找出哪个部门没有员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> d.<span class="operator">*</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> emp e <span class="keyword">right</span> <span class="keyword">join</span> dept d</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> e.deptno <span class="operator">=</span> d.deptno</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">where</span> e.empno <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+--------+</span></span><br><span class="line"><span class="operator">|</span> DEPTNO <span class="operator">|</span> DNAME      <span class="operator">|</span> LOC    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+--------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">40</span> <span class="operator">|</span> OPERATIONS <span class="operator">|</span> BOSTON <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+--------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="全连接"><a href="#全连接" class="headerlink" title="全连接"></a>全连接</h1><p>FULL JOIN </p><h1 id="三张表的连接查询"><a href="#三张表的连接查询" class="headerlink" title="三张表的连接查询"></a>三张表的连接查询</h1><h2 id="查找每个员工部门名称和工资等级"><a href="#查找每个员工部门名称和工资等级" class="headerlink" title="查找每个员工部门名称和工资等级"></a>查找每个员工部门名称和工资等级</h2><h3 id="1-员工的名字，部门编号，工资"><a href="#1-员工的名字，部门编号，工资" class="headerlink" title="1. 员工的名字，部门编号，工资"></a>1. 员工的名字，部门编号，工资</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename, deptno, sal</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> deptno <span class="operator">|</span> sal     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------+---------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span>  <span class="number">800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> <span class="number">2450.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> <span class="number">1100.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span>  <span class="number">950.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> <span class="number">1300.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------+---------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="2-工资和工资等级"><a href="#2-工资和工资等级" class="headerlink" title="2. 工资和工资等级"></a>2. 工资和工资等级</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> salgrade;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> GRADE <span class="operator">|</span> LOSAL <span class="operator">|</span> HISAL <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span>   <span class="number">700</span> <span class="operator">|</span>  <span class="number">1200</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span>  <span class="number">1201</span> <span class="operator">|</span>  <span class="number">1400</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">3</span> <span class="operator">|</span>  <span class="number">1401</span> <span class="operator">|</span>  <span class="number">2000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span>  <span class="number">2001</span> <span class="operator">|</span>  <span class="number">3000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">5</span> <span class="operator">|</span>  <span class="number">3001</span> <span class="operator">|</span>  <span class="number">9999</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------+-------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="3-部门编号和部门"><a href="#3-部门编号和部门" class="headerlink" title="3. 部门编号和部门"></a>3. 部门编号和部门</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> deptno, dname <span class="keyword">from</span> dept;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> deptno <span class="operator">|</span> dname      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> ACCOUNTING <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> RESEARCH   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> SALES      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">40</span> <span class="operator">|</span> OPERATIONS <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="4-最后查询"><a href="#4-最后查询" class="headerlink" title="4. 最后查询"></a>4. 最后查询</h3><p>以下表示 A 和 B 先连接，连接的结果为 A，之后 A 继续和 C 连接  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">A </span><br><span class="line"><span class="keyword">join</span> B </span><br><span class="line"><span class="keyword">on</span> ...</span><br><span class="line"><span class="keyword">join</span> C </span><br><span class="line"><span class="keyword">on</span> ...</span><br><span class="line">... </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> e.ename, d.dname, s.grade</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> emp e <span class="keyword">left</span> <span class="keyword">join</span> dept d</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> e.deptno <span class="operator">=</span> d.deptno</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">left</span> <span class="keyword">join</span> salgrade s</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> dname      <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span> RESEARCH   <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> RESEARCH   <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> ACCOUNTING <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> RESEARCH   <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> ACCOUNTING <span class="operator">|</span>     <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> RESEARCH   <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> RESEARCH   <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> ACCOUNTING <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+-------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="查找每个员工部门名称和工资等级和上级领导"><a href="#查找每个员工部门名称和工资等级和上级领导" class="headerlink" title="查找每个员工部门名称和工资等级和上级领导"></a>查找每个员工部门名称和工资等级和上级领导</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> e1.ename, d.dname, s.grade, e2.ename</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> emp e1</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">left</span> <span class="keyword">join</span> dept d</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> e1.deptno <span class="operator">=</span> d.deptno</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">left</span> <span class="keyword">join</span> salgrade s</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> e1.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">left</span> <span class="keyword">join</span> emp e2</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> e1.mgr <span class="operator">=</span> e2.empno;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> dname      <span class="operator">|</span> grade <span class="operator">|</span> ename <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+-------+-------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span> RESEARCH   <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span> FORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">3</span> <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> RESEARCH   <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> ACCOUNTING <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> RESEARCH   <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span> JONES <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> ACCOUNTING <span class="operator">|</span>     <span class="number">5</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">3</span> <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> RESEARCH   <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span> SCOTT <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span> SALES      <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span> BLAKE <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> RESEARCH   <span class="operator">|</span>     <span class="number">4</span> <span class="operator">|</span> JONES <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> ACCOUNTING <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span> CLARK <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+-------+-------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【20-27】分组函数</title>
      <link href="/2022/02/10/MySQL/%E3%80%9020-27%E3%80%91%E5%88%86%E7%BB%84%E5%87%BD%E6%95%B0/"/>
      <url>/2022/02/10/MySQL/%E3%80%9020-27%E3%80%91%E5%88%86%E7%BB%84%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ol><li><p>count 计数</p></li><li><p>sum 求和</p></li><li><p>avg 平均</p></li><li><p>max 最大值</p></li><li><p>min 最小值</p></li><li><p>分组函数：多行处理函数，输入多行输出一行  </p></li></ol><h2 id="求总和-最高-最低-平均工资"><a href="#求总和-最高-最低-平均工资" class="headerlink" title="求总和/最高/最低/平均工资"></a>求总和/最高/最低/平均工资</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">sum</span>(sal) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">29025.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">min</span>(sal) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">min</span>(sal) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">max</span>(sal) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">avg</span>(sal)    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2073.214286</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="求总人数"><a href="#求总人数" class="headerlink" title="求总人数"></a>求总人数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span>       <span class="number">14</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(ename) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">count</span>(ename) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span>           <span class="number">14</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="多行处理函数自动忽略NULL"><a href="#多行处理函数自动忽略NULL" class="headerlink" title="多行处理函数自动忽略NULL"></a>多行处理函数自动忽略NULL</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(comm) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">count</span>(comm) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span>           <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="数学表达式中有NULL出现结果为NULL"><a href="#数学表达式中有NULL出现结果为NULL" class="headerlink" title="数学表达式中有NULL出现结果为NULL"></a>数学表达式中有NULL出现结果为NULL</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename, (sal<span class="operator">+</span>comm)<span class="operator">*</span><span class="number">12</span> <span class="keyword">as</span> yearsal <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> yearsal  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">22800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">21000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">31800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">18000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="ifnull-空处理函数"><a href="#ifnull-空处理函数" class="headerlink" title="ifnull()空处理函数"></a>ifnull()空处理函数</h1><p>将 null 做为 0 处理  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifnull(<span class="keyword">null</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename, (sal<span class="operator">+</span>ifnull(comm,<span class="number">0</span>))<span class="operator">*</span><span class="number">12</span> <span class="keyword">as</span> yearsal <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> yearsal  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>  <span class="number">9600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">22800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">21000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">35700.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">31800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">34200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="number">29400.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> <span class="number">36000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="number">60000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">18000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="number">13200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span> <span class="number">11400.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> <span class="number">36000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="number">15600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="count-和count-某个字段-的区别"><a href="#count-和count-某个字段-的区别" class="headerlink" title="count(*)和count(某个字段)的区别"></a>count(*)和count(某个字段)的区别</h1><ol><li>count(*) 计算总记录条数  </li><li>count(某个字段) 计算该字段不为NULL的个数  </li></ol><h1 id="group-by-和-having"><a href="#group-by-和-having" class="headerlink" title="group by 和 having"></a>group by 和 having</h1><ol><li>group by: 按照某些字段进行分组  </li><li>having: 对分组后的数据进行再次过滤  </li><li>当sql语句无group by那么整张表自成一组  </li><li>group by在where之后执行  </li></ol><h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>      <span class="number">5</span></span><br><span class="line">    xxx</span><br><span class="line"><span class="keyword">from</span>        <span class="number">1</span></span><br><span class="line">    xxx</span><br><span class="line"><span class="keyword">where</span>       <span class="number">2</span></span><br><span class="line">    xxx</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span>    <span class="number">3</span></span><br><span class="line">    xxx</span><br><span class="line"><span class="keyword">having</span>      <span class="number">4</span></span><br><span class="line">    xxx</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span>    <span class="number">6</span></span><br><span class="line">    xxx </span><br></pre></td></tr></table></figure><h2 id="找出每个工作岗位最高薪资"><a href="#找出每个工作岗位最高薪资" class="headerlink" title="找出每个工作岗位最高薪资"></a>找出每个工作岗位最高薪资</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> job, <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> job;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+----------+</span></span><br><span class="line"><span class="operator">|</span> job       <span class="operator">|</span> <span class="built_in">max</span>(sal) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+----------+</span></span><br><span class="line"><span class="operator">|</span> CLERK     <span class="operator">|</span>  <span class="number">1300.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SALESMAN  <span class="operator">|</span>  <span class="number">1600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MANAGER   <span class="operator">|</span>  <span class="number">2975.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ANALYST   <span class="operator">|</span>  <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> PRESIDENT <span class="operator">|</span>  <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+----------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="找出高于平均工资的员工"><a href="#找出高于平均工资的员工" class="headerlink" title="找出高于平均工资的员工"></a>找出高于平均工资的员工</h2><p>运用子查询  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename <span class="operator">|</span> sal     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+</span></span><br><span class="line"><span class="operator">|</span> JONES <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK <span class="operator">|</span> <span class="number">2450.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING  <span class="operator">|</span> <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD  <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="找出每个部门不同工作岗位的最高薪资"><a href="#找出每个部门不同工作岗位的最高薪资" class="headerlink" title="找出每个部门不同工作岗位的最高薪资"></a>找出每个部门不同工作岗位的最高薪资</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> deptno, job, <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno,job <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">asc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-----------+----------+</span></span><br><span class="line"><span class="operator">|</span> deptno <span class="operator">|</span> job       <span class="operator">|</span> <span class="built_in">max</span>(sal) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-----------+----------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> CLERK     <span class="operator">|</span>  <span class="number">1300.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> MANAGER   <span class="operator">|</span>  <span class="number">2450.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> PRESIDENT <span class="operator">|</span>  <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> ANALYST   <span class="operator">|</span>  <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> CLERK     <span class="operator">|</span>  <span class="number">1100.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> MANAGER   <span class="operator">|</span>  <span class="number">2975.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> CLERK     <span class="operator">|</span>   <span class="number">950.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> MANAGER   <span class="operator">|</span>  <span class="number">2850.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> SALESMAN  <span class="operator">|</span>  <span class="number">1600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-----------+----------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="找出每个部门的最高薪资，要求显示薪资大于2900的数据"><a href="#找出每个部门的最高薪资，要求显示薪资大于2900的数据" class="headerlink" title="找出每个部门的最高薪资，要求显示薪资大于2900的数据"></a>找出每个部门的最高薪资，要求显示薪资大于2900的数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> deptno, <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">max</span>(sal) <span class="operator">&gt;</span> <span class="number">2900</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> deptno <span class="operator">|</span> <span class="built_in">max</span>(sal) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span>  <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span>  <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> 建议使用<span class="keyword">where</span>，因为参加分组的数据变少，提高效率</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> deptno, <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> <span class="number">2900</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> deptno <span class="operator">|</span> <span class="built_in">max</span>(sal) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span>  <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span>  <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="找出每个部门的平均薪资，要求显示薪资大于2000的数据"><a href="#找出每个部门的平均薪资，要求显示薪资大于2000的数据" class="headerlink" title="找出每个部门的平均薪资，要求显示薪资大于2000的数据"></a>找出每个部门的平均薪资，要求显示薪资大于2000的数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> deptno <span class="operator">|</span> <span class="built_in">avg</span>(sal)    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> <span class="number">2175.000000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span> <span class="number">1566.666667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> <span class="number">2916.666667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> deptno, <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal) <span class="operator">&gt;</span> <span class="number">2000</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> deptno <span class="operator">|</span> <span class="built_in">avg</span>(sal)    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span> <span class="number">2175.000000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span> <span class="number">2916.666667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="总结DQL执行顺序"><a href="#总结DQL执行顺序" class="headerlink" title="总结DQL执行顺序"></a>总结DQL执行顺序</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> xxx      <span class="number">5</span></span><br><span class="line"><span class="keyword">from</span> xxx        <span class="number">1</span></span><br><span class="line"><span class="keyword">where</span> xxx       <span class="number">2</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xxx    <span class="number">3</span></span><br><span class="line"><span class="keyword">having</span> xxx      <span class="number">4</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> xxx    <span class="number">6</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure><h1 id="关于查询结果去重"><a href="#关于查询结果去重" class="headerlink" title="关于查询结果去重"></a>关于查询结果去重</h1><p>distinct 关键字  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">distinct</span> job <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> job       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> CLERK     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SALESMAN  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MANAGER   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ANALYST   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> PRESIDENT <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="distinct-关键字必须在所有字段最前面"><a href="#distinct-关键字必须在所有字段最前面" class="headerlink" title="distinct 关键字必须在所有字段最前面"></a>distinct 关键字必须在所有字段最前面</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">distinct</span> job,deptno <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">asc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> job       <span class="operator">|</span> deptno <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> CLERK     <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MANAGER   <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> PRESIDENT <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ANALYST   <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLERK     <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MANAGER   <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLERK     <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MANAGER   <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SALESMAN  <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="统计岗位数量"><a href="#统计岗位数量" class="headerlink" title="统计岗位数量"></a>统计岗位数量</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> job) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> job) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span>                   <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【19-19】数据排序</title>
      <link href="/2022/02/10/MySQL/%E3%80%9019-19%E3%80%91%E6%95%B0%E6%8D%AE%E6%8E%92%E5%BA%8F/"/>
      <url>/2022/02/10/MySQL/%E3%80%9019-19%E3%80%91%E6%95%B0%E6%8D%AE%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    字段...</span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">    表名</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">    条件</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 字段 <span class="keyword">asc</span><span class="operator">/</span><span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h2 id="查询员工工资按照升序-降序"><a href="#查询员工工资按照升序-降序" class="headerlink" title="查询员工工资按照升序/降序"></a>查询员工工资按照升序/降序</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">asc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> sal     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>  <span class="number">800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span>  <span class="number">950.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="number">1100.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="number">1300.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="number">2450.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> sal     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="number">2450.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="number">1300.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="number">1100.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span>  <span class="number">950.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>  <span class="number">800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;2&#x27;</span> 代表按照第二列  </span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span> <span class="keyword">asc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> sal     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>  <span class="number">800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span>  <span class="number">950.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="number">1100.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="number">1300.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="number">2450.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="按照工资升序工资一样按名字降序排序"><a href="#按照工资升序工资一样按名字降序排序" class="headerlink" title="按照工资升序工资一样按名字降序排序"></a>按照工资升序工资一样按名字降序排序</h2><p>先按字段1，再按字段2  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表 <span class="keyword">order</span> <span class="keyword">by</span> 字段<span class="number">1</span> <span class="keyword">desc</span>, 字段<span class="number">2</span> <span class="keyword">asc</span>, ...;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>, ename <span class="keyword">asc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> sal     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="number">2450.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="number">1300.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="number">1100.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span>  <span class="number">950.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>  <span class="number">800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="number">14</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="查找岗位是SALSMAN要求按照薪资降序排列"><a href="#查找岗位是SALSMAN要求按照薪资降序排列" class="headerlink" title="查找岗位是SALSMAN要求按照薪资降序排列"></a>查找岗位是SALSMAN要求按照薪资降序排列</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,job,sal <span class="keyword">from</span> emp <span class="keyword">where</span> job <span class="operator">=</span> <span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> job      <span class="operator">|</span> sal     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+---------+</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> SALESMAN <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> SALESMAN <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> SALESMAN <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> SALESMAN <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+---------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【13-18】条件查询</title>
      <link href="/2022/02/10/MySQL/%E3%80%9013-18%E3%80%91%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/"/>
      <url>/2022/02/10/MySQL/%E3%80%9013-18%E3%80%91%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    字段,字段...</span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">    表名</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">    条件;</span><br></pre></td></tr></table></figure><h2 id="查询工资等于5000的员工姓名"><a href="#查询工资等于5000的员工姓名" class="headerlink" title="查询工资等于5000的员工姓名"></a>查询工资等于5000的员工姓名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> <span class="number">5000</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> ename <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br></pre></td></tr></table></figure><h2 id="查询SMITH的工资"><a href="#查询SMITH的工资" class="headerlink" title="查询SMITH的工资"></a>查询SMITH的工资</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> sal    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br></pre></td></tr></table></figure><h2 id="查找工资高于3000的员工"><a href="#查找工资高于3000的员工" class="headerlink" title="查找工资高于3000的员工"></a>查找工资高于3000的员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> <span class="number">3000</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> ename <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;=</span> <span class="number">3000</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> ename <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> SCOTT <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br></pre></td></tr></table></figure><h2 id="查找工资不等于3000的员工"><a href="#查找工资不等于3000的员工" class="headerlink" title="查找工资不等于3000的员工"></a>查找工资不等于3000的员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&lt;&gt;</span> <span class="number">3000</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br></pre></td></tr></table></figure><h2 id="查找工资在-1100-3000-的员工"><a href="#查找工资在-1100-3000-的员工" class="headerlink" title="查找工资在[1100,3000]的员工"></a>查找工资在[1100,3000]的员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="number">1100</span> <span class="operator">&lt;=</span> sal <span class="keyword">and</span> sal <span class="operator">&lt;=</span> <span class="number">3000</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="number">11</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">1100</span> <span class="keyword">and</span> <span class="number">3000</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br></pre></td></tr></table></figure><h1 id="between…and…"><a href="#between…and…" class="headerlink" title="between…and…"></a>between…and…</h1><h2 id="查找首字母在-‘A’-’B’-的员工姓名"><a href="#查找首字母在-‘A’-’B’-的员工姓名" class="headerlink" title="查找首字母在[‘A’,’B’)的员工姓名"></a>查找首字母在[‘A’,’B’)的员工姓名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">between</span> <span class="string">&#x27;A&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">between</span> <span class="string">&#x27;A&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> ename <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> ALLEN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br></pre></td></tr></table></figure><h1 id="is-null-和-is-not-null"><a href="#is-null-和-is-not-null" class="headerlink" title="is null 和 is not null"></a>is null 和 is not null</h1><p>null 不是一个值，不能用’=’衡量  </p><h2 id="查找哪些员工无津贴"><a href="#查找哪些员工无津贴" class="headerlink" title="查找哪些员工无津贴"></a>查找哪些员工无津贴</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,comm <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> comm <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------+</span></span><br><span class="line"><span class="number">10</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,comm <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> comm    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span>  <span class="number">300.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span>  <span class="number">500.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">1400.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span>    <span class="number">0.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="and-和-or-的优先级"><a href="#and-和-or-的优先级" class="headerlink" title="and 和 or 的优先级"></a>and 和 or 的优先级</h1><p>and 优先级比 or 高  </p><h2 id="找出工作岗位是MANAGER或SALESMAN的员工"><a href="#找出工作岗位是MANAGER或SALESMAN的员工" class="headerlink" title="找出工作岗位是MANAGER或SALESMAN的员工"></a>找出工作岗位是MANAGER或SALESMAN的员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,job <span class="keyword">from</span> emp <span class="keyword">where</span> job <span class="operator">=</span> <span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">or</span> job <span class="operator">=</span> <span class="string">&#x27;SALESMAN&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> job      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> MANAGER  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> MANAGER  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> MANAGER  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="number">7</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="找出薪资大于1000的并且部门编号是20或30部门的员工"><a href="#找出薪资大于1000的并且部门编号是20或30部门的员工" class="headerlink" title="找出薪资大于1000的并且部门编号是20或30部门的员工"></a>找出薪资大于1000的并且部门编号是20或30部门的员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,sal,deptno <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> <span class="number">1000</span> <span class="keyword">and</span> (deptno <span class="operator">=</span> <span class="number">20</span> <span class="keyword">or</span> deptno <span class="operator">=</span> <span class="number">30</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+--------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> sal     <span class="operator">|</span> deptno <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+--------+</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="number">1100.00</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+--------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="in-和-not-in"><a href="#in-和-not-in" class="headerlink" title="in 和 not in"></a>in 和 not in</h1><p>等同于 ‘or’  </p><h2 id="查询工作岗位是MANAGER或者SALESMAN的员工"><a href="#查询工作岗位是MANAGER或者SALESMAN的员工" class="headerlink" title="查询工作岗位是MANAGER或者SALESMAN的员工"></a>查询工作岗位是MANAGER或者SALESMAN的员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,job <span class="keyword">from</span> emp <span class="keyword">where</span> job <span class="keyword">in</span>(<span class="string">&#x27;SALESMAN&#x27;</span>,<span class="string">&#x27;MANAGER&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> job      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> MANAGER  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> MANAGER  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> MANAGER  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> SALESMAN <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br></pre></td></tr></table></figure><h2 id="查询工资是3000或者5000的员工"><a href="#查询工资是3000或者5000的员工" class="headerlink" title="查询工资是3000或者5000的员工"></a>查询工资是3000或者5000的员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">in</span>(<span class="number">3000</span>,<span class="number">5000</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename <span class="operator">|</span> sal     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+</span></span><br><span class="line"><span class="operator">|</span> SCOTT <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING  <span class="operator">|</span> <span class="number">5000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD  <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="查询工资不是3000也不是5000的员工"><a href="#查询工资不是3000也不是5000的员工" class="headerlink" title="查询工资不是3000也不是5000的员工"></a>查询工资不是3000也不是5000的员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">not</span> <span class="keyword">in</span>(<span class="number">3000</span>,<span class="number">5000</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> sal     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>  <span class="number">800.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="number">2450.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="number">1100.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span>  <span class="number">950.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="number">1300.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="number">11</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="like"><a href="#like" class="headerlink" title="like"></a>like</h1><ol><li>‘%’：任意多个字符  </li><li>‘_’：任意一个字符  </li></ol><h2 id="查询名字之中含有’O’的员工"><a href="#查询名字之中含有’O’的员工" class="headerlink" title="查询名字之中含有’O’的员工"></a>查询名字之中含有’O’的员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%O%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> ename <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> JONES <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="查询第二个字母是’A’的员工"><a href="#查询第二个字母是’A’的员工" class="headerlink" title="查询第二个字母是’A’的员工"></a>查询第二个字母是’A’的员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;_A%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="查找名字中有下划线的员工"><a href="#查找名字中有下划线的员工" class="headerlink" title="查找名字中有下划线的员工"></a>查找名字中有下划线的员工</h2><p>使用转义字符’&#39;  </p><p>先创建一下表和插入数据  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>  id <span class="type">int</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>  name <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(id,name) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;zhangsan&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(id,name) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;lisi&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(id,name) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;wangwu&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t_user(id,name) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;xx_xx&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> name     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> zhangsan <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span> lisi     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span> wangwu   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">4</span> <span class="operator">|</span> xx_xx    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+----------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>查询  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> name <span class="keyword">from</span> t_user <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%\_%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> name  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> xx_xx <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="查询名字最后一个字母是’T’的员工"><a href="#查询名字最后一个字母是’T’的员工" class="headerlink" title="查询名字最后一个字母是’T’的员工"></a>查询名字最后一个字母是’T’的员工</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%T&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> ename <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> SCOTT <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【12-12】简单查询</title>
      <link href="/2022/02/10/MySQL/%E3%80%9012-12%E3%80%91%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2/"/>
      <url>/2022/02/10/MySQL/%E3%80%9012-12%E3%80%91%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名<span class="number">1</span>,字段名<span class="number">2.</span>.. <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><p>查询员工年薪</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> ename, sal<span class="operator">*</span><span class="number">12</span> <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> sal<span class="operator">*</span><span class="number">12</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>  <span class="number">9600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">19200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">15000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">35700.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">15000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">34200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="number">29400.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> <span class="number">36000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="number">60000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">18000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="number">13200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span> <span class="number">11400.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> <span class="number">36000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="number">15600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br></pre></td></tr></table></figure><h1 id="给查询结果的列重命名"><a href="#给查询结果的列重命名" class="headerlink" title="给查询结果的列重命名"></a>给查询结果的列重命名</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> ename, sal<span class="operator">*</span><span class="number">12</span> <span class="keyword">AS</span> yearsal <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> yearsal  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>  <span class="number">9600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">19200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">15000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">35700.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">15000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">34200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="number">29400.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> <span class="number">36000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="number">60000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">18000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="number">13200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span> <span class="number">11400.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> <span class="number">36000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="number">15600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> ename, sal<span class="operator">*</span><span class="number">12</span> <span class="keyword">AS</span> <span class="string">&#x27;年薪&#x27;</span> <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> ename  <span class="operator">|</span> 年薪     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> SMITH  <span class="operator">|</span>  <span class="number">9600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ALLEN  <span class="operator">|</span> <span class="number">19200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> WARD   <span class="operator">|</span> <span class="number">15000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JONES  <span class="operator">|</span> <span class="number">35700.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MARTIN <span class="operator">|</span> <span class="number">15000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLAKE  <span class="operator">|</span> <span class="number">34200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CLARK  <span class="operator">|</span> <span class="number">29400.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> SCOTT  <span class="operator">|</span> <span class="number">36000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> KING   <span class="operator">|</span> <span class="number">60000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TURNER <span class="operator">|</span> <span class="number">18000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ADAMS  <span class="operator">|</span> <span class="number">13200.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JAMES  <span class="operator">|</span> <span class="number">11400.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FORD   <span class="operator">|</span> <span class="number">36000.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MILLER <span class="operator">|</span> <span class="number">15600.00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br></pre></td></tr></table></figure><p>标准sql语句中字符串最好使用单引号括起，MySQL虽然支持双引号    </p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【10-11】MySQL常用命令</title>
      <link href="/2022/02/10/MySQL/%E3%80%9010-11%E3%80%91MySQL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/02/10/MySQL/%E3%80%9010-11%E3%80%91MySQL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="查看-mysql-版本"><a href="#查看-mysql-版本" class="headerlink" title="查看 mysql 版本"></a>查看 mysql 版本</h1><p>dos下    </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql --version</span><br><span class="line">mysql -V</span><br></pre></td></tr></table></figure><h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><p>MySQL下  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database xxx;</span><br></pre></td></tr></table></figure><h1 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use xxx;</span><br></pre></td></tr></table></figure><h1 id="查询当前使用数据库"><a href="#查询当前使用数据库" class="headerlink" title="查询当前使用数据库"></a>查询当前使用数据库</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database();</span><br><span class="line">+------------+</span><br><span class="line">| database() |</span><br><span class="line">+------------+</span><br><span class="line">| sunlie     |</span><br><span class="line">+------------+</span><br></pre></td></tr></table></figure><h1 id="查询当前数据库版本"><a href="#查询当前数据库版本" class="headerlink" title="查询当前数据库版本"></a>查询当前数据库版本</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 8.0.28    |</span><br><span class="line">+-----------+</span><br></pre></td></tr></table></figure><h1 id="终止一条语句"><a href="#终止一条语句" class="headerlink" title="终止一条语句"></a>终止一条语句</h1><p>使用”\c”终止  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select</span><br><span class="line">    -&gt;</span><br><span class="line">    -&gt; *</span><br><span class="line">    -&gt;</span><br><span class="line">    -&gt; \c</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><h1 id="退出MySQL"><a href="#退出MySQL" class="headerlink" title="退出MySQL"></a>退出MySQL</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\q</span><br><span class="line">(ctrl+c)</span><br><span class="line">QUIT</span><br><span class="line">EXIT</span><br></pre></td></tr></table></figure><h1 id="查看创建表的sql语句"><a href="#查看创建表的sql语句" class="headerlink" title="查看创建表的sql语句"></a>查看创建表的sql语句</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show create table emp</span><br><span class="line">    -&gt; ;</span><br><span class="line">+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Table | Create Table                                                                                                                                                                                                                                                                                                                                                             |</span><br><span class="line">+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| emp   | CREATE TABLE `emp` (</span><br><span class="line">  `EMPNO` int NOT NULL,</span><br><span class="line">  `ENAME` varchar(10) DEFAULT NULL,</span><br><span class="line">  `JOB` varchar(9) DEFAULT NULL,</span><br><span class="line">  `MGR` int DEFAULT NULL,</span><br><span class="line">  `HIREDATE` date DEFAULT NULL,</span><br><span class="line">  `SAL` double(7,2) DEFAULT NULL,</span><br><span class="line">  `COMM` double(7,2) DEFAULT NULL,</span><br><span class="line">  `DEPTNO` int DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`EMPNO`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci |</span><br><span class="line">+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【1-9】数据库概述</title>
      <link href="/2022/02/10/MySQL/%E3%80%901-9%E3%80%91%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/"/>
      <url>/2022/02/10/MySQL/%E3%80%901-9%E3%80%91%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="常见的数据库管理系统"><a href="#常见的数据库管理系统" class="headerlink" title="常见的数据库管理系统"></a>常见的数据库管理系统</h1><ol><li>Oracle </li><li>MySQL </li><li>DB2 </li><li>Sybase </li><li>“MS SqlServe 支持标准sql的数据库管理系统”</li></ol><h1 id="MySQL概述"><a href="#MySQL概述" class="headerlink" title="MySQL概述"></a>MySQL概述</h1><h2 id="sql、DB、DBMS关系"><a href="#sql、DB、DBMS关系" class="headerlink" title="sql、DB、DBMS关系"></a>sql、DB、DBMS关系</h2><ol><li>DB：DataBase（数据库，实际上在硬盘上以文件的形式存在）  </li><li>DBMS：DataBase Management System（数据库管理系统）  </li><li>SQL：结构化查询语言，标准通用的语言，适合于所有的数据库产品<br>SQL为高级语言，SQL语句在执行的时候，会先编译再执行（编译由DBMS完成）   </li><li>DBMS通过执行SQL语句操作DB中的数据  </li></ol><h2 id="表"><a href="#表" class="headerlink" title="表"></a>表</h2><ol><li>table  </li><li>是数据库的基本组成单元，所有数据都以表格的形式呈现   </li></ol><h3 id="表的组成"><a href="#表的组成" class="headerlink" title="表的组成"></a>表的组成</h3><ol><li>行：被称为数据/记录（data）  </li><li>列：被称为字段（column）  </li><li>字段：包括字段名、数据类型、相关约束   </li></ol><h2 id="SQL语句"><a href="#SQL语句" class="headerlink" title="SQL语句"></a>SQL语句</h2><ol><li>DQL：（数据查询语言）查询语句，select语句  </li><li>DML：（数据操作语言）insert delete update，对表中的数据增删改  </li><li>DDL：（数据定义语言）create drop alter，对表结构的增删改  </li><li>TCL：（事务控制语言）commit提交事务，rollback回滚事务  </li><li>DCL：（数据控制语言）grant授权、revoke撤销权限等  </li></ol><h2 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h2><ol><li><p>登录mysql数据库管理系统<br>dos命令窗口下  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure></li><li><p>查看有哪些数据库<br>这个属于MySQL的命令  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases; </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure></li><li><p>创建数据库<br>创建名为”xxx”的数据库  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create database xxx;</span><br><span class="line">show databases;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sunlie             |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure></li><li><p>使用数据库<br>使用”xxx”数据库  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use xxx</span><br></pre></td></tr></table></figure></li><li><p>查看当前数据库中的表<br>属于MySQL命令  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure></li><li><p>初始化数据<br>PATH是文件路径  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source PATH</span><br></pre></td></tr></table></figure></li><li><p>删除数据库<br>xxx 表示要删除的库名   </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database xxx</span><br></pre></td></tr></table></figure></li></ol><h2 id="sql脚本"><a href="#sql脚本" class="headerlink" title="sql脚本"></a>sql脚本</h2><p>文件扩展名为.sql，并且该文件中编写了大量的sql语句  </p><h2 id="查看表结构和表中的数据"><a href="#查看表结构和表中的数据" class="headerlink" title="查看表结构和表中的数据"></a>查看表结构和表中的数据</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show tables;</span><br><span class="line">+------------------+</span><br><span class="line">| Tables_in_sunlie |</span><br><span class="line">+------------------+</span><br><span class="line">| dept             | // 部门表</span><br><span class="line">| emp              | // 员工表</span><br><span class="line">| salgrade         | // 工资等级表</span><br><span class="line">+------------------+</span><br></pre></td></tr></table></figure><h3 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构"></a>查看表结构</h3><p>查看 “xxx” 的表结构</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> xxx;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; desc dept;</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type        | Null | Key | Default | Extra |</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">| DEPTNO | int         | NO   | PRI | NULL    |       | // 部门编号</span><br><span class="line">| DNAME  | varchar(14) | YES  |     | NULL    |       | // 部门名称</span><br><span class="line">| LOC    | varchar(13) | YES  |     | NULL    |       | // 部门位置</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">mysql&gt; desc emp;</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type        | Null | Key | Default | Extra |</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br><span class="line">| EMPNO    | int         | NO   | PRI | NULL    |       | // 员工编号</span><br><span class="line">| ENAME    | varchar(10) | YES  |     | NULL    |       | // 员工姓名</span><br><span class="line">| JOB      | varchar(9)  | YES  |     | NULL    |       | // 工作岗位</span><br><span class="line">| MGR      | int         | YES  |     | NULL    |       | // 领导编号</span><br><span class="line">| HIREDATE | date        | YES  |     | NULL    |       | // 入职日期</span><br><span class="line">| SAL      | double(7,2) | YES  |     | NULL    |       | // 月薪</span><br><span class="line">| COMM     | double(7,2) | YES  |     | NULL    |       | // 补助</span><br><span class="line">| DEPTNO   | int         | YES  |     | NULL    |       | // 部门编号</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br><span class="line">mysql&gt; desc salgrade;</span><br><span class="line">+-------+------+------+-----+---------+-------+</span><br><span class="line">| Field | Type | Null | Key | Default | Extra |</span><br><span class="line">+-------+------+------+-----+---------+-------+</span><br><span class="line">| GRADE | int  | YES  |     | NULL    |       | // 薪水等级</span><br><span class="line">| LOSAL | int  | YES  |     | NULL    |       | // 最低薪资</span><br><span class="line">| HISAL | int  | YES  |     | NULL    |       | // 最高薪资</span><br><span class="line">+-------+------+------+-----+---------+-------+</span><br></pre></td></tr></table></figure><h3 id="查看表中数据"><a href="#查看表中数据" class="headerlink" title="查看表中数据"></a>查看表中数据</h3><p>查看 “xxx” 表中的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> xxx;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+-----------+------+------------+---------+---------+--------+</span></span><br><span class="line"><span class="operator">|</span> EMPNO <span class="operator">|</span> ENAME  <span class="operator">|</span> JOB       <span class="operator">|</span> MGR  <span class="operator">|</span> HIREDATE   <span class="operator">|</span> SAL     <span class="operator">|</span> COMM    <span class="operator">|</span> DEPTNO <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+-----------+------+------------+---------+---------+--------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7369</span> <span class="operator">|</span> SMITH  <span class="operator">|</span> CLERK     <span class="operator">|</span> <span class="number">7902</span> <span class="operator">|</span> <span class="number">1980</span><span class="number">-12</span><span class="number">-17</span> <span class="operator">|</span>  <span class="number">800.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7499</span> <span class="operator">|</span> ALLEN  <span class="operator">|</span> SALESMAN  <span class="operator">|</span> <span class="number">7698</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-02</span><span class="number">-20</span> <span class="operator">|</span> <span class="number">1600.00</span> <span class="operator">|</span>  <span class="number">300.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7521</span> <span class="operator">|</span> WARD   <span class="operator">|</span> SALESMAN  <span class="operator">|</span> <span class="number">7698</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-02</span><span class="number">-22</span> <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span>  <span class="number">500.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7566</span> <span class="operator">|</span> JONES  <span class="operator">|</span> MANAGER   <span class="operator">|</span> <span class="number">7839</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-04</span><span class="number">-02</span> <span class="operator">|</span> <span class="number">2975.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7654</span> <span class="operator">|</span> MARTIN <span class="operator">|</span> SALESMAN  <span class="operator">|</span> <span class="number">7698</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-09</span><span class="number">-28</span> <span class="operator">|</span> <span class="number">1250.00</span> <span class="operator">|</span> <span class="number">1400.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7698</span> <span class="operator">|</span> BLAKE  <span class="operator">|</span> MANAGER   <span class="operator">|</span> <span class="number">7839</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-05</span><span class="number">-01</span> <span class="operator">|</span> <span class="number">2850.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7782</span> <span class="operator">|</span> CLARK  <span class="operator">|</span> MANAGER   <span class="operator">|</span> <span class="number">7839</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-06</span><span class="number">-09</span> <span class="operator">|</span> <span class="number">2450.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7788</span> <span class="operator">|</span> SCOTT  <span class="operator">|</span> ANALYST   <span class="operator">|</span> <span class="number">7566</span> <span class="operator">|</span> <span class="number">1987</span><span class="number">-04</span><span class="number">-19</span> <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7839</span> <span class="operator">|</span> KING   <span class="operator">|</span> PRESIDENT <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-11</span><span class="number">-17</span> <span class="operator">|</span> <span class="number">5000.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7844</span> <span class="operator">|</span> TURNER <span class="operator">|</span> SALESMAN  <span class="operator">|</span> <span class="number">7698</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-09</span><span class="number">-08</span> <span class="operator">|</span> <span class="number">1500.00</span> <span class="operator">|</span>    <span class="number">0.00</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7876</span> <span class="operator">|</span> ADAMS  <span class="operator">|</span> CLERK     <span class="operator">|</span> <span class="number">7788</span> <span class="operator">|</span> <span class="number">1987</span><span class="number">-05</span><span class="number">-23</span> <span class="operator">|</span> <span class="number">1100.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7900</span> <span class="operator">|</span> JAMES  <span class="operator">|</span> CLERK     <span class="operator">|</span> <span class="number">7698</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-12</span><span class="number">-03</span> <span class="operator">|</span>  <span class="number">950.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">30</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7902</span> <span class="operator">|</span> FORD   <span class="operator">|</span> ANALYST   <span class="operator">|</span> <span class="number">7566</span> <span class="operator">|</span> <span class="number">1981</span><span class="number">-12</span><span class="number">-03</span> <span class="operator">|</span> <span class="number">3000.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7934</span> <span class="operator">|</span> MILLER <span class="operator">|</span> CLERK     <span class="operator">|</span> <span class="number">7782</span> <span class="operator">|</span> <span class="number">1982</span><span class="number">-01</span><span class="number">-23</span> <span class="operator">|</span> <span class="number">1300.00</span> <span class="operator">|</span>    <span class="keyword">NULL</span> <span class="operator">|</span>     <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+-----------+------+------------+---------+---------+--------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【651-685】反射机制</title>
      <link href="/2022/02/07/JavaSE/%E3%80%90651-685%E3%80%91%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/"/>
      <url>/2022/02/07/JavaSE/%E3%80%90651-685%E3%80%91%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="反射机制的作用"><a href="#反射机制的作用" class="headerlink" title="反射机制的作用"></a>反射机制的作用</h2><p>可以操作字节码文件<br>可以读和修改字节码文件<br>反射机制，让代码很具有通用性，可变化的内容都是写到配置文件当中,将来修改配置文件之后，创建的对象不一样了，调用的方法也不同了，但是java代码不需要做任何改动。这就是反射机制的魅力。  </p><h2 id="反射机制相关类的包"><a href="#反射机制相关类的包" class="headerlink" title="反射机制相关类的包"></a>反射机制相关类的包</h2><p>java.lang.reflect*;</p><h2 id="反射机制相关类"><a href="#反射机制相关类" class="headerlink" title="反射机制相关类"></a>反射机制相关类</h2><p>java.lang.Class：代表字节码文件<br>java.lang.reflect.Method：代表字节码中的方法字节码<br>java.lang.reflect.Constructor：代表字节码中的而构造方法字节码<br>java.lang.reflect.Field：代表字节码中的属性字节码    </p><h1 id="获取Class的三种方式"><a href="#获取Class的三种方式" class="headerlink" title="获取Class的三种方式"></a>获取Class的三种方式</h1><h2 id="public-static-Class-lt-gt-forName-String-className-throws-ClassNotFoundException"><a href="#public-static-Class-lt-gt-forName-String-className-throws-ClassNotFoundException" class="headerlink" title="public static Class&lt;?&gt; forName(String className) throws ClassNotFoundException"></a>public static Class&lt;?&gt; forName(String className) throws ClassNotFoundException</h2><ol><li>静态方法</li><li>方法的参数是―个字符串。</li><li>字符串需要的是一个完整类名。</li><li>完整类名必须带有包名。java.lang包也不能省略。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_652_</span>获取<span class="title">Class</span>的三种方式 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class c1 = Class.forName(<span class="string">&quot;java.lang.String&quot;</span>); <span class="comment">// c1代表String.class文件</span></span><br><span class="line">            Class c2 = Class.forName(<span class="string">&quot;java.lang.Integer&quot;</span>);</span><br><span class="line">            Class c3 = Class.forName(<span class="string">&quot;java.util.Date&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="public-final-native-Class-lt-gt-getClass"><a href="#public-final-native-Class-lt-gt-getClass" class="headerlink" title="public final native Class&lt;?&gt; getClass()"></a>public final native Class&lt;?&gt; getClass()</h2><p>运行时Class文件在JVM的方法区中  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_653_</span>获取<span class="title">Class</span>的三种方式 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Class c1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            c1 = Class.forName(<span class="string">&quot;java.lang.String&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String s = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        Class x = s.getClass();</span><br><span class="line"></span><br><span class="line">        System.out.println(c1 == x); <span class="comment">// true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="任何一种数据类型都有-class属性"><a href="#任何一种数据类型都有-class属性" class="headerlink" title="任何一种数据类型都有.class属性"></a>任何一种数据类型都有.class属性</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_654_</span>获取<span class="title">Class</span>的三种方式 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Class x = String.class;</span><br><span class="line">        Class y = Date.class;</span><br><span class="line">        Class z = <span class="keyword">int</span>.class;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="通过反射实例化对象"><a href="#通过反射实例化对象" class="headerlink" title="通过反射实例化对象"></a>通过反射实例化对象</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">newInstance</span><span class="params">()</span> <span class="keyword">throws</span> InstantiationException, IllegalAccessException</span></span><br></pre></td></tr></table></figure><p>必须保证无参构造是存在的  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_655_</span>通过反射实例化对象 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class c1 = Class.forName(<span class="string">&quot;User&quot;</span>);</span><br><span class="line">            <span class="comment">// newInstance() 调用User类的无参构造方法</span></span><br><span class="line">            Object o = c1.newInstance();</span><br><span class="line">            System.out.println(o);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            无参构造方法执行~</span></span><br><span class="line"><span class="comment">            User@1b6d3586</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;无参构造方法执行~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;有参构造方法执行~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="通过读属性文件实例化对象"><a href="#通过读属性文件实例化对象" class="headerlink" title="通过读属性文件实例化对象"></a>通过读属性文件实例化对象</h1><p>验证反射机制的灵活性<br>java代码写一遍，再不改变java源代码的基础之上，可以做到不同对象的实例化。非常之灵活。（符合OCP开闭原则:对扩展开放，对修改关闭。)  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">className=User2</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_656_</span>通过读属性文件实例化对象 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// IO流读取文件</span></span><br><span class="line">        fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;【651-685】反射机制/src/_656_通过读属性文件实例化对象.properties&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建属性类对象map</span></span><br><span class="line">        Properties mp = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">// 加载</span></span><br><span class="line">        mp.load(fis);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 拿到类名</span></span><br><span class="line">        String s = mp.getProperty(<span class="string">&quot;className&quot;</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// User2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过反射实例化对象</span></span><br><span class="line">        Class&lt;?&gt; c = Class.forName(s);</span><br><span class="line">        Object o = c.newInstance();</span><br><span class="line">        System.out.println(o);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭文件</span></span><br><span class="line">        fis.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User2</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="使用forName可以只让类的静态代码块执行"><a href="#使用forName可以只让类的静态代码块执行" class="headerlink" title="使用forName可以只让类的静态代码块执行"></a>使用forName可以只让类的静态代码块执行</h1><p>导致类加载  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_657_</span>只让静态代码块执行可以使用<span class="title">forName</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class&lt;?&gt; c = Class.forName(<span class="string">&quot;MyClass&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span>&#123;</span><br><span class="line">    <span class="comment">// 在类加载时执行，并且只执行一次</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;静态代码块执行~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="获取类路径下文件的绝对路径"><a href="#获取类路径下文件的绝对路径" class="headerlink" title="获取类路径下文件的绝对路径"></a>获取类路径下文件的绝对路径</h1><h2 id="什么是类路径"><a href="#什么是类路径" class="headerlink" title="什么是类路径"></a>什么是类路径</h2><p>src下的都是类路径，src是类的根路径<br>IDEA中其实是在out/production下  </p><h2 id="Thread-currentThread-getContextClassLoader-getResource-“”-getPath"><a href="#Thread-currentThread-getContextClassLoader-getResource-“”-getPath" class="headerlink" title="Thread.currentThread().getContextClassLoader().getResource(“”).getPath()"></a>Thread.currentThread().getContextClassLoader().getResource(“”).getPath()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_658_</span>获取类路径下文件的绝对路径 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 这种方式写路径缺点是：移植性差</span></span><br><span class="line"><span class="comment">//        FileInputStream fis = new FileInputStream(&quot;【651-685】反射机制/src/_656_通过读属性文件实例化对象.properties&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            Thread.currentThread() 当前线程对象</span></span><br><span class="line"><span class="comment">            getContextClassLoader() 线程对象的方法，获取当前线程的类加载器对象</span></span><br><span class="line"><span class="comment">            getResource(&quot;&quot;) 类加载器对象的方法，当前线程的类加载器默认从类的根路径下加载资源</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String path = Thread</span><br><span class="line">                .currentThread()</span><br><span class="line">                .getContextClassLoader()</span><br><span class="line">                .getResource(<span class="string">&quot;_653_获取Class的三种方式.class&quot;</span>)</span><br><span class="line">                .getPath();</span><br><span class="line">        <span class="comment">// 拿到文件的绝对路径</span></span><br><span class="line">        System.out.println(path);</span><br><span class="line"></span><br><span class="line">        String path2 = Thread</span><br><span class="line">                .currentThread()</span><br><span class="line">                .getContextClassLoader()</span><br><span class="line">                .getResource(<span class="string">&quot;_656_通过读属性文件实例化对象.properties&quot;</span>)</span><br><span class="line">                .getPath();</span><br><span class="line">        System.out.println(path2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            /D:/Workspace/Java/%e3%80%90JavaSE%e3%80%91BiliBili%e5%8a%a8%e5%8a%9b%e8%8a%82%e7%82%b9/out/production/%e3%80%90651-685%e3%80%91%e5%8f%8d%e5%b0%84%e6%9c%ba%e5%88%b6/_653_%e8%8e%b7%e5%8f%96Class%e7%9a%84%e4%b8%89%e7%a7%8d%e6%96%b9%e5%bc%8f.class</span></span><br><span class="line"><span class="comment">            /D:/Workspace/Java/%e3%80%90JavaSE%e3%80%91BiliBili%e5%8a%a8%e5%8a%9b%e8%8a%82%e7%82%b9/out/production/%e3%80%90651-685%e3%80%91%e5%8f%8d%e5%b0%84%e6%9c%ba%e5%88%b6/_656_%e9%80%9a%e8%bf%87%e8%af%bb%e5%b1%9e%e6%80%a7%e6%96%87%e4%bb%b6%e5%ae%9e%e4%be%8b%e5%8c%96%e5%af%b9%e8%b1%a1.properties</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Thread-currentThread-getContextClassLoader-getResourceAsStream-“”"><a href="#Thread-currentThread-getContextClassLoader-getResourceAsStream-“”" class="headerlink" title="Thread.currentThread().getContextClassLoader().getResourceAsStream(“”)"></a>Thread.currentThread().getContextClassLoader().getResourceAsStream(“”)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_659_</span>以流的形式直接返回 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 通过这种方式得到文件路径</span></span><br><span class="line">        <span class="comment">// 有很好的移植性</span></span><br><span class="line">        <span class="comment">// 获取绝对路径 不支持中文 所以只是写个样子</span></span><br><span class="line"><span class="comment">//        String path = Thread</span></span><br><span class="line"><span class="comment">//                .currentThread()</span></span><br><span class="line"><span class="comment">//                .getContextClassLoader()</span></span><br><span class="line"><span class="comment">//                .getResource(&quot;_659_以流的形式直接返回.properties&quot;)</span></span><br><span class="line"><span class="comment">//                .getPath();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        FileInputStream fis = new FileInputStream(path);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这种直接以流的形式返回</span></span><br><span class="line">        InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(<span class="string">&quot;_659_以流的形式直接返回.properties&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Properties mp = <span class="keyword">new</span> Properties();</span><br><span class="line">        mp.load(is);</span><br><span class="line"></span><br><span class="line">        System.out.println(mp.getProperty(<span class="string">&quot;className&quot;</span>)); <span class="comment">// User</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="资源绑定器"><a href="#资源绑定器" class="headerlink" title="资源绑定器"></a>资源绑定器</h1><p>便于获取属性配置文件中的内容<br>使用以下这种方式的时候，属性配置文件 xxx.properties 必须放在类路径下<br>写路径是只能写 “xxx” 不能加扩展名  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ResourceBundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_660_</span>资源绑定器 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ResourceBundle bundle = ResourceBundle.getBundle(<span class="string">&quot;_660_资源绑定器&quot;</span>);</span><br><span class="line">        System.out.println(bundle); <span class="comment">// java.util.PropertyResourceBundle@4554617c</span></span><br><span class="line"></span><br><span class="line">        String s = bundle.getString(<span class="string">&quot;className&quot;</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// Date</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="类加载机制"><a href="#类加载机制" class="headerlink" title="类加载机制"></a>类加载机制</h1><h2 id="什么是类加载器"><a href="#什么是类加载器" class="headerlink" title="什么是类加载器"></a>什么是类加载器</h2><p>专门负责加载类的命令/工具<br>ClassLoader  </p><h2 id="JDK自带3个类加载器"><a href="#JDK自带3个类加载器" class="headerlink" title="JDK自带3个类加载器"></a>JDK自带3个类加载器</h2><ol><li>启动类加载器  </li><li>扩展类加载器  </li><li>应用类加载器  </li></ol><p>如果自己写了一个类String，植入java.lang.String，那么首先加载启动类加载器”父”也就是java本身的String类，再从扩展类加载器加载”母”，这是双亲委派机制<br>最后从应用类加载器加载，也就是自己写的类  </p><h2 id="example"><a href="#example" class="headerlink" title="example"></a>example</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="string">&quot;abc&quot;</span>;</span><br></pre></td></tr></table></figure><p>首先通过启动类加载器，寻找String.class，专门加载/jre/lib/rt.jar下的class文件<br>如果找不到则扩展类加载器寻找，专门加载/jre/lib/ext/*.jar下的class文件<br>如果还找不到则应用类加载器寻找，专门加载classpath中的jar包（计算机中的”环境变量classpath”）  </p><h1 id="Field"><a href="#Field" class="headerlink" title="Field"></a>Field</h1><h2 id="获取Field"><a href="#获取Field" class="headerlink" title="获取Field"></a>获取Field</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_664_</span>获取<span class="title">Field</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; student = Class.forName(<span class="string">&quot;Student&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取类中所有public的属性</span></span><br><span class="line">        Field[] fields = student.getFields();</span><br><span class="line">        System.out.println(fields.length); <span class="comment">// 1</span></span><br><span class="line">        System.out.println(fields[<span class="number">0</span>]); <span class="comment">// public int Student.no</span></span><br><span class="line">        System.out.println(fields[<span class="number">0</span>].getName()); <span class="comment">// no</span></span><br><span class="line"></span><br><span class="line">        Field[] declaredFields = student.getDeclaredFields();</span><br><span class="line">        System.out.println(declaredFields.length); <span class="comment">// 4</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; declaredFields.length; i++) &#123;</span><br><span class="line">            System.out.println(declaredFields[i]);</span><br><span class="line">            System.out.println(declaredFields[i].getModifiers() + <span class="string">&quot;-&gt;&quot;</span> + Modifier.toString( declaredFields[i].getModifiers() ) );</span><br><span class="line">            System.out.println(declaredFields[i].getType());</span><br><span class="line">            System.out.println(declaredFields[i].getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            private java.lang.String Student.name</span></span><br><span class="line"><span class="comment">                2-&gt;private</span></span><br><span class="line"><span class="comment">                class java.lang.String</span></span><br><span class="line"><span class="comment">                name</span></span><br><span class="line"><span class="comment">            boolean Student.sex</span></span><br><span class="line"><span class="comment">                0-&gt;</span></span><br><span class="line"><span class="comment">                boolean</span></span><br><span class="line"><span class="comment">                sex</span></span><br><span class="line"><span class="comment">            protected int Student.age</span></span><br><span class="line"><span class="comment">                4-&gt;protected</span></span><br><span class="line"><span class="comment">                int</span></span><br><span class="line"><span class="comment">                age</span></span><br><span class="line"><span class="comment">            public int Student.no</span></span><br><span class="line"><span class="comment">                1-&gt;public</span></span><br><span class="line"><span class="comment">                int</span></span><br><span class="line"><span class="comment">                no</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">boolean</span> sex;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> no;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反编译Field"><a href="#反编译Field" class="headerlink" title="反编译Field"></a>反编译Field</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_665_</span>反编译<span class="title">Field</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        StringBuilder s = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        Class&lt;?&gt; student = Class.forName(<span class="string">&quot;Student&quot;</span>);</span><br><span class="line"></span><br><span class="line">        s.append(Modifier.toString(student.getModifiers()) + <span class="string">&quot; class &quot;</span> + student.getName() + <span class="string">&quot; &#123;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Field[] declaredFields = student.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span> (Field i : declaredFields)&#123;</span><br><span class="line">            s.append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            s.append(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            s.append(Modifier.toString(i.getModifiers()));</span><br><span class="line">            s.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            s.append(i.getType().getSimpleName());</span><br><span class="line">            s.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            s.append(i.getName());</span><br><span class="line">            s.append(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        s.append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        s.append(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">             class Student &#123;</span></span><br><span class="line"><span class="comment">                private String name;</span></span><br><span class="line"><span class="comment">                 boolean sex;</span></span><br><span class="line"><span class="comment">                protected int age;</span></span><br><span class="line"><span class="comment">                public int no;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="通过反射机制访问对象属性"><a href="#通过反射机制访问对象属性" class="headerlink" title="通过反射机制访问对象属性"></a>通过反射机制访问对象属性</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_666_</span>通过反射机制访问对象属性 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchFieldException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; student = Class.forName(<span class="string">&quot;Student2&quot;</span>);</span><br><span class="line">        Object o = student.newInstance();</span><br><span class="line">        <span class="comment">// 获取 no 属性</span></span><br><span class="line">        Field no = student.getDeclaredField(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">        <span class="comment">// 给 o 对象的no属性赋值</span></span><br><span class="line">        no.set(o, <span class="number">222</span>);</span><br><span class="line">        <span class="comment">// 读取属性的值</span></span><br><span class="line">        System.out.println(no.get(o)); <span class="comment">// 222</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取 name 属性</span></span><br><span class="line">        Field name = student.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="comment">// 打破封装（反射机制的缺点：打破封装，给不法分子留机会~）</span></span><br><span class="line">        <span class="comment">// 这样设置完后，外部也可访问private</span></span><br><span class="line">        name.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 给 o 对象name属性赋值</span></span><br><span class="line">        name.set(o, <span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">        <span class="comment">// 读取属性值</span></span><br><span class="line">        System.out.println(name.get(o)); <span class="comment">// zhangsan</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student2</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">boolean</span> sex;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> no;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">double</span> PI = <span class="number">3.1415</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h1><h2 id="可变长度参数"><a href="#可变长度参数" class="headerlink" title="可变长度参数"></a>可变长度参数</h2><ol><li>可变长参数得在参数列表的最后一个  </li><li>可变长参数可以当作数组来看待  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_668_</span>可变长度参数 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        f();</span><br><span class="line">        f(<span class="number">123</span>);</span><br><span class="line">        f(<span class="number">123</span>,<span class="number">23</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line">        f(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">23</span>,<span class="number">5</span>,<span class="number">6</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span>... args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;f() start~&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : args) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">g</span><span class="params">(<span class="keyword">int</span> n, String... args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="反射Method"><a href="#反射Method" class="headerlink" title="反射Method"></a>反射Method</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Parameter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_669_</span>反射<span class="title">Method</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取类</span></span><br><span class="line">        Class&lt;?&gt; userService = Class.forName(<span class="string">&quot;UserService&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取所有的Method</span></span><br><span class="line">        Method[] methods = userService.getDeclaredMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">            System.out.println(method);</span><br><span class="line">            System.out.println(method.getName());</span><br><span class="line">            System.out.println(method.getReturnType());</span><br><span class="line">            System.out.println(Modifier.toString(method.getModifiers()));</span><br><span class="line">            <span class="comment">// 方法参数列表</span></span><br><span class="line">            Parameter[] parameters = method.getParameters();</span><br><span class="line">            <span class="keyword">for</span> (Parameter parameter : parameters) &#123;</span><br><span class="line">                System.out.println(parameter.getType().getSimpleName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            public void UserService.logout()</span></span><br><span class="line"><span class="comment">                logout</span></span><br><span class="line"><span class="comment">                void</span></span><br><span class="line"><span class="comment">                public</span></span><br><span class="line"><span class="comment">            public boolean UserService.login(java.lang.String,java.lang.String)</span></span><br><span class="line"><span class="comment">                login</span></span><br><span class="line"><span class="comment">                boolean</span></span><br><span class="line"><span class="comment">                public</span></span><br><span class="line"><span class="comment">                String</span></span><br><span class="line"><span class="comment">                String</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(String name, String password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(name == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(name.equals(password))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logout</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;exit ok~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="反编译Method"><a href="#反编译Method" class="headerlink" title="反编译Method"></a>反编译Method</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Parameter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_670_</span>反编译<span class="title">Method</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; userService = Class.forName(<span class="string">&quot;UserService&quot;</span>);</span><br><span class="line">        StringBuilder s = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="comment">//        System.out.println(userService);</span></span><br><span class="line">        s.append(userService);</span><br><span class="line">        s.append(<span class="string">&quot; &#123;&quot;</span>);</span><br><span class="line">        Method[] declaredMethods = userService.getDeclaredMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method declaredMethod : declaredMethods) &#123;</span><br><span class="line">            s.append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            s.append(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            <span class="comment">// 获取修饰符</span></span><br><span class="line">            s.append(Modifier.toString(declaredMethod.getModifiers()));</span><br><span class="line">            s.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="comment">// 获取返回类型</span></span><br><span class="line">            s.append(declaredMethod.getReturnType());</span><br><span class="line">            s.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="comment">// 获取函数名</span></span><br><span class="line">            s.append(declaredMethod.getName());</span><br><span class="line">            s.append(<span class="string">&quot;(&quot;</span>);</span><br><span class="line">            <span class="comment">// 获取参数类型和参数名</span></span><br><span class="line">            Parameter[] parameters = declaredMethod.getParameters();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; parameters.length; i++ ) &#123;</span><br><span class="line">                s.append(parameters[i].getType().getSimpleName());</span><br><span class="line">                s.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                s.append(parameters[i].getName());</span><br><span class="line">                <span class="keyword">if</span> (i != parameters.length - <span class="number">1</span>)&#123;</span><br><span class="line">                    s.append(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            s.append(<span class="string">&quot;)&quot;</span>);</span><br><span class="line">            s.append(<span class="string">&quot;&#123;&#125;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        s.append(<span class="string">&quot;\n&#125;&quot;</span>);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="反射机制调用Method"><a href="#反射机制调用Method" class="headerlink" title="反射机制调用Method"></a>反射机制调用Method</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_671_</span>反射机制调用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException, InvocationTargetException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取类</span></span><br><span class="line">        Class&lt;?&gt; userService = Class.forName(<span class="string">&quot;UserService&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建对象</span></span><br><span class="line">        Object o = userService.newInstance();</span><br><span class="line">        <span class="comment">// 获取对应方法</span></span><br><span class="line">        Method login = userService.getDeclaredMethod(<span class="string">&quot;login&quot;</span>, String.class, String.class);</span><br><span class="line">        <span class="comment">// 调用该方法</span></span><br><span class="line">        Object invoke = login.invoke(o, <span class="string">&quot;cc&quot;</span>, <span class="string">&quot;cc&quot;</span>);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        System.out.println(invoke); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Constructor"><a href="#Constructor" class="headerlink" title="Constructor"></a>Constructor</h1><h2 id="反射Constructor"><a href="#反射Constructor" class="headerlink" title="反射Constructor"></a>反射Constructor</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.invoke.CallSite;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Modifier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_672_</span>反射<span class="title">Constructor</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        StringBuilder s = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        Class&lt;?&gt; vip = Class.forName(<span class="string">&quot;Vip&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 先拼接类</span></span><br><span class="line">        s.append(Modifier.toString(vip.getModifiers()));</span><br><span class="line">        s.append(<span class="string">&quot; class &quot;</span>);</span><br><span class="line">        s.append(vip.getSimpleName());</span><br><span class="line">        s.append(<span class="string">&quot;&#123;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 拼接构造方法</span></span><br><span class="line">        Constructor&lt;?&gt;[] declaredConstructors = vip.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span> (Constructor&lt;?&gt; declaredConstructor : declaredConstructors) &#123;</span><br><span class="line">            s.append(<span class="string">&quot;\n\t&quot;</span>);</span><br><span class="line">            s.append(Modifier.toString(declaredConstructor.getModifiers()));</span><br><span class="line">            s.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            s.append(declaredConstructor.getName());</span><br><span class="line">            s.append(<span class="string">&quot;(&quot;</span>);</span><br><span class="line">            <span class="comment">// 拼接参数</span></span><br><span class="line">            Class&lt;?&gt;[] parameterTypes = declaredConstructor.getParameterTypes();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; parameterTypes.length; i++) &#123;</span><br><span class="line">                s.append(parameterTypes[i].getSimpleName());</span><br><span class="line">                <span class="keyword">if</span>(i != parameterTypes.length - <span class="number">1</span>)&#123;</span><br><span class="line">                    s.append(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            s.append(<span class="string">&quot;)&quot;</span>);</span><br><span class="line">            s.append(<span class="string">&quot;&#123;&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        s.append(<span class="string">&quot;\n&#125;&quot;</span>);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         class Vip&#123;</span></span><br><span class="line"><span class="comment">            public Vip(int, String)&#123;&#125;</span></span><br><span class="line"><span class="comment">            public Vip(int, String, String)&#123;&#125;</span></span><br><span class="line"><span class="comment">            public Vip(int, String, String, boolean)&#123;&#125;</span></span><br><span class="line"><span class="comment">            public Vip()&#123;&#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vip</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> no;</span><br><span class="line">    String name;</span><br><span class="line">    String birth;</span><br><span class="line">    <span class="keyword">boolean</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Vip</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Vip</span><span class="params">(<span class="keyword">int</span> no, String name, String birth, <span class="keyword">boolean</span> sex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.no = no;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.birth = birth;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Vip</span><span class="params">(<span class="keyword">int</span> no, String name, String birth)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.no = no;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.birth = birth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Vip</span><span class="params">(<span class="keyword">int</span> no, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.no = no;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="反射机制调用Constructor"><a href="#反射机制调用Constructor" class="headerlink" title="反射机制调用Constructor"></a>反射机制调用Constructor</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_673_</span>反射机制调用构造方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Class&lt;?&gt; vip = Class.forName(<span class="string">&quot;Vip&quot;</span>);</span><br><span class="line">        <span class="comment">// 直接无参构造</span></span><br><span class="line">        Object o1 = vip.newInstance();</span><br><span class="line">        System.out.println(o1); <span class="comment">// Vip&#123;no=0, name=&#x27;null&#x27;, birth=&#x27;null&#x27;, sex=false&#125;</span></span><br><span class="line">        <span class="comment">// 有参构造</span></span><br><span class="line">        Constructor&lt;?&gt; declaredConstructor = vip.getDeclaredConstructor(<span class="keyword">int</span>.class, String.class, String.class, <span class="keyword">boolean</span>.class);</span><br><span class="line">        Object o2 = declaredConstructor.newInstance(<span class="number">1</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="keyword">true</span>);</span><br><span class="line">        System.out.println(o2); <span class="comment">// Vip&#123;no=1, name=&#x27;a&#x27;, birth=&#x27;b&#x27;, sex=true&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="获取父类和父接口"><a href="#获取父类和父接口" class="headerlink" title="获取父类和父接口"></a>获取父类和父接口</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_674_</span>获取父类和父接口 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class&lt;?&gt; stringClass = Class.forName(<span class="string">&quot;java.lang.String&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取父类</span></span><br><span class="line">        Class&lt;?&gt; superclass = stringClass.getSuperclass();</span><br><span class="line">        System.out.println(superclass.getName()); <span class="comment">// java.lang.Object</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取接口</span></span><br><span class="line">        Class&lt;?&gt;[] interfaces = stringClass.getInterfaces();</span><br><span class="line">        <span class="keyword">for</span> (Class&lt;?&gt; anInterface : interfaces) &#123;</span><br><span class="line">            System.out.println(anInterface);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            interface java.io.Serializable</span></span><br><span class="line"><span class="comment">            interface java.lang.Comparable</span></span><br><span class="line"><span class="comment">            interface java.lang.CharSequence</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="注解-Annotation"><a href="#注解-Annotation" class="headerlink" title="注解 Annotation"></a>注解 Annotation</h1><p>是一种引用数据类型，编译后也是生成xxx.class文件    </p><h2 id="如何定义注解"><a href="#如何定义注解" class="headerlink" title="如何定义注解"></a>如何定义注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[修饰符列表] <span class="meta">@interface</span> 注解类型名&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnnotation&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="如何用在哪可以用"><a href="#如何用在哪可以用" class="headerlink" title="如何用在哪可以用"></a>如何用在哪可以用</h2><ol><li>语法格式是：@注解类型名  </li><li>注解可以出现在类上、属性上、方法上、变量上等  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_675_</span>注解怎么定义怎么用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@_675_</span>注解怎么定义怎么用Annotation</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Annotation</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@_675_</span>注解怎么定义怎么用Annotation</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> no;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@_675_</span>注解怎么定义怎么用<span class="function">Annotation</span></span><br><span class="line"><span class="function">    <span class="keyword">public</span> <span class="title">Annotation</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.no = no;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@_675_</span>注解怎么定义怎么用<span class="function">Annotation</span></span><br><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">g</span><span class="params">(<span class="meta">@_675_</span>注解怎么定义怎么用Annotation String name)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@_675_</span>注解怎么定义怎么用Annotation</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">MyInterface</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@_675_</span>注解怎么定义怎么用Annotation</span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Season</span></span>&#123;</span><br><span class="line">    SPRING,</span><br><span class="line">    SUMMER,</span><br><span class="line">    AUTUMN,</span><br><span class="line">    WINTER</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="JDK内置了哪些注解"><a href="#JDK内置了哪些注解" class="headerlink" title="JDK内置了哪些注解"></a>JDK内置了哪些注解</h2><p>java.lang包下的注释类型:<br>Deprecated用@Deprecated注释的程序元素，不鼓励程序员使用这样的元素，通常是因为它很危险或存在更好的选择。<br>Override表示一个方法声明打算重写超类中的另一个方法声明。<br>SuppressWarnings指示应该在注释元素（以及包含在该注释元素中的所有程序元素)中取消显示指定的编译器警告。    </p><h2 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a>元注解</h2><p>元注解是负责对其它注解进行说明的注解，自定义注解时可以使用元注解。<br>Java 5 定义了 4 个注解，分别是 @Documented、@Target、@Retention 和 @Inherited。Java 8 又增加了 @Repeatable 和 @Native 两个注解  </p><h3 id="Target"><a href="#Target" class="headerlink" title="@Target"></a>@Target</h3><p>@Target用来标注”被标注的注解”可以出现在哪些位置  </p><h3 id="Retention"><a href="#Retention" class="headerlink" title="@Retention"></a>@Retention</h3><p>@Retention用来标注”被标注的注解”最终保存在哪<br>@Retention(RetentionPolicy.SOURCE):表示该注解只被保留在java源文件中。<br>@Retention(RetentionPolicy.CLASS):表示该注解被保存在class文件中。<br>@Retention(RetentionPolicy.RUNTIME):表示该注解被保存在class文件中，并且可以被反射机制锁读取   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Retention&#123;</span><br><span class="line">    <span class="comment">// 属性</span></span><br><span class="line">    <span class="function">RetentionPolicy <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">RetentionPolcy</span></span>&#123;</span><br><span class="line">    SOURCE,</span><br><span class="line">    CLASS,</span><br><span class="line">    RUNTIME</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Deprecated"><a href="#Deprecated" class="headerlink" title="@Deprecated"></a>@Deprecated</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_678_Deprecated</span>注解 </span>&#123;</span><br><span class="line">    <span class="comment">// 过时了</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">doSome</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;doSome~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        doSome();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注解中定义属性"><a href="#注解中定义属性" class="headerlink" title="注解中定义属性"></a>注解中定义属性</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> _679_注解中定义属性Annotation &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 以下这个是name属性</span></span><br><span class="line"><span class="comment">     * 看着像一个方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">color</span><span class="params">()</span> <span class="keyword">default</span> &quot;red&quot;</span>; <span class="comment">// 这样就写注解时可以不写这个属性</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_679_</span>注解中定义属性 </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@_679_</span>注解中定义属性Annotation(name = <span class="string">&quot;赋值&quot;</span>, color = <span class="string">&quot;red&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">doSome</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;doSome~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="属性是value时可以省略-属性名"><a href="#属性是value时可以省略-属性名" class="headerlink" title="属性是value时可以省略(属性名)"></a>属性是value时可以省略(属性名)</h2><p>如果一个注解的属性只有一个并且是value就可行   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_680_</span>属性是<span class="title">value</span>时可以省略 </span>&#123;</span><br><span class="line">    <span class="meta">@_680_</span>属性是value时可以省略Annotation(<span class="string">&quot;abc&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> _680_属性是value时可以省略Annotation &#123;</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="属性是个数组"><a href="#属性是个数组" class="headerlink" title="属性是个数组"></a>属性是个数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> _682_属性是个数组Annotation &#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">value1</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">value2</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="keyword">int</span>[] value3();</span><br><span class="line">    String[] value4();</span><br><span class="line">    <span class="function">Season1 <span class="title">value5</span><span class="params">()</span></span>;</span><br><span class="line">    Season1[] value6();</span><br><span class="line">    <span class="function">Class <span class="title">parameterType</span><span class="params">()</span></span>;</span><br><span class="line">    Class[] parameterTypes();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Season1</span></span>&#123;</span><br><span class="line">    SPRING,</span><br><span class="line">    SUMMER,</span><br><span class="line">    AUTUMN,</span><br><span class="line">    WINTER</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> _682_属性是个数组Annotation &#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">age</span><span class="params">()</span></span>;</span><br><span class="line">    String[] email();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组只有一个元素，可省略&quot;&#123;&#125;&quot;</span></span><br><span class="line"><span class="meta">@_682_</span>属性是个数组Annotation(age = <span class="number">3</span>, email = <span class="string">&quot;xxx@qq.com&quot;</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_682_</span>属性是个数组 </span>&#123;</span><br><span class="line">    <span class="meta">@_682_</span>属性是个数组Annotation(age = <span class="number">3</span>, email = &#123;<span class="string">&quot;xxx@qq.com&quot;</span>, <span class="string">&quot;xxx@gmail.com&quot;</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="反射注解"><a href="#反射注解" class="headerlink" title="反射注解"></a>反射注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_683_</span>反射注解 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; annotation = Class.forName(<span class="string">&quot;_683_反射注解Annotation&quot;</span>);</span><br><span class="line">        <span class="comment">// 判断该注解上是否有 某某 注解</span></span><br><span class="line">        System.out.println(annotation.isAnnotationPresent(Target.class)); <span class="comment">// true</span></span><br><span class="line">        <span class="comment">// 如果有 则获取该注解对象</span></span><br><span class="line">        <span class="keyword">if</span>(annotation.isAnnotationPresent(Target.class))&#123;</span><br><span class="line">            Target annotation1 = annotation.getAnnotation(Target.class);</span><br><span class="line">            System.out.println(annotation1);</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                @java.lang.annotation.Target(value=[TYPE, FIELD, METHOD])</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            ElementType[] value = annotation1.value();</span><br><span class="line">            <span class="keyword">for</span> (ElementType elementType : value) &#123;</span><br><span class="line">                System.out.println(elementType);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                TYPE</span></span><br><span class="line"><span class="comment">                FIELD</span></span><br><span class="line"><span class="comment">                METHOD</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="通过反射获取注解对象属性值"><a href="#通过反射获取注解对象属性值" class="headerlink" title="通过反射获取注解对象属性值"></a>通过反射获取注解对象属性值</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_684_</span>通过反射获取注解对象属性值 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 获取类</span></span><br><span class="line">        Class&lt;?&gt; c = Class.forName(<span class="string">&quot;MyAnnotationTest&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取doSome()</span></span><br><span class="line">        Method doSome = c.getDeclaredMethod(<span class="string">&quot;doSome&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取注解</span></span><br><span class="line">        <span class="keyword">if</span> (doSome.isAnnotationPresent(_684_通过反射获取注解对象属性值Annotation.class))&#123;</span><br><span class="line">            _684_通过反射获取注解对象属性值Annotation annotation = doSome.getAnnotation(_684_通过反射获取注解对象属性值Annotation.class);</span><br><span class="line">            System.out.println(annotation.username());</span><br><span class="line">            System.out.println(annotation.password());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            cc</span></span><br><span class="line"><span class="comment">            cc</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyAnnotationTest</span></span>&#123;</span><br><span class="line">    <span class="meta">@_684_</span>通过反射获取注解对象属性值Annotation(username = <span class="string">&quot;cc&quot;</span>, password = <span class="string">&quot;cc&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSome</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【598-650】多线程</title>
      <link href="/2022/02/05/JavaSE/%E3%80%90598-650%E3%80%91%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
      <url>/2022/02/05/JavaSE/%E3%80%90598-650%E3%80%91%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="进程和线程是什么"><a href="#进程和线程是什么" class="headerlink" title="进程和线程是什么"></a>进程和线程是什么</h2><p>进程是一个应用程序，可启动多个线程<br>线程是进程中的执行单元  </p><h2 id="DOS输入-java-HelloWorld-后发生了什么"><a href="#DOS输入-java-HelloWorld-后发生了什么" class="headerlink" title="DOS输入 java HelloWorld 后发生了什么"></a>DOS输入 java HelloWorld 后发生了什么</h2><ol><li>先启动JVM，JVM就是一个进程  </li><li>JVM再启动一个主线程调用main方法  </li><li>同时启动一个垃圾回收线程负责看护，回收垃圾  </li><li>此时有两个线程并发  </li></ol><h2 id="进程和线程是什么关系"><a href="#进程和线程是什么关系" class="headerlink" title="进程和线程是什么关系"></a>进程和线程是什么关系</h2><ol><li>两进程之间内存独立不共享  </li><li>两线程之间堆内存和方法区内存共享，栈内存独立不共享，多个线程启动多个栈，就是多线程并发，可以提高效率    </li><li>main方法结束后只是主线程结束了，其他线程可能还在压栈弹栈  </li></ol><h2 id="单核CPU不能真正做到多线程并发"><a href="#单核CPU不能真正做到多线程并发" class="headerlink" title="单核CPU不能真正做到多线程并发"></a>单核CPU不能真正做到多线程并发</h2><ol><li>什么是真正的多线程并发?<br>t1线程执行t1的<br>t2线程执行t2的<br>t1不会影响t2，t2也不会影响t1。  </li><li>单核的CPU表示只有一个大脑:不能够做到真正的多线程并发，但是可以做到给人一种”多线程并发”的感觉，因为人类反应速度较慢    </li></ol><h1 id="实现线程的方式"><a href="#实现线程的方式" class="headerlink" title="实现线程的方式"></a>实现线程的方式</h1><h2 id="继承java-lang-Thread，重写run"><a href="#继承java-lang-Thread，重写run" class="headerlink" title="继承java.lang.Thread，重写run()"></a>继承java.lang.Thread，重写run()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_603_</span>实现线程的第一种方式 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyThread myThread = <span class="keyword">new</span> MyThread();</span><br><span class="line">        <span class="comment">// 启动线程 在JVM中开辟一个新的栈</span></span><br><span class="line">        <span class="comment">// 开完栈空间此行代码结束</span></span><br><span class="line">        <span class="comment">// 栈中run方法在栈底，main方法在主栈底</span></span><br><span class="line">        myThread.start();</span><br><span class="line">        <span class="comment">// 这儿的代码还在main主线程中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;主线程 -- &gt; &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;MyThread run begin~&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;分支线程 -- &gt; &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现java-lang-Runnable接口，实现run"><a href="#实现java-lang-Runnable接口，实现run" class="headerlink" title="实现java.lang.Runnable接口，实现run()"></a>实现java.lang.Runnable接口，实现run()</h2><p>面向接口编程，使用较多</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_605_</span>实现线程的第二种方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyRunnable());</span><br><span class="line">        thread.start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;主线程 -- &gt; &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这是一个线程类，是一个可运行的类，还不是一个线程</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;MyThread run begin~&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;分支线程 -- &gt; &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_606_</span>采用匿名内部类方式 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;分支线程 -- &gt; &quot;</span> + i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        thread.start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;主线程 -- &gt; &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="线程生命周期"><a href="#线程生命周期" class="headerlink" title="线程生命周期"></a>线程生命周期</h1><p>这儿因该有张图…  </p><h1 id="线程相关方法"><a href="#线程相关方法" class="headerlink" title="线程相关方法"></a>线程相关方法</h1><h2 id="public-final-synchronized-void-setName-String-name"><a href="#public-final-synchronized-void-setName-String-name" class="headerlink" title="public final synchronized void setName(String name)"></a>public final synchronized void setName(String name)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_609_</span>获取线程名字 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyThread2 myThread2 = <span class="keyword">new</span> MyThread2();</span><br><span class="line">        <span class="comment">// 设置线程名字</span></span><br><span class="line">        myThread2.setName(<span class="string">&quot;线程&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取线程名字</span></span><br><span class="line">        System.out.println(myThread2.getName());</span><br><span class="line">        <span class="comment">// 启动线程</span></span><br><span class="line">        myThread2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread2</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;分支线程 -&gt; &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="public-final-String-getName"><a href="#public-final-String-getName" class="headerlink" title="public final String getName()"></a>public final String getName()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_609_</span>获取线程名字 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyThread2 myThread2 = <span class="keyword">new</span> MyThread2();</span><br><span class="line">        <span class="comment">// 设置线程名字</span></span><br><span class="line">        myThread2.setName(<span class="string">&quot;线程&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取线程名字</span></span><br><span class="line">        System.out.println(myThread2.getName());</span><br><span class="line">        <span class="comment">// 启动线程</span></span><br><span class="line">        myThread2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread2</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;分支线程 -&gt; &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="public-static-native-Thread-currentThread"><a href="#public-static-native-Thread-currentThread" class="headerlink" title="public static native Thread currentThread();"></a>public static native Thread currentThread();</h2><p>出现在哪就是获取当前线程对象   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_610_</span>获取当前线程对象 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 这个方法出现在main方法中，所以当前线程就是主线程</span></span><br><span class="line">        Thread currentThread = Thread.currentThread();</span><br><span class="line">        System.out.println(currentThread.getName()); <span class="comment">// main</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-static-native-void-sleep-long-millis-throws-InterruptedException"><a href="#public-static-native-void-sleep-long-millis-throws-InterruptedException" class="headerlink" title="public static native void sleep(long millis) throws InterruptedException"></a>public static native void sleep(long millis) throws InterruptedException</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_611_</span>线程<span class="title">sleep</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;五秒之后的输出~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_612_sleep</span>方法的面试题 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyThread3 myThread3 = <span class="keyword">new</span> MyThread3();</span><br><span class="line">        myThread3.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            myThread3.sleep(<span class="number">5000</span>);</span><br><span class="line">            <span class="comment">// 这执行的时候会转化为 -&gt; Thread.sleep(5000)</span></span><br><span class="line">            <span class="comment">// 也就是当前main线程进入休眠</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 结果是 &quot;HELLO WORLD~&quot; 在五秒后输出</span></span><br><span class="line">        System.out.println(<span class="string">&quot;HELLO WORLD~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread3</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="public-void-interrupt"><a href="#public-void-interrupt" class="headerlink" title="public void interrupt()"></a>public void interrupt()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_613_</span>终止线程的睡眠 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyRunnable2());</span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 希望 5 秒之后 thread 线程醒来</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 终止线程睡眠</span></span><br><span class="line">        thread.interrupt();</span><br><span class="line">        <span class="comment">// 在第 8 行报异常，进入catch然后结束醒来</span></span><br><span class="line">        <span class="comment">// 依靠异常机制</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            Thread-0-&gt; begin</span></span><br><span class="line"><span class="comment">            java.lang.InterruptedException: sleep interrupted</span></span><br><span class="line"><span class="comment">                at java.lang.Thread.sleep(Native Method)</span></span><br><span class="line"><span class="comment">                at MyRunnable2.run(_613_终止线程的睡眠.java:25)</span></span><br><span class="line"><span class="comment">                at java.lang.Thread.run(Thread.java:748)</span></span><br><span class="line"><span class="comment">            Thread-0-&gt; end</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRunnable2</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="comment">// 子类不能父类抛出更多异常</span></span><br><span class="line">    <span class="comment">// 所以run()只能try catch</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt; begin&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">100000000</span>);</span><br><span class="line">            Thread.sleep(<span class="number">1000000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt; end&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="public-final-void-stop"><a href="#public-final-void-stop" class="headerlink" title="public final void stop()"></a>public final void stop()</h2><p>终止一个线程的执行<br>相当于突然断点，内存中的东西没有保存，不建议使用  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_614_</span>强行终止线程的执行 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyRunnable3());</span><br><span class="line">        <span class="comment">// 5 sec后终止线程</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        Thread.stop();</span><br><span class="line">        System.out.println(<span class="string">&quot;==========&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRunnable3</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt; &quot;</span> + i);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="合理的终止一个线程的执行"><a href="#合理的终止一个线程的执行" class="headerlink" title="合理的终止一个线程的执行"></a>合理的终止一个线程的执行</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_615_</span>合理的终止一个线程的执行 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyRunnable4 myRunnable4 = <span class="keyword">new</span> MyRunnable4();</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(myRunnable4);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        thread.start();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        myRunnable4.run = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            Thread-0-&gt;0</span></span><br><span class="line"><span class="comment">            Thread-0-&gt;1</span></span><br><span class="line"><span class="comment">            Thread-0-&gt;2</span></span><br><span class="line"><span class="comment">            Thread-0-&gt;3</span></span><br><span class="line"><span class="comment">            Thread-0-&gt;4</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRunnable4</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> run = <span class="keyword">true</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(run)&#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + i);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 这儿可以进行一些保存操作...</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="线程调度"><a href="#线程调度" class="headerlink" title="线程调度"></a>线程调度</h1><h2 id="线程调度模型"><a href="#线程调度模型" class="headerlink" title="线程调度模型"></a>线程调度模型</h2><ol><li>抢占式调度模型：按照线程的优先级来看，优先级越高，强盗CPU时间片的概率就高一些，java采用的就是这种  </li><li>均分式调度模型：平均分配CPU时间片，每个线程占用时间片时间长度相同   </li></ol><h2 id="线程调度方法"><a href="#线程调度方法" class="headerlink" title="线程调度方法"></a>线程调度方法</h2><h3 id="public-final-int-getPriority"><a href="#public-final-int-getPriority" class="headerlink" title="public final int getPriority()"></a>public final int getPriority()</h3><p>线程最低优先级是1，最高是10，默认是5  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_618_</span>线程优先级 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;线程最高优先级&quot;</span> + Thread.MAX_PRIORITY);</span><br><span class="line">        System.out.println(<span class="string">&quot;线程最低优先级&quot;</span> + Thread.MIN_PRIORITY);</span><br><span class="line">        System.out.println(<span class="string">&quot;线程默认优先级&quot;</span> + Thread.NORM_PRIORITY);</span><br><span class="line"></span><br><span class="line">        Thread thread = Thread.currentThread();</span><br><span class="line">        System.out.println(thread.getPriority()); <span class="comment">// 5</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="public-final-void-setPriority-int-newPriority"><a href="#public-final-void-setPriority-int-newPriority" class="headerlink" title="public final void setPriority(int newPriority)"></a>public final void setPriority(int newPriority)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_618_</span>线程优先级 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;线程最高优先级&quot;</span> + Thread.MAX_PRIORITY);</span><br><span class="line">        System.out.println(<span class="string">&quot;线程最低优先级&quot;</span> + Thread.MIN_PRIORITY);</span><br><span class="line">        System.out.println(<span class="string">&quot;线程默认优先级&quot;</span> + Thread.NORM_PRIORITY);</span><br><span class="line"></span><br><span class="line">        Thread thread = Thread.currentThread();</span><br><span class="line">        System.out.println(thread.getPriority()); <span class="comment">// 5</span></span><br><span class="line">        <span class="comment">// 设置优先级</span></span><br><span class="line">        thread.setPriority(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyRunnable5());</span><br><span class="line">        t.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRunnable5</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="public-static-native-void-yield"><a href="#public-static-native-void-yield" class="headerlink" title="public static native void yield()"></a>public static native void yield()</h3><p>让位，当前线程暂停，回到就绪状态，让给其它线程  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_619_</span>线程让位 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyRunnable6());</span><br><span class="line">        t.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRunnable6</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + i);</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">10</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">// 让位</span></span><br><span class="line">                Thread.yield();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="public-final-void-join-throws-InterruptedException"><a href="#public-final-void-join-throws-InterruptedException" class="headerlink" title="public final void join() throws InterruptedException"></a>public final void join() throws InterruptedException</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_620_</span>线程合并 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;main begin~&quot;</span>);</span><br><span class="line">        Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyRunnable7());</span><br><span class="line">        t.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// join() 两个栈之间有等待关系</span></span><br><span class="line">        <span class="comment">// t线程执行直到结束</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            t.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;main over~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRunnable7</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="线程安全"><a href="#线程安全" class="headerlink" title="线程安全"></a>线程安全</h1><h2 id="什么情况出现线程安全问题"><a href="#什么情况出现线程安全问题" class="headerlink" title="什么情况出现线程安全问题"></a>什么情况出现线程安全问题</h2><ol><li>多线程并发  </li><li>有共享数据  </li><li>共享数据有修改的行为<br>（这儿应该有张图…）  </li></ol><h2 id="如何解决线程安全问题"><a href="#如何解决线程安全问题" class="headerlink" title="如何解决线程安全问题"></a>如何解决线程安全问题</h2><p>线程排队执行，这种机制被称为：线程同步机制。也就是线程不能并发，必须排队执行，为了安全牺牲效率。  </p><h2 id="同步和异步的理解"><a href="#同步和异步的理解" class="headerlink" title="同步和异步的理解"></a>同步和异步的理解</h2><ol><li>异步编程模型：线程t1和t2各自执行各自的，就是多线程并发  </li><li>同步编程模型：线程t1和t2在执行的过程中发生等待关系，线程排队执行  </li></ol><h2 id="定义账户类模拟两线程取钱-synchronized"><a href="#定义账户类模拟两线程取钱-synchronized" class="headerlink" title="定义账户类模拟两线程取钱 synchronized"></a>定义账户类模拟两线程取钱 synchronized</h2><p>使用 synchronized 实现线程同步<br>在 synchronized 代码部分中：  </p><ol><li>假设t1和t2线程并发，开始执行以下代码的时候，肯定有一个先一个后。   </li><li>假设t1先执行了，遇到了synchronized，这个时候自动找后面共享对象”的对象锁找到之后，并占有这把锁，然后执行同步代码块中的程序，在程序执行过程中一疸都是占有这把锁的。直到同步代码块代码结束，这把锁才会释故。    </li><li>假设t1已经占有这把锁，此时t2也遇到synchronized关键字，也会去占有后面共享对象的这把锁，结果这把锁被t1占有，t2只能在同步代码块外面等待t1的结束，查到t1把同步代码块执行结束了，,t1会归还这把锁，此时t2终于等到这把锁，然后t2占有这把锁之后，进入同步代码块执行程序。    </li><li>对 synchronized 可以理解为一种阻塞  </li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_625_</span>账户类的定义 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建一个账户</span></span><br><span class="line">        Account act = <span class="keyword">new</span> Account(<span class="string">&quot;act-001&quot;</span>, <span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建两个线程</span></span><br><span class="line">        AccountThread t1 = <span class="keyword">new</span> AccountThread(act);</span><br><span class="line">        AccountThread t2 = <span class="keyword">new</span> AccountThread(act);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置线程名</span></span><br><span class="line">        t1.setName(<span class="string">&quot;t1&quot;</span>);</span><br><span class="line">        t2.setName(<span class="string">&quot;t2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 两个线程开始执行run()</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;账户最终余额：&quot;</span> + act.getBalance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AccountThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Account act;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AccountThread</span><span class="params">(Account o)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.act = o;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 表示取款操作</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// t1 t2 并发这个方法 不考虑安全问题就会出现问题</span></span><br><span class="line">        <span class="comment">// 于是使用 synchronized 同步代码块</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 假设取款5000</span></span><br><span class="line">        <span class="keyword">double</span> money = <span class="number">5000</span>;</span><br><span class="line">        <span class="comment">// 取款并更新余额</span></span><br><span class="line">        act.withdraw(money);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">getAct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> act;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAct</span><span class="params">(Account act)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.act = act;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String actno;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> balance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Account</span><span class="params">(String actno, <span class="keyword">double</span> balance)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.actno = actno;</span><br><span class="line">        <span class="keyword">this</span>.balance = balance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取款</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">withdraw</span><span class="params">(<span class="keyword">double</span> money)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 以下这几行代码一定是线程排队执行！！！</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            假设有t1~5，5个线程</span></span><br><span class="line"><span class="comment">            希望t1~3排队，t4~5不排队</span></span><br><span class="line"><span class="comment">            于是在 synchronized () 中写入 共享对象</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            由于这里账户是共享对象，那么写入 this</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>)&#123;</span><br><span class="line">            <span class="comment">// 一下是线程同步代码块~</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">double</span> before = <span class="keyword">this</span>.getBalance();</span><br><span class="line">            <span class="keyword">double</span> after = before - money;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 模拟网络延迟</span></span><br><span class="line"><span class="comment">//            try &#123;</span></span><br><span class="line"><span class="comment">//                Thread.sleep(1000);</span></span><br><span class="line"><span class="comment">//            &#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="comment">//                e.printStackTrace();</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.setBalance(after);</span><br><span class="line"></span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;操作&quot;</span> + <span class="string">&quot;余额：&quot;</span> + <span class="keyword">this</span>.getBalance());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getActno</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> actno;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setActno</span><span class="params">(String actno)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.actno = actno;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getBalance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> balance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBalance</span><span class="params">(<span class="keyword">double</span> balance)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.balance = balance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>synchronized 可以出现在实例方法上，只能锁this，不灵活，但是省代码<br>表示整个方法体都需要同步  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">withdraw</span><span class="params">(<span class="keyword">double</span> money)</span></span></span><br></pre></td></tr></table></figure><h2 id="哪些变量有线程安全问题"><a href="#哪些变量有线程安全问题" class="headerlink" title="哪些变量有线程安全问题"></a>哪些变量有线程安全问题</h2><ol><li>实例变量：在堆中  </li><li>静态变量：在方法区中  </li><li>局部变量：在栈中  </li></ol><p>以上三大变量中，局部变量不会出现线程安全问题<br>不满足线程安全中共享数据的条件<br>栈可以有很多个，局部变量在栈中，而堆和方法区只有一个<br>synchronized 出现在某类中静态方法上会锁类锁  </p><h2 id="synchronized-的三种写法"><a href="#synchronized-的三种写法" class="headerlink" title="synchronized 的三种写法"></a>synchronized 的三种写法</h2><ol><li>同步代码块  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(线程同步对象)&#123;</span><br><span class="line">    <span class="comment">// 同步代码块</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在实例方法上使用synchronized<br>表示共享对象一定是this，并且同步代码块是整个方法体  </li><li>在静态方法上使用synchronized<br>表示找类锁，类锁只有一把  </li></ol><h1 id="实现死锁"><a href="#实现死锁" class="headerlink" title="实现死锁"></a>实现死锁</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_638_</span>死锁概述 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Object o1 = <span class="keyword">new</span> Object();</span><br><span class="line">        Object o2 = <span class="keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line">        MyThread1 t1 = <span class="keyword">new</span> MyThread1(o1, o2);</span><br><span class="line">        MyThread2 t2 = <span class="keyword">new</span> MyThread2(o1, o2);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread1</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    Object o1;</span><br><span class="line">    Object o2;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyThread1</span><span class="params">(Object o1, Object o2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.o1 = o1;</span><br><span class="line">        <span class="keyword">this</span>.o2 = o2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (o1)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">synchronized</span> (o2)&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;run()执行结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread2</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    Object o1;</span><br><span class="line">    Object o2;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyThread2</span><span class="params">(Object o1, Object o2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.o1 = o1;</span><br><span class="line">        <span class="keyword">this</span>.o2 = o2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (o2)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">synchronized</span> (o1)&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;run()执行结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="开发中怎么解决线程安全问题"><a href="#开发中怎么解决线程安全问题" class="headerlink" title="开发中怎么解决线程安全问题"></a>开发中怎么解决线程安全问题</h1><ol><li>尽量使用局部变量代替“实例变量和静态变量”  </li><li>如果必须是实例变量，可以考虑创建多个对象，这样实例变量的内存就不共享了  </li><li>不能用局部变量，也不能创建多个对象，那就只能 synchronized 了  </li></ol><h1 id="守护线程"><a href="#守护线程" class="headerlink" title="守护线程"></a>守护线程</h1><ol><li>线程分为两大类：用户线程、守护线程（后台线程）  </li><li>守护线程一般是个死循环，所有的用户线程只要结束，守护线程自动结束  </li><li>主线程main方法是一个用户线程  </li></ol><h2 id="实现守护线程"><a href="#实现守护线程" class="headerlink" title="实现守护线程"></a>实现守护线程</h2><p>main用户线程结束后，守护线程就结束了  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setDaemon</span><span class="params">(<span class="keyword">boolean</span> on)</span></span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_642_</span>实现守护线程 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        BakDataThread t = <span class="keyword">new</span> BakDataThread();</span><br><span class="line">        t.setName(<span class="string">&quot;数据备份线程&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置为守护线程</span></span><br><span class="line">        t.setDaemon(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        t.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BakDataThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + (++i));</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h1><ol><li>间隔的定时间，执行特定程序     </li><li>可以使用sleep()，比较low    </li><li>在java.util.Timer实现了定时器，可以直接拿来用   </li><li>在实际开发中，使用较多的是Spring框架中提供的SpringTask框架  </li></ol><h2 id="实现定时器"><a href="#实现定时器" class="headerlink" title="实现定时器"></a>实现定时器</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Timer;</span><br><span class="line"><span class="keyword">import</span> java.util.TimerTask;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_644_</span>实现定时器 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">        Timer timer = <span class="keyword">new</span> Timer();</span><br><span class="line"><span class="comment">//        Timer timer = new Timer(true); // 守护线程</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定定时任务</span></span><br><span class="line"></span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">        Date date = sdf.parse(<span class="string">&quot;2022-02-07 17:42:00&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Date date1 = <span class="keyword">new</span> Date(System.currentTimeMillis() + <span class="number">1000</span> * <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        timer.schedule(<span class="keyword">new</span> LogTimerTask(), date1, <span class="number">1000</span> * <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            2022-02-07 17:45:32完成了一次数据备份</span></span><br><span class="line"><span class="comment">            2022-02-07 17:45:42完成了一次数据备份</span></span><br><span class="line"><span class="comment">            ...</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LogTimerTask</span> <span class="keyword">extends</span> <span class="title">TimerTask</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">        String s = sdf.format(<span class="keyword">new</span> Date());</span><br><span class="line">        System.out.println(s + <span class="string">&quot;完成了一次数据备份&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="实现线程的第三种方式"><a href="#实现线程的第三种方式" class="headerlink" title="实现线程的第三种方式"></a>实现线程的第三种方式</h1><p>实现Callable接口。（JDK8新特性）<br>可以获得线程的返回值<br>缺点是获取执行结果的时候效率较低  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.FutureTask;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_645_</span>实现线程的第三种方式 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FutureTask&lt;Object&gt; task = <span class="keyword">new</span> FutureTask(<span class="keyword">new</span> Callable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="comment">// 模拟执行</span></span><br><span class="line">                System.out.println(<span class="string">&quot;call method begin~&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">1000</span> * <span class="number">10</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;call method over~&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">                <span class="keyword">int</span> b = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> a + b;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Thread t = <span class="keyword">new</span> Thread(task);</span><br><span class="line">        t.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在主线程中如何获取t线程的返回值</span></span><br><span class="line">        <span class="comment">// 这里 get 方法会使得 main 方法受阻</span></span><br><span class="line">        <span class="comment">// 等待 task.run() 执行结束</span></span><br><span class="line">        Object o = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            o = task.get();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获得返回值 </span></span><br><span class="line">        System.out.println(o);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="wait和notify方法"><a href="#wait和notify方法" class="headerlink" title="wait和notify方法"></a>wait和notify方法</h1><ol><li>wait和notify方法不是线程对象的方法，是java中任何一个java对象都有的方法  </li><li>wait和notify方法建立在synchronized线程同步的基础之上  </li></ol><h2 id="wait-的作用"><a href="#wait-的作用" class="headerlink" title="wait() 的作用"></a>wait() 的作用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Object o = <span class="keyword">new</span> Object();</span><br><span class="line">o.wait();</span><br></pre></td></tr></table></figure><p>表示：让正在o对象上活动的线程进入等待状态，并且释放之前占有的o对象的锁，无期限等待直到被唤醒   </p><h2 id="notify-的作用"><a href="#notify-的作用" class="headerlink" title="notify() 的作用"></a>notify() 的作用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Object o = <span class="keyword">new</span> Object();</span><br><span class="line">o.notify();</span><br></pre></td></tr></table></figure><p>表示：让正在o对象上活动的随机一个线程从等待状态唤醒，o.notify()只会通知，不会释放之前占有的o对象的锁     </p><h2 id="notifyAll-作用"><a href="#notifyAll-作用" class="headerlink" title="notifyAll() 作用"></a>notifyAll() 作用</h2><p>表示：唤醒在o对象上等待的所有线程  </p><h1 id="生产者和消费者模式"><a href="#生产者和消费者模式" class="headerlink" title="生产者和消费者模式"></a>生产者和消费者模式</h1><p>(这儿应该有张图… )  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_648_</span>实现生产者和消费者模式 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建1个仓库对象 仓库容量为 1</span></span><br><span class="line">        List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个生产者线程</span></span><br><span class="line">        Thread t1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Producer(list));</span><br><span class="line">        t1.setName(<span class="string">&quot;生产者&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建一个消费者线程</span></span><br><span class="line">        Thread t2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Consumer(list));</span><br><span class="line">        t2.setName(<span class="string">&quot;消费者&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Producer</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="comment">// 仓库</span></span><br><span class="line">    <span class="keyword">private</span> List list;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Producer</span><span class="params">(List list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">// 给仓库对象list加锁</span></span><br><span class="line">            <span class="keyword">synchronized</span> (list)&#123;</span><br><span class="line">                <span class="keyword">if</span> (list.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="comment">// 进入等待状态，并且释放Producer占有的list集合的锁</span></span><br><span class="line">                        list.wait();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 给仓库加东西</span></span><br><span class="line">                    <span class="keyword">double</span> o = Math.random();</span><br><span class="line">                    list.add(o);</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;生产-&gt;&quot;</span> + o);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 于是唤醒消费者消费</span></span><br><span class="line">                    list.notify();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="comment">// 仓库</span></span><br><span class="line">    <span class="keyword">private</span> List list;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Consumer</span><span class="params">(List list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (list)&#123;</span><br><span class="line">                <span class="comment">// 仓库空了</span></span><br><span class="line">                <span class="keyword">if</span>(list.size() == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        list.wait();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 拿仓库中的东西</span></span><br><span class="line">                    Object o = list.remove(<span class="number">0</span>);</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;消费-&gt;&quot;</span> + o);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 于是唤醒生产者</span></span><br><span class="line">                    list.notify();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="线程作业"><a href="#线程作业" class="headerlink" title="线程作业"></a>线程作业</h1><p>ta，tb交替输出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_650_</span>布置线程作业实现交替输出 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Sz sz = <span class="keyword">new</span> Sz(<span class="number">1</span>);</span><br><span class="line">        ThreadA ta = <span class="keyword">new</span> ThreadA(sz);</span><br><span class="line">        ThreadB tb = <span class="keyword">new</span> ThreadB(sz);</span><br><span class="line"></span><br><span class="line">        ta.setName(<span class="string">&quot;ta&quot;</span>);</span><br><span class="line">        tb.setName(<span class="string">&quot;tb&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ta.start();</span><br><span class="line">        tb.start();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            ta-&gt;1</span></span><br><span class="line"><span class="comment">            tb-&gt;2</span></span><br><span class="line"><span class="comment">            ta-&gt;3</span></span><br><span class="line"><span class="comment">            tb-&gt;4</span></span><br><span class="line"><span class="comment">            ta-&gt;5</span></span><br><span class="line"><span class="comment">            ...</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sz</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Sz</span><span class="params">(<span class="keyword">int</span> cnt)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cnt = cnt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadA</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    Sz sz;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ThreadA</span><span class="params">(Sz sz)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sz = sz;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (sz)&#123;</span><br><span class="line">                <span class="keyword">if</span> (sz.cnt%<span class="number">2</span> != <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        sz.wait();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + sz.cnt);</span><br><span class="line">                    sz.cnt++;</span><br><span class="line">                    sz.notify();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadB</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    Sz sz;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ThreadB</span><span class="params">(Sz sz)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sz = sz;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (sz)&#123;</span><br><span class="line">                <span class="keyword">if</span>(sz.cnt%<span class="number">2</span> != <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        sz.wait();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;-&gt;&quot;</span> + sz.cnt);</span><br><span class="line">                    sz.cnt++;</span><br><span class="line">                    sz.notify();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【561-597】IO流</title>
      <link href="/2022/02/01/JavaSE/%E3%80%90561-597%E3%80%91IO%E6%B5%81/"/>
      <url>/2022/02/01/JavaSE/%E3%80%90561-597%E3%80%91IO%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="什么是-IO"><a href="#什么是-IO" class="headerlink" title="什么是 IO ?"></a>什么是 IO ?</h2><p>I : Input<br>O : Output<br>通过IO以完成硬盘文件的读和写。  </p><h2 id="IO流的分类"><a href="#IO流的分类" class="headerlink" title="IO流的分类"></a>IO流的分类</h2><ol><li>按照流的方向进行分类: 以内存作为参照物，往内存中去，叫做输入(Input)或读(Read)。从内存中出来，叫做输出(output)或写(write)  </li><li>按照读取数据方式的不同：按照字节的方式读取数据，一次读取1个字节byte，万能方式。按照字符的方式读取数据，一次读取一个字符。两者有在“中文(2字节)”“英文(1字节)”的区分  </li></ol><h2 id="关于流"><a href="#关于流" class="headerlink" title="关于流"></a>关于流</h2><ol><li>所有的流都在：Java.io.*; 下  </li><li>IO流四大家族：<br>java.io.InputStream 字节输入流<br>java.io.OutputStream 字节输出流<br>java.io.Reader 字符输入流<br>java.io.Writer 字符输出流<br>Stream结尾的都是字节流，Reader/Writer都是字符流  </li><li>所有的流都实现了Closable接口，有close()  </li><li>所有的输出流都实现了Flushable接口，flush()，意味刷新输出管道，在最终输出后一定要flush()，否则可能丢失数据  </li><li>需要掌握的流：<br>文件专属流:<br>java.io.FileInputStream<br>java.io.FileOutputStream<br>java.io.FileReader<br>java.io.FileWriter<br>转换流:(将字节流转换成字符流)<br>java.io.InputStreanReader<br>java.io.OutputStreamWriter<br>缓冲流专属:<br>java.io.BufferedReader<br>java.io.BufferedWriter<br>java.io.BufferedInputStream<br>java.io.BufferedOutputStream<br>数据流专属:<br>java.io.DataInputStream<br>java.io.DataOutputStream<br>标准输出流:<br>java.io.PrintWriter<br>java.io.PrintStream<br>对象专属流:<br>java.io.ObjectInputStream<br>java.io.ObjectOutputStream</li></ol><h1 id="文件专属流"><a href="#文件专属流" class="headerlink" title="文件专属流"></a>文件专属流</h1><h2 id="FileInputStream"><a href="#FileInputStream" class="headerlink" title="FileInputStream"></a>FileInputStream</h2><h3 id="public-int-read-throws-IOException"><a href="#public-int-read-throws-IOException" class="headerlink" title="public int read() throws IOException"></a>public int read() throws IOException</h3><p>一个一个字节读入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_567_FileInputStream</span>初步 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileInputStream f1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 打开文件</span></span><br><span class="line">            f1 = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_567_FileInputStream初步01.txt&quot;</span>);</span><br><span class="line">            <span class="comment">// f1 中的内容 &quot;abbsbss&quot;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 循环读取文件，</span></span><br><span class="line">            <span class="keyword">int</span> readData;</span><br><span class="line">            <span class="keyword">while</span>((readData = f1.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">                System.out.println(readData);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123; <span class="comment">// 可能 f1 = null</span></span><br><span class="line">                f1.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="public-int-read-byte-b-throws-IOException"><a href="#public-int-read-byte-b-throws-IOException" class="headerlink" title="public int read(byte b[]) throws IOException"></a>public int read(byte b[]) throws IOException</h3><p>一次读入byte[]长度的字节</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_569_IDEA</span>中的当前路径 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileInputStream f1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 相对路径</span></span><br><span class="line">            <span class="comment">// 默认当前路径是Project的根</span></span><br><span class="line">            f1 = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;【561-597】IO流\\src\\_567_FileInputStream初步01.txt&quot;</span>);</span><br><span class="line">            <span class="comment">// f1 文件中 &quot;abbsbss&quot;;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">            <span class="keyword">int</span> readCount1 = f1.read(bytes); <span class="comment">// 返回读到字节数量</span></span><br><span class="line">            System.out.println(readCount1); <span class="comment">// 4</span></span><br><span class="line">            <span class="comment">// 读入了前4个字节，&quot;abbs&quot;</span></span><br><span class="line">            System.out.println(<span class="keyword">new</span> String(bytes)); <span class="comment">// abbs</span></span><br><span class="line">            System.out.println(<span class="string">&quot; ====================== &quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> readCount2 = f1.read(bytes);</span><br><span class="line">            System.out.println(readCount2); <span class="comment">// 3</span></span><br><span class="line">            <span class="comment">// 读入时，会将数据覆盖到原来的bytes数组上，这里覆盖前3个</span></span><br><span class="line">            <span class="comment">// bytes[] = &#123;a,b,b,s&#125; 变为了 &#123;b,s,s,s&#125;</span></span><br><span class="line">            <span class="comment">// 也就是覆盖了前3个</span></span><br><span class="line"><span class="comment">//            System.out.println(new String(bytes)); // bsss</span></span><br><span class="line">            System.out.println(<span class="keyword">new</span> String(bytes,<span class="number">0</span>,readCount2)); <span class="comment">// bss</span></span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot; ====================== &quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> readCount3 = f1.read(bytes);</span><br><span class="line">            System.out.println(readCount3); <span class="comment">// -1</span></span><br><span class="line">            System.out.println(<span class="string">&quot; ====================== &quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                f1.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="read-byte-b-最终版"><a href="#read-byte-b-最终版" class="headerlink" title="read(byte b[]) 最终版"></a>read(byte b[]) 最终版</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_571_FileInputStream</span>最终版 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileInputStream f1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            f1 = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;【561-597】IO流\\src\\_567_FileInputStream初步01.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> readCount;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">            <span class="keyword">while</span> ((readCount = f1.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                System.out.print(<span class="keyword">new</span> String(bytes,<span class="number">0</span>,readCount));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// &quot;abbsbss&quot;</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                f1.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="public-int-available-throws-IOException"><a href="#public-int-available-throws-IOException" class="headerlink" title="public int available() throws IOException"></a>public int available() throws IOException</h3><p>返回剩下多少个字节没有读入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_572_FileInputStream</span>其他常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileInputStream f1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            f1 = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;【561-597】IO流\\src\\_567_FileInputStream初步01.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 剩下多少个字节没有读入</span></span><br><span class="line">            System.out.println(f1.available()); <span class="comment">// 7</span></span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[f1.available()];</span><br><span class="line">            <span class="keyword">int</span> readCount = f1.read(bytes);</span><br><span class="line">            System.out.println(<span class="keyword">new</span> String(bytes,<span class="number">0</span>,readCount));</span><br><span class="line">            <span class="comment">// abbsbss</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                f1.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="public-long-skip-long-n-throws-IOException"><a href="#public-long-skip-long-n-throws-IOException" class="headerlink" title="public long skip(long n) throws IOException"></a>public long skip(long n) throws IOException</h3><p>跳过多少个字节开始读</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_573_skip</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileInputStream f1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            f1 = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;【561-597】IO流\\src\\_567_FileInputStream初步01.txt&quot;</span>);</span><br><span class="line">            <span class="comment">// abbsbss</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 跳过多少个字节开始读</span></span><br><span class="line">            f1.skip(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> read = f1.read();</span><br><span class="line">            System.out.println((<span class="keyword">char</span>) read); <span class="comment">// s</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                f1.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="FileOutputStream"><a href="#FileOutputStream" class="headerlink" title="FileOutputStream"></a>FileOutputStream</h2><h3 id="public-void-write-byte-b-throws-IOException"><a href="#public-void-write-byte-b-throws-IOException" class="headerlink" title="public void write(byte b[]) throws IOException"></a>public void write(byte b[]) throws IOException</h3><p>FileOutputStream 的构造方法可以实现不回清空源文件内容以追加的方式在文件末尾写入<br>append = true则可以实现  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FileOutputStream</span><span class="params">(String name, <span class="keyword">boolean</span> append)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> FileNotFoundException</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_574_FileOutputStream</span>的使用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileOutputStream f1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 以追加的方式在文件末尾写入</span></span><br><span class="line">            <span class="comment">// 不回清空源文件内容</span></span><br><span class="line">            f1 = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;【561-597】IO流\\src\\_574_FileOutputStream的使用.txt&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] bytes = &#123;<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>,<span class="number">100</span>&#125;;</span><br><span class="line">            f1.write(bytes);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 写完后 一定要刷新</span></span><br><span class="line">            f1.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                f1.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用-FileInputStream-和-FileOutputStream-完成文件拷贝"><a href="#使用-FileInputStream-和-FileOutputStream-完成文件拷贝" class="headerlink" title="使用 FileInputStream 和 FileOutputStream 完成文件拷贝"></a>使用 FileInputStream 和 FileOutputStream 完成文件拷贝</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_575_</span>文件复制 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileInputStream fin = <span class="keyword">null</span>;</span><br><span class="line">        FileOutputStream fout = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fin = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_575_文件复制01.txt&quot;</span>);</span><br><span class="line">            fout = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_575_文件复制02.txt&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>*<span class="number">1024</span>]; <span class="comment">// 每次最多拷贝1MB</span></span><br><span class="line">            <span class="keyword">int</span> readCount;</span><br><span class="line">            <span class="keyword">while</span>((readCount = fin.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                fout.write(bytes,<span class="number">0</span>,readCount);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 一定要flush()</span></span><br><span class="line">            fout.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 两个文件能关就关，分开try</span></span><br><span class="line">            <span class="keyword">if</span> (fin != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fin.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (fout != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fout.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="FileReader"><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h2><h3 id="public-int-read-char-cbuf-throws-IOException"><a href="#public-int-read-char-cbuf-throws-IOException" class="headerlink" title="public int read(char cbuf[]) throws IOException"></a>public int read(char cbuf[]) throws IOException</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_576_FileReader</span>的使用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileReader f1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            f1 = <span class="keyword">new</span> FileReader(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_576_FileReader的使用1.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">char</span>[] chars = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">4</span>];</span><br><span class="line">            <span class="keyword">int</span> readCount;</span><br><span class="line">            <span class="keyword">while</span> ((readCount = f1.read(chars)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                System.out.print(<span class="keyword">new</span> String(chars,<span class="number">0</span>,readCount));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// aasd中文asdok也</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                f1.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="FileWriter"><a href="#FileWriter" class="headerlink" title="FileWriter"></a>FileWriter</h2><p>只能输出普通文本</p><h3 id="public-void-write-String-str-throws-IOException"><a href="#public-void-write-String-str-throws-IOException" class="headerlink" title="public void write(String str) throws IOException"></a>public void write(String str) throws IOException</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_577_FileWriter</span>的使用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileWriter f1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            f1 = <span class="keyword">new</span> FileWriter(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_577_FileWriter的使用1.txt&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            String s = <span class="string">&quot;yes中文ok&quot;</span>;</span><br><span class="line"></span><br><span class="line">            f1.write(s);</span><br><span class="line"></span><br><span class="line">            f1.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (f1 != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    f1.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用-FileReader-和-FileWriter-拷贝普通文本文件"><a href="#使用-FileReader-和-FileWriter-拷贝普通文本文件" class="headerlink" title="使用 FileReader 和 FileWriter 拷贝普通文本文件"></a>使用 FileReader 和 FileWriter 拷贝普通文本文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_578_</span>复制普通文本文件 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileReader fin = <span class="keyword">null</span>;</span><br><span class="line">        FileWriter fout = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fin = <span class="keyword">new</span> FileReader(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_578_复制普通文本文件1.txt&quot;</span>);</span><br><span class="line">            fout = <span class="keyword">new</span> FileWriter(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_578_复制普通文本文件2.txt&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">char</span>[] chars = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span> * <span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> readCount;</span><br><span class="line">            <span class="keyword">while</span> ((readCount = fin.read(chars)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                fout.write(chars,<span class="number">0</span>,readCount);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fout.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(fin != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fin.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(fout != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fout.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="缓冲流"><a href="#缓冲流" class="headerlink" title="缓冲流"></a>缓冲流</h1><h2 id="BufferedReader"><a href="#BufferedReader" class="headerlink" title="BufferedReader"></a>BufferedReader</h2><ol><li>BufferedReader: 带有缓冲区的字符输入流。使用这个流的时候不需要自定义char数组，或者说不需要自定义byte数组。自带缓冲。  </li><li>当一个流的构造方法中需要一个流的时候，这个被传进来的流叫做∶节点流。  </li><li>外部负责包装的这个流，叫做:包装流，还有一个名字叫做:处理流。  </li></ol><h3 id="public-String-readLine-throws-IOException"><a href="#public-String-readLine-throws-IOException" class="headerlink" title="public String readLine() throws IOException"></a>public String readLine() throws IOException</h3><p>读一行，不带最后的换行符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_579_</span>带缓冲区的字符流 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 当一个流的构造方法中需要一个流的时候，这个被传进来的流叫做∶节点流。</span></span><br><span class="line">        <span class="comment">// 外部负责包装的这个流，叫做:包装流，还有一个名字叫做:处理流。</span></span><br><span class="line">        <span class="comment">// 当前这个程序来说:FileReader就是一个节点流。BufferedReader就是包装流/处理流。</span></span><br><span class="line"></span><br><span class="line">        FileReader reader = <span class="keyword">new</span> FileReader(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_579_带缓冲区的字符流1.txt&quot;</span>);</span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(reader);</span><br><span class="line"></span><br><span class="line">        String s = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span>((s = br.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            123nn</span></span><br><span class="line"><span class="comment">            中文</span></span><br><span class="line"><span class="comment">            asd</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        br.close(); <span class="comment">// 这里close()时也关闭了reader</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="BufferedWriter"><a href="#BufferedWriter" class="headerlink" title="BufferedWriter"></a>BufferedWriter</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_581_</span>带有缓冲区的字符输出流 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        BufferedWriter f1 = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_581_带有缓冲区的字符输出流.txt&quot;</span>));</span><br><span class="line">        f1.write(<span class="string">&quot;hello world!&quot;</span>);</span><br><span class="line">        f1.write(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        f1.write(<span class="string">&quot;hello yyy&quot;</span>);</span><br><span class="line"></span><br><span class="line">        f1.flush();</span><br><span class="line"></span><br><span class="line">        f1.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="转换流-将字节流转换成字符流"><a href="#转换流-将字节流转换成字符流" class="headerlink" title="转换流(将字节流转换成字符流)"></a>转换流(将字节流转换成字符流)</h1><h2 id="InputStreamReader"><a href="#InputStreamReader" class="headerlink" title="InputStreamReader"></a>InputStreamReader</h2><p>转换流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_580_</span>节点流和包装流 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileInputStream f1 = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_580_节点流和包装流.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// BufferedReader() 构造方法不能直接放入字节流f1</span></span><br><span class="line">        <span class="comment">// 通过转换流 InputStreamReader 的方式转换</span></span><br><span class="line">        InputStreamReader f2 = <span class="keyword">new</span> InputStreamReader(f1);</span><br><span class="line">        BufferedReader f3 = <span class="keyword">new</span> BufferedReader(f2);</span><br><span class="line"></span><br><span class="line">        String s = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span>((s = f3.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            ad</span></span><br><span class="line"><span class="comment">            qwe</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            asd</span></span><br><span class="line"><span class="comment">            zx</span></span><br><span class="line"><span class="comment">            中午呢</span></span><br><span class="line"><span class="comment">            as</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="OutputStreamWriter"><a href="#OutputStreamWriter" class="headerlink" title="OutputStreamWriter"></a>OutputStreamWriter</h2><p>转换流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_581_</span>带有缓冲区的字符输出流 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">//        BufferedWriter f1 = new BufferedWriter(new FileWriter(&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_581_带有缓冲区的字符输出流.txt&quot;));</span></span><br><span class="line">        FileOutputStream f1 = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_581_带有缓冲区的字符输出流.txt&quot;</span>);</span><br><span class="line">        OutputStreamWriter f2 = <span class="keyword">new</span> OutputStreamWriter(f1);</span><br><span class="line">        BufferedWriter f3 = <span class="keyword">new</span> BufferedWriter(f2);</span><br><span class="line"></span><br><span class="line">        f3.write(<span class="string">&quot;hello world!&quot;</span>);</span><br><span class="line">        f3.write(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        f3.write(<span class="string">&quot;hello yyy&quot;</span>);</span><br><span class="line"></span><br><span class="line">        f3.flush();</span><br><span class="line"></span><br><span class="line">        f3.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="数据流"><a href="#数据流" class="headerlink" title="数据流"></a>数据流</h1><h2 id="DataOutputStream"><a href="#DataOutputStream" class="headerlink" title="DataOutputStream"></a>DataOutputStream</h2><p>java.io.DataOutputStream: 数据专属的流。这个流可以将数据连同数据的类型一并写入文件。<br>注意:这个文件不是普通文本文档。（这个文件使用记事本打不开。)<br>写入时将数据和数据类型一并写入  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_582_</span>数据流 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        DataOutputStream f1 = <span class="keyword">new</span> DataOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_582_数据流1&quot;</span>));</span><br><span class="line">        <span class="keyword">byte</span> b = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">short</span> s = <span class="number">200</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">300</span>;</span><br><span class="line">        <span class="keyword">long</span> l = <span class="number">400</span>;</span><br><span class="line">        <span class="keyword">float</span> f = <span class="number">3.0f</span>;</span><br><span class="line">        <span class="keyword">double</span> d = <span class="number">3.14</span>;</span><br><span class="line">        <span class="keyword">boolean</span> bl = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">char</span> c = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        f1.writeByte(b);</span><br><span class="line">        f1.writeShort(s);</span><br><span class="line">        f1.writeInt(i);</span><br><span class="line">        f1.writeLong(l);</span><br><span class="line">        f1.writeFloat(f);</span><br><span class="line">        f1.writeDouble(d);</span><br><span class="line">        f1.writeBoolean(bl);</span><br><span class="line">        f1.writeChar(c);</span><br><span class="line"></span><br><span class="line">        f1.flush();</span><br><span class="line">        f1.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="DataInputStream"><a href="#DataInputStream" class="headerlink" title="DataInputStream"></a>DataInputStream</h2><p>DataInputStream:数据字节输入流。<br>DataOutputStream写的文件，只能使用DataInputStream去读。并且读的时候你需要提前知道写入的顺序。读的顺序需要和写的顺序一致。才可以正常取出数据。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_582_</span>数据流 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        DataOutputStream f1 = <span class="keyword">new</span> DataOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_582_数据流1&quot;</span>));</span><br><span class="line">        <span class="keyword">byte</span> b = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">short</span> s = <span class="number">200</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">300</span>;</span><br><span class="line">        <span class="keyword">long</span> l = <span class="number">400</span>;</span><br><span class="line">        <span class="keyword">float</span> f = <span class="number">3.0f</span>;</span><br><span class="line">        <span class="keyword">double</span> d = <span class="number">3.14</span>;</span><br><span class="line">        <span class="keyword">boolean</span> bl = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">char</span> c = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        f1.writeByte(b);</span><br><span class="line">        f1.writeShort(s);</span><br><span class="line">        f1.writeInt(i);</span><br><span class="line">        f1.writeLong(l);</span><br><span class="line">        f1.writeFloat(f);</span><br><span class="line">        f1.writeDouble(d);</span><br><span class="line">        f1.writeBoolean(bl);</span><br><span class="line">        f1.writeChar(c);</span><br><span class="line"></span><br><span class="line">        f1.flush();</span><br><span class="line">        f1.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 怎么写入 怎么读</span></span><br><span class="line">        DataInputStream f2 = <span class="keyword">new</span> DataInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_582_数据流1&quot;</span>));</span><br><span class="line">        <span class="keyword">byte</span> b2 = f2.readByte();</span><br><span class="line">        <span class="keyword">short</span> s2 = f2.readShort();</span><br><span class="line">        <span class="keyword">int</span> i2 = f2.readInt();</span><br><span class="line">        <span class="keyword">long</span> l2 = f2.readLong();</span><br><span class="line">        <span class="keyword">float</span> ff = f2.readFloat();</span><br><span class="line">        <span class="keyword">double</span> d2 = f2.readDouble();</span><br><span class="line">        <span class="keyword">boolean</span> bl2 = f2.readBoolean();</span><br><span class="line">        <span class="keyword">char</span> c2 = f2.readChar();</span><br><span class="line"></span><br><span class="line">        System.out.println(b2);</span><br><span class="line">        System.out.println(s2);</span><br><span class="line">        System.out.println(i2);</span><br><span class="line">        System.out.println(l2);</span><br><span class="line">        System.out.println(ff);</span><br><span class="line">        System.out.println(d2);</span><br><span class="line">        System.out.println(bl2);</span><br><span class="line">        System.out.println(c2);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            100</span></span><br><span class="line"><span class="comment">            200</span></span><br><span class="line"><span class="comment">            300</span></span><br><span class="line"><span class="comment">            400</span></span><br><span class="line"><span class="comment">            3.0</span></span><br><span class="line"><span class="comment">            3.14</span></span><br><span class="line"><span class="comment">            false</span></span><br><span class="line"><span class="comment">            a</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        f2.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="标准输出流"><a href="#标准输出流" class="headerlink" title="标准输出流"></a>标准输出流</h1><p>标准输出流不需要关闭  </p><h2 id="PrintStream"><a href="#PrintStream" class="headerlink" title="PrintStream"></a>PrintStream</h2><h3 id="public-static-void-setOut-PrintStream-out"><a href="#public-static-void-setOut-PrintStream-out" class="headerlink" title="public static void setOut(PrintStream out)"></a>public static void setOut(PrintStream out)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_583_</span>标准输出流 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        PrintStream ps = System.out;</span><br><span class="line">        ps.println(<span class="number">100</span>);</span><br><span class="line">        ps.println(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 标准输出流不再指向控制台，指向文件</span></span><br><span class="line">        PrintStream f1 = <span class="keyword">new</span> PrintStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_583_标准输出流.txt&quot;</span>));</span><br><span class="line">        System.setOut(f1);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        System.out.println(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;234&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="File类"><a href="#File类" class="headerlink" title="File类"></a>File类</h1><ol><li>FiLe类和四大家族没有关系，所以File类不能完成文件的读和写。  </li><li>File对象代表什么?<br>文件和目录路径名的抽象表示形式。<br>C:\Drivers这是一个File对象<br>C :\Drivers\Lan\Realtek\Readme.txt也是File对象。 </li></ol><h2 id="public-boolean-exists"><a href="#public-boolean-exists" class="headerlink" title="public boolean exists()"></a>public boolean exists()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_584_File</span>类的理解 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_584_File类的理解&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(f1.exists());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-boolean-createNewFile-throws-IOException"><a href="#public-boolean-createNewFile-throws-IOException" class="headerlink" title="public boolean createNewFile() throws IOException"></a>public boolean createNewFile() throws IOException</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_584_File</span>类的理解 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_584_File类的理解&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(f1.exists());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!f1.exists())&#123; <span class="comment">// 不存在 以文件的形式创建</span></span><br><span class="line">            f1.createNewFile();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-boolean-mkdir"><a href="#public-boolean-mkdir" class="headerlink" title="public boolean mkdir()"></a>public boolean mkdir()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_584_File</span>类的理解 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_584_File类的理解&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!f1.exists())&#123; <span class="comment">// 不存在 以目录的形式创建</span></span><br><span class="line">            f1.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-boolean-mkdirs"><a href="#public-boolean-mkdirs" class="headerlink" title="public boolean mkdirs()"></a>public boolean mkdirs()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_584_File</span>类的理解 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_584_File类的理解&quot;</span>);</span><br><span class="line"></span><br><span class="line">        File f2 = <span class="keyword">new</span> File(<span class="string">&quot;D:a/b/c/d/e&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!f2.exists())&#123; <span class="comment">// 不存在 以多重目录新建</span></span><br><span class="line">            f2.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-String-getParent"><a href="#public-String-getParent" class="headerlink" title="public String getParent()"></a>public String getParent()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_584_File</span>类的理解 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File f3 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\cc\\bb\\aa.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取父路径</span></span><br><span class="line">        String f3parent = f3.getParent();</span><br><span class="line">        System.out.println(f3parent);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-File-getParentFile"><a href="#public-File-getParentFile" class="headerlink" title="public File getParentFile()"></a>public File getParentFile()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_584_File</span>类的理解 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File f3 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\cc\\bb\\aa.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取父文件 以及 绝对路径</span></span><br><span class="line">        File parentFile = f3.getParentFile();</span><br><span class="line">        System.out.println(parentFile.getAbsolutePath());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-String-getAbsolutePath"><a href="#public-String-getAbsolutePath" class="headerlink" title="public String getAbsolutePath()"></a>public String getAbsolutePath()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_584_File</span>类的理解 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File f3 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\cc\\bb\\aa.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取父文件 以及 绝对路径</span></span><br><span class="line">        File parentFile = f3.getParentFile();</span><br><span class="line">        System.out.println(parentFile.getAbsolutePath());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="public-String-getName"><a href="#public-String-getName" class="headerlink" title="public String getName()"></a>public String getName()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_585_File</span>类的常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_585_File类的常用方法.java&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取文件名</span></span><br><span class="line">        System.out.println(f1.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-boolean-isDirectory"><a href="#public-boolean-isDirectory" class="headerlink" title="public boolean isDirectory()"></a>public boolean isDirectory()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_585_File</span>类的常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_585_File类的常用方法.java&quot;</span>);</span><br><span class="line">        <span class="comment">// 判断是否是目录</span></span><br><span class="line">        System.out.println(f1.isDirectory());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-boolean-isFile"><a href="#public-boolean-isFile" class="headerlink" title="public boolean isFile()"></a>public boolean isFile()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_585_File</span>类的常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_585_File类的常用方法.java&quot;</span>);</span><br><span class="line">        <span class="comment">// 判断是否是文件</span></span><br><span class="line">        System.out.println(f1.isFile());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-long-lastModified"><a href="#public-long-lastModified" class="headerlink" title="public long lastModified()"></a>public long lastModified()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_585_File</span>类的常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_585_File类的常用方法.java&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取文件最后一次修改时间</span></span><br><span class="line">        <span class="keyword">long</span> l = f1.lastModified(); <span class="comment">// 返回 1970 年到现在的总毫秒数</span></span><br><span class="line">        <span class="comment">// 转化毫秒</span></span><br><span class="line">        Date date = <span class="keyword">new</span> Date(l);</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss SSS&quot;</span>);</span><br><span class="line">        System.out.println(sdf.format(date));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-long-length"><a href="#public-long-length" class="headerlink" title="public long length()"></a>public long length()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_585_File</span>类的常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_585_File类的常用方法.java&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取文件大小</span></span><br><span class="line">        System.out.println(f1.length()); <span class="comment">// 单位字节</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-File-listFiles"><a href="#public-File-listFiles" class="headerlink" title="public File[] listFiles()"></a>public File[] listFiles()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_586_File</span>类的常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取该文件下子目录</span></span><br><span class="line">        File[] files = f1.listFiles();</span><br><span class="line">        <span class="keyword">for</span> (File f : files)&#123;</span><br><span class="line">            System.out.println(f.getAbsolutePath());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="目录拷贝"><a href="#目录拷贝" class="headerlink" title="目录拷贝"></a>目录拷贝</h1><p>为了方便 异常都抛出了…<br>前提得保证 G 盘下有 src文件或目录 和 dst 目录  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_588_</span>目录拷贝 </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copy</span><span class="params">(File fin, File fout)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(fin.isFile())&#123; <span class="comment">// 是文件</span></span><br><span class="line">            String name = fin.getName();</span><br><span class="line">            String dstPath = fout.getAbsolutePath() + <span class="string">&quot;\\&quot;</span> + name;</span><br><span class="line">            <span class="comment">// 开始copy文件</span></span><br><span class="line">            FileInputStream src = <span class="keyword">new</span> FileInputStream(fin.getAbsolutePath());</span><br><span class="line">            FileOutputStream dst = <span class="keyword">new</span> FileOutputStream(dstPath);</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span> * <span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> readCount = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ((readCount = src.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                dst.write(bytes, <span class="number">0</span>, readCount);</span><br><span class="line">            &#125;</span><br><span class="line">            dst.flush();</span><br><span class="line">            dst.close();</span><br><span class="line">            src.close();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (fin.isDirectory())&#123; <span class="comment">// 是目录</span></span><br><span class="line">            String name = fin.getName();</span><br><span class="line">            String dstPath = fout.getAbsolutePath() + <span class="string">&quot;\\&quot;</span> + name;</span><br><span class="line">            File file = <span class="keyword">new</span> File(dstPath);</span><br><span class="line">            file.mkdir();</span><br><span class="line">            File[] files = fin.listFiles();</span><br><span class="line">            <span class="keyword">for</span> (File f : files)&#123;</span><br><span class="line">                copy(<span class="keyword">new</span> File(f.getAbsolutePath()), <span class="keyword">new</span> File(dstPath));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 前提得保证 G 盘下有 src文件或目录 和 dst 目录</span></span><br><span class="line">        File fin = <span class="keyword">new</span> File(<span class="string">&quot;G:\\src&quot;</span>);</span><br><span class="line">        File fout = <span class="keyword">new</span> File(<span class="string">&quot;G:\\dst&quot;</span>);</span><br><span class="line">        copy(fin, fout);</span><br><span class="line">        System.out.println(<span class="string">&quot;copy ok~&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;将 src 目录以及目录下的文件放入了 dst 目录下&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;也就是 G:\\dst\\src\\...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="序列化和反序列化"><a href="#序列化和反序列化" class="headerlink" title="序列化和反序列化"></a>序列化和反序列化</h1><h2 id="序列化和反序列化的理解"><a href="#序列化和反序列化的理解" class="headerlink" title="序列化和反序列化的理解"></a>序列化和反序列化的理解</h2><p>这儿应该有张图…  </p><h2 id="序列化的实现-ObjectOutputStream"><a href="#序列化的实现-ObjectOutputStream" class="headerlink" title="序列化的实现(ObjectOutputStream)"></a>序列化的实现(ObjectOutputStream)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_591_</span>序列化的实现 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Student s = <span class="keyword">new</span> Student(<span class="string">&quot;张三&quot;</span>, <span class="number">111</span>);</span><br><span class="line"></span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_591_序列化的实现.txt&quot;</span>));</span><br><span class="line"></span><br><span class="line">        oos.writeObject(s);</span><br><span class="line"></span><br><span class="line">        oos.flush();</span><br><span class="line">        oos.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123; <span class="comment">// 必须实现 Serializable可序列化 接口</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Serializable接口"><a href="#Serializable接口" class="headerlink" title="Serializable接口"></a>Serializable接口</h2><ol><li>public interface Serializable {}<br>这个接口当中什么代码都没有。<br>它起到标识的作用，Serializable这个标志接口是给java虚拟机参考的，java虚拟机看到这个接口之后，会为该类自动生成一个序列化版本号。  </li><li>java区分类首先靠名字，名字一样靠序列化版本号  </li><li>java自动生成的序列化版本号缺点是:一旦代码确定之后，不能进行后续的修改，因为只要修改，必然会重新编译，此时会生成全新的序列化版本号，这个时候java虚拟机会认为这是一个全新的类。（这样就不好了! )  </li><li>Java虚拟机看到erializable接口之后，会自动生成―个序列化版本号。<br>这里没有手动写出来，java虚拟机会默认提供这个序列化版本号。<br>建议将序列化版本号手动的写出来。不建议自动生成  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionuID = <span class="number">4564565434565434L</span>;</span><br></pre></td></tr></table></figure></li></ol><h2 id="反序列化的实现-ObjectInputStream"><a href="#反序列化的实现-ObjectInputStream" class="headerlink" title="反序列化的实现(ObjectInputStream)"></a>反序列化的实现(ObjectInputStream)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_592_</span>反序列化的实现 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_591_序列化的实现.txt&quot;</span>));</span><br><span class="line">        <span class="comment">// 开始反序列化</span></span><br><span class="line">        Object o = ois.readObject();</span><br><span class="line">        System.out.println(o);</span><br><span class="line">        <span class="comment">// 关闭</span></span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="序列化多个对象"><a href="#序列化多个对象" class="headerlink" title="序列化多个对象"></a>序列化多个对象</h2><p>放入集合后序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_593_</span>序列化多个对象 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        ArrayList&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="number">100</span>,<span class="string">&quot;zhangsan&quot;</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="number">200</span>,<span class="string">&quot;lisi&quot;</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="number">300</span>,<span class="string">&quot;wangwu&quot;</span>));</span><br><span class="line"></span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_593_序列化多个对象.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(list);</span><br><span class="line"></span><br><span class="line">        oos.flush();</span><br><span class="line">        oos.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_593_序列化多个对象.txt&quot;</span>));</span><br><span class="line">        ArrayList&lt;User&gt; list2 = (ArrayList&lt;User&gt;)ois.readObject();</span><br><span class="line">        <span class="keyword">for</span> (User u : list2)&#123;</span><br><span class="line">            System.out.println(u);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            User&#123;ID=100, name=&#x27;zhangsan&#x27;&#125;</span></span><br><span class="line"><span class="comment">            User&#123;ID=200, name=&#x27;lisi&#x27;&#125;</span></span><br><span class="line"><span class="comment">            User&#123;ID=300, name=&#x27;wangwu&#x27;&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ID;</span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">int</span> ID, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ID = ID;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;ID=&quot;</span> + ID +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="transient关键字"><a href="#transient关键字" class="headerlink" title="transient关键字"></a>transient关键字</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_594_transient</span>关键字 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        ArrayList&lt;User2&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> User2(<span class="number">100</span>,<span class="string">&quot;zhangsan&quot;</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User2(<span class="number">200</span>,<span class="string">&quot;lisi&quot;</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User2(<span class="number">300</span>,<span class="string">&quot;wangwu&quot;</span>));</span><br><span class="line"></span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_594_transient关键字.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(list);</span><br><span class="line"></span><br><span class="line">        oos.flush();</span><br><span class="line">        oos.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_594_transient关键字.txt&quot;</span>));</span><br><span class="line">        ArrayList&lt;User2&gt; list2 = (ArrayList&lt;User2&gt;)ois.readObject();</span><br><span class="line">        <span class="keyword">for</span> (User2 u : list2)&#123;</span><br><span class="line">            System.out.println(u);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            User2&#123;ID=0, name=&#x27;zhangsan&#x27;&#125;</span></span><br><span class="line"><span class="comment">            User2&#123;ID=0, name=&#x27;lisi&#x27;&#125;</span></span><br><span class="line"><span class="comment">            User2&#123;ID=0, name=&#x27;wangwu&#x27;&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User2</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">transient</span> <span class="keyword">int</span> ID; <span class="comment">// transient 表示游离的 不参与序列化过程</span></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User2</span><span class="params">(<span class="keyword">int</span> ID, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ID = ID;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User2&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;ID=&quot;</span> + ID +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IO和Properties的联合使用"><a href="#IO和Properties的联合使用" class="headerlink" title="IO和Properties的联合使用"></a>IO和Properties的联合使用</h2><p>以后经常改变的数据，可以单独写到一个文件中，使用程序动态读取。将来只需要修改这个文件的内容，java代码不需要改动，不需要重新编译，服务器也不需要重启。就可以拿到动态的信息。<br>类似于以上机制的这种文件被称为配置文件。<br>并且当配置文件中的内容格式是:<br>key1=vaLue<br>key2=value<br>的时候，我们把这种配置文件叫做属性配置文件。<br>java规范中有要求:属性配置文件建议以.properties结尾，但这不是必须的。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_597_IO</span>和<span class="title">Properties</span>的联合使用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">/* 文件中的内容</span></span><br><span class="line"><span class="comment">            username=admin</span></span><br><span class="line"><span class="comment">            password=123456</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        FileInputStream f1 = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\Workspace\\Java\\【JavaSE】BiliBili动力节点\\【561-597】IO流\\src\\_597_IO和Properties的联合使用.txt&quot;</span>);</span><br><span class="line">        Properties mp = <span class="keyword">new</span> Properties();</span><br><span class="line">        mp.load(f1);</span><br><span class="line"></span><br><span class="line">        System.out.println(mp.getProperty(<span class="string">&quot;username&quot;</span>)); <span class="comment">// admin</span></span><br><span class="line">        System.out.println(mp.getProperty(<span class="string">&quot;password&quot;</span>)); <span class="comment">// 123456</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历 key 和 val</span></span><br><span class="line">        Set&lt;Object&gt; objects = mp.keySet();</span><br><span class="line">        <span class="keyword">for</span> (Object o : objects)&#123;</span><br><span class="line">            System.out.println(o + <span class="string">&quot;=&quot;</span> + mp.getProperty(o.toString()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            password=123456</span></span><br><span class="line"><span class="comment">            username=admin</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【501-560】集合</title>
      <link href="/2022/01/26/JavaSE/%E3%80%90501-560%E3%80%91%E9%9B%86%E5%90%88/"/>
      <url>/2022/01/26/JavaSE/%E3%80%90501-560%E3%80%91%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ol><li><p>集合不能存储基本数据类型，也不能直接存储java对象，存储的都是java对象的内存地址。（或者说是引用）（这儿应该有个图…）  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List.add(<span class="number">100</span>) <span class="comment">// 自动装箱 Integer</span></span><br></pre></td></tr></table></figure></li><li><p>不同集合对应不同数据结构  </p></li><li><p>集合分为两大类：单个方式存储元素（超级父接口：java.util.Collection），键值对方式存储元素（超级父接口: java.util.Map）  </p></li><li><p>Collection 集合的继承结构图（这儿因该有两张图）  </p></li><li><p>Map 集合的继承结构图（这儿因该有一张图）  </p></li><li><p>各个类总结：  </p></li><li><p>1 LinkedList:底层是双向链表。    </p></li><li><p>2 Vector:底层是数组,线程安全的,效率较低，使用较少。    </p></li><li><p>3 HashSet:底层是HashMap，放到 HashSet集合中的元素等同于放到HashMap集合key部分了。  </p></li><li><p>4 TreeSet:底层是TreeMap，放到TreeSet,集合中的元素等同于放到TreeMap集合 key部分了。  </p></li><li><p>5 HashMap:底层是哈希表。  </p></li><li><p>6 Hashtable:底层也是哈希表，只不过线程安全的，效率较低，使用较少。  </p></li><li><p>7 properties:是线程安全的，并且key和value只能存储字符串String。  </p></li><li><p>8 TreeMap:底层是二叉树。TreeMap集合的key可以自动按照大小顺序排序。  </p></li><li><p>存储元素的特点：  </p></li><li><p>1 List集合存储元素的特点: 有序可重复<br>  有序:存进去的顺序和取出的顺序相同，每一个元素都有下标。可重复:存进去1，可以再存储一个1.    </p></li><li><p>2 Set集合存储元素的特点: 无序不可重复<br>  无序:存进去的顺序和取出的顺序不一定相同。另外 set集合中元素没有下标。不可重复:存进去1，不能再存储1了。  </p></li><li><p>3 SortedSet集合存储元素特点:首先是无序不可重复的，但是SortedSet集合中的元素是可排序的。<br>  无序:存进去的顺序和取出的顺序不一定相同。另外set集合中元素没有下标。<br>  不可重复:存进去1，不能再存储1了。<br>  可排序:可以按照大小顺序排列   </p></li><li><p>4 Map集合的 key，就是一个set集合，往set集合中放数据，实际上放到了Map集合的key部分。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_513_</span>迭代器是通用的 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection c1 = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        Collection c2 = <span class="keyword">new</span> HashSet();</span><br><span class="line">        Collection c3 = <span class="keyword">new</span> TreeSet();</span><br><span class="line"></span><br><span class="line">        c1.add(<span class="number">1</span>);</span><br><span class="line">        c1.add(<span class="number">2</span>);</span><br><span class="line">        c1.add(<span class="number">3</span>);</span><br><span class="line">        c1.add(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (Iterator it = c1.iterator(); it.hasNext(); )&#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            1</span></span><br><span class="line"><span class="comment">            2</span></span><br><span class="line"><span class="comment">            3</span></span><br><span class="line"><span class="comment">            1</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;==================&quot;</span>);</span><br><span class="line">        c2.add(<span class="number">1</span>);</span><br><span class="line">        c2.add(<span class="number">2</span>);</span><br><span class="line">        c2.add(<span class="number">3</span>);</span><br><span class="line">        c2.add(<span class="number">1</span>); <span class="comment">// 这个无效 因为HashSet无序不可重复</span></span><br><span class="line">        <span class="keyword">for</span> (Iterator it = c2.iterator(); it.hasNext(); )&#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            1</span></span><br><span class="line"><span class="comment">            2</span></span><br><span class="line"><span class="comment">            3</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot; ============ &quot;</span>);</span><br><span class="line">        c3.add(<span class="number">1</span>);</span><br><span class="line">        c3.add(<span class="number">3</span>);</span><br><span class="line">        c3.add(<span class="number">2</span>);</span><br><span class="line">        c3.add(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (Iterator it = c3.iterator(); it.hasNext(); )&#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            1</span></span><br><span class="line"><span class="comment">            2</span></span><br><span class="line"><span class="comment">            3</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>集合只要发生改变，比如add或remove了某些引用，迭代器必须重新获取，以用来遍历集合  </p></li></ol><h1 id="Collection接口中常用方法"><a href="#Collection接口中常用方法" class="headerlink" title="Collection接口中常用方法"></a>Collection接口中常用方法</h1><ol><li>Collection中能存放什么元素?<br> 没有使用“泛型之前，collection中可以存储object的所有子类型。使用了“泛型之后，collection中只能存储某个具体的类型。只要是object的子类型就行。(集合中不能直接存储基本数据类型，也不能存java对象，只是存储java对象的内存地址。)</li></ol><h2 id="boolean-add-E-e"><a href="#boolean-add-E-e" class="headerlink" title="boolean add(E e);"></a>boolean add(E e);</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_508_Collection</span>接口中常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 多态</span></span><br><span class="line">        Collection c = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="comment">// 自动装箱</span></span><br><span class="line">        c.add(<span class="number">100</span>);</span><br><span class="line">        c.add(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="int-size"><a href="#int-size" class="headerlink" title="int size();"></a>int size();</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_509_Collection</span>接口中常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection c = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        c.add(<span class="number">100</span>);</span><br><span class="line">        c.add(<span class="number">3.14</span>);</span><br><span class="line">        c.add(<span class="keyword">true</span>);</span><br><span class="line">        c.add(<span class="keyword">new</span> Object());</span><br><span class="line"></span><br><span class="line">        System.out.println(c.size()); <span class="comment">// 4</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="void-clear"><a href="#void-clear" class="headerlink" title="void clear();"></a>void clear();</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line">        <span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_509_Collection</span>接口中常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection c = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        c.add(<span class="number">100</span>);</span><br><span class="line">        c.add(<span class="number">3.14</span>);</span><br><span class="line">        c.add(<span class="keyword">true</span>);</span><br><span class="line">        c.add(<span class="keyword">new</span> Object());</span><br><span class="line"></span><br><span class="line">        System.out.println(c.size()); <span class="comment">// 4</span></span><br><span class="line"></span><br><span class="line">        c.clear();</span><br><span class="line">        System.out.println(c.size()); <span class="comment">// 0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="boolean-contains-Object-o"><a href="#boolean-contains-Object-o" class="headerlink" title="boolean contains(Object o);"></a>boolean contains(Object o);</h2><h3 id="contains使用"><a href="#contains使用" class="headerlink" title="contains使用"></a>contains使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line">        <span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_509_Collection</span>接口中常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection c = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        System.out.println(c.contains(<span class="number">100</span>)); <span class="comment">// false</span></span><br><span class="line">        c.add(<span class="number">100</span>);</span><br><span class="line">        System.out.println(c.contains(<span class="number">100</span>)); <span class="comment">// true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="contains解析"><a href="#contains解析" class="headerlink" title="contains解析"></a>contains解析</h3><p>这儿应该有张图…</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_514_Collection</span>方法解析 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection c = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        String s1 = <span class="keyword">new</span> String(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        String s2 = <span class="keyword">new</span> String(<span class="string">&quot;def&quot;</span>);</span><br><span class="line">        c.add(s1);</span><br><span class="line">        c.add(s2);</span><br><span class="line"></span><br><span class="line">        String s3 = <span class="keyword">new</span> String(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        <span class="comment">// 底层调用了equals()</span></span><br><span class="line">        System.out.println(c.contains(s3)); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        public boolean contains(Object o) &#123;</span></span><br><span class="line"><span class="comment">            return indexOf(o) &gt;= 0;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        public int indexOf(Object o) &#123;</span></span><br><span class="line"><span class="comment">            if (o == null) &#123;</span></span><br><span class="line"><span class="comment">                for (int i = 0; i &lt; size; i++)</span></span><br><span class="line"><span class="comment">                    if (elementData[i]==null)</span></span><br><span class="line"><span class="comment">                        return i;</span></span><br><span class="line"><span class="comment">            &#125; else &#123;</span></span><br><span class="line"><span class="comment">                for (int i = 0; i &lt; size; i++)</span></span><br><span class="line"><span class="comment">                    if (o.equals(elementData[i]))</span></span><br><span class="line"><span class="comment">                        return i;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            return -1;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="boolean-remove-Object-o"><a href="#boolean-remove-Object-o" class="headerlink" title="boolean remove(Object o);"></a>boolean remove(Object o);</h2><h3 id="remove方法使用"><a href="#remove方法使用" class="headerlink" title="remove方法使用"></a>remove方法使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line">        <span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_509_Collection</span>接口中常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection c = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        c.add(<span class="number">100</span>);</span><br><span class="line">        System.out.println(c.contains(<span class="number">100</span>)); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">        c.remove(<span class="number">100</span>);</span><br><span class="line">        System.out.println(c.contains(<span class="number">100</span>)); <span class="comment">// false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="remove方法解析"><a href="#remove方法解析" class="headerlink" title="remove方法解析"></a>remove方法解析</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_516_remove</span>方法源码分析 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection c = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        String s1 = <span class="keyword">new</span> String(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        String s2 = <span class="keyword">new</span> String(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        c.add(s1);</span><br><span class="line">        System.out.println(c.size()); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 底层调用equals()</span></span><br><span class="line">        c.remove(s2);</span><br><span class="line">        System.out.println(c.size()); <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        public boolean remove(Object o) &#123;</span></span><br><span class="line"><span class="comment">            if (o == null) &#123;</span></span><br><span class="line"><span class="comment">                for (int index = 0; index &lt; size; index++)</span></span><br><span class="line"><span class="comment">                    if (elementData[index] == null) &#123;</span></span><br><span class="line"><span class="comment">                        fastRemove(index);</span></span><br><span class="line"><span class="comment">                        return true;</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">            &#125; else &#123;</span></span><br><span class="line"><span class="comment">                for (int index = 0; index &lt; size; index++)</span></span><br><span class="line"><span class="comment">                    if (o.equals(elementData[index])) &#123;</span></span><br><span class="line"><span class="comment">                        fastRemove(index);</span></span><br><span class="line"><span class="comment">                        return true;</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            return false;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="boolean-isEmpty"><a href="#boolean-isEmpty" class="headerlink" title="boolean isEmpty();"></a>boolean isEmpty();</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_510_Collection</span>接口中常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection c = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        System.out.println(c.isEmpty()); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Object-toArray"><a href="#Object-toArray" class="headerlink" title="Object[] toArray();"></a>Object[] toArray();</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_510_Collection</span>接口中常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection c = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        c.add(<span class="number">100</span>);</span><br><span class="line">        c.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        Object[] o = c.toArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; o.length; i++) &#123;</span><br><span class="line">            System.out.println(o[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            100</span></span><br><span class="line"><span class="comment">            hello</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-interface-Iterator"><a href="#public-interface-Iterator" class="headerlink" title="public interface Iterator{}"></a>public interface Iterator<E>{}</h2><p>执行原理（这儿应该有一张图…）  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ObjectInput;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_511_Collection</span>集合迭代 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection c = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        c.add(<span class="number">100</span>);</span><br><span class="line">        c.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        c.add(<span class="number">3.14444</span>);</span><br><span class="line">        <span class="keyword">for</span> (Iterator it = c.iterator(); it.hasNext(); )&#123;</span><br><span class="line">            Object o = it.next();</span><br><span class="line">            System.out.println(o);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            100</span></span><br><span class="line"><span class="comment">            hello</span></span><br><span class="line"><span class="comment">            3.14444</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="List接口特有方法"><a href="#List接口特有方法" class="headerlink" title="List接口特有方法"></a>List接口特有方法</h1><h2 id="void-add-int-index-E-element"><a href="#void-add-int-index-E-element" class="headerlink" title="void add(int index, E element);"></a>void add(int index, E element);</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_519_List</span>接口特有方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        list.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;D&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Iterator it = list.iterator();</span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            A</span></span><br><span class="line"><span class="comment">            B</span></span><br><span class="line"><span class="comment">            D</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;========&quot;</span>);</span><br><span class="line">        list.add(<span class="number">2</span>,<span class="string">&quot;C&quot;</span>);</span><br><span class="line">        it = list.iterator();</span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            A</span></span><br><span class="line"><span class="comment">            B</span></span><br><span class="line"><span class="comment">            C</span></span><br><span class="line"><span class="comment">            D</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="E-get-int-index"><a href="#E-get-int-index" class="headerlink" title="E get(int index);"></a>E get(int index);</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_520_List</span>接口特有方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        list.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Object o = list.get(<span class="number">0</span>);</span><br><span class="line">        System.out.println(o);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=======&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            System.out.println(list.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            A</span></span><br><span class="line"><span class="comment">            =======</span></span><br><span class="line"><span class="comment">            A</span></span><br><span class="line"><span class="comment">            B</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="int-indexOf-Object-o"><a href="#int-indexOf-Object-o" class="headerlink" title="int indexOf(Object o);"></a>int indexOf(Object o);</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_520_List</span>接口特有方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        list.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot; ======== &quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> i = list.indexOf(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        System.out.println(i); <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="int-lastIndexOf-Object-o"><a href="#int-lastIndexOf-Object-o" class="headerlink" title="int lastIndexOf(Object o);"></a>int lastIndexOf(Object o);</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_520_List</span>接口特有方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        list.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line"></span><br><span class="line">        i = list.lastIndexOf(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        System.out.println(i); <span class="comment">// 2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="E-set-int-index-E-element"><a href="#E-set-int-index-E-element" class="headerlink" title="E set(int index, E element);"></a>E set(int index, E element);</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_520_List</span>接口特有方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        list.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line"></span><br><span class="line">        list.set(<span class="number">0</span>,<span class="string">&quot;C&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; list.size(); j++) &#123;</span><br><span class="line">            System.out.println(list.get(j));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            C</span></span><br><span class="line"><span class="comment">            B</span></span><br><span class="line"><span class="comment">            A</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h1><ol><li>初始化容量为10，底层先创建了一个长度为0的数组，当添加第一个元素的时候，初始化容量10  </li><li>size() 是元素个数，不是容量大小  </li><li>容量满了之后，增长容量grow()变为1.5倍  </li><li>线程不安全的  </li></ol><h2 id="另一个构造方法-public-ArrayList-Collection-lt-extends-E-gt-c"><a href="#另一个构造方法-public-ArrayList-Collection-lt-extends-E-gt-c" class="headerlink" title="另一个构造方法 public ArrayList(Collection&lt;? extends E&gt; c) {}"></a>另一个构造方法 public ArrayList(Collection&lt;? extends E&gt; c) {}</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_523_ArrayList</span>另一个构造方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        HashSet hashSet = <span class="keyword">new</span> HashSet();</span><br><span class="line">        hashSet.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList list = <span class="keyword">new</span> ArrayList(hashSet);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            System.out.println(list.get(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="如何转化为线程安全的"><a href="#如何转化为线程安全的" class="headerlink" title="如何转化为线程安全的"></a>如何转化为线程安全的</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_523_ArrayList</span>另一个构造方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        HashSet hashSet = <span class="keyword">new</span> HashSet();</span><br><span class="line">        hashSet.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList list = <span class="keyword">new</span> ArrayList(hashSet);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            System.out.println(list.get(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 非线程安全的</span></span><br><span class="line">        ArrayList lst = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="comment">// 变为线程安全的</span></span><br><span class="line">        Collections.synchronizedList(lst);</span><br><span class="line"></span><br><span class="line">        lst.add(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        lst.add(<span class="string">&quot;234&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h1><ol><li>底部是双向链表  </li><li>检索效率低，增删效率高  </li><li>存储内存地址不连续  </li><li>线程不安全的  </li></ol><h2 id="public-E-get-int-index"><a href="#public-E-get-int-index" class="headerlink" title="public E get(int index)"></a>public E get(int index)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_526_</span>链表优点和缺点 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList list = <span class="keyword">new</span> LinkedList();</span><br><span class="line">        list.add(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;b&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// LinkedList的get(),是遍历链表来的...</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            System.out.println(list.get(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        public E get(int index) &#123;</span></span><br><span class="line"><span class="comment">            checkElementIndex(index);</span></span><br><span class="line"><span class="comment">            return node(index).item;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        Node&lt;E&gt; node(int index) &#123;</span></span><br><span class="line"><span class="comment">            // assert isElementIndex(index);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            if (index &lt; (size &gt;&gt; 1)) &#123;</span></span><br><span class="line"><span class="comment">                Node&lt;E&gt; x = first;</span></span><br><span class="line"><span class="comment">                for (int i = 0; i &lt; index; i++)</span></span><br><span class="line"><span class="comment">                    x = x.next;</span></span><br><span class="line"><span class="comment">                return x;</span></span><br><span class="line"><span class="comment">            &#125; else &#123;</span></span><br><span class="line"><span class="comment">                Node&lt;E&gt; x = last;</span></span><br><span class="line"><span class="comment">                for (int i = size - 1; i &gt; index; i--)</span></span><br><span class="line"><span class="comment">                    x = x.prev;</span></span><br><span class="line"><span class="comment">                return x;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="public-boolean-add-E-e"><a href="#public-boolean-add-E-e" class="headerlink" title="public boolean add(E e)"></a>public boolean add(E e)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_527_LinkedList</span>源码分析 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList list = <span class="keyword">new</span> LinkedList();</span><br><span class="line">        list.add(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;c&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        public boolean add(E e) &#123;</span></span><br><span class="line"><span class="comment">            linkLast(e);</span></span><br><span class="line"><span class="comment">            return true;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        void linkLast(E e) &#123;</span></span><br><span class="line"><span class="comment">            final Node&lt;E&gt; l = last;</span></span><br><span class="line"><span class="comment">            final Node&lt;E&gt; newNode = new Node&lt;&gt;(l, e, null);</span></span><br><span class="line"><span class="comment">            last = newNode;</span></span><br><span class="line"><span class="comment">            if (l == null)</span></span><br><span class="line"><span class="comment">                first = newNode;</span></span><br><span class="line"><span class="comment">            else</span></span><br><span class="line"><span class="comment">                l.next = newNode;</span></span><br><span class="line"><span class="comment">            size++;</span></span><br><span class="line"><span class="comment">            modCount++;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h1><ol><li>底层是个数组  </li><li>初始化容量为10  </li><li>当容量满了后，调用grow()，扩容为原来的2倍  </li><li>线程安全的，效率较低，使用较少  </li></ol><h2 id="public-synchronized-boolean-add-E-e"><a href="#public-synchronized-boolean-add-E-e" class="headerlink" title="public synchronized boolean add(E e)"></a>public synchronized boolean add(E e)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Vector;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_529_Vecotr</span>集合源码分析 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Vector vector = <span class="keyword">new</span> Vector();</span><br><span class="line">        vector.add(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">// 当容量满了后，调用grow()</span></span><br><span class="line">        <span class="comment">// 扩容为原来的2倍</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        public synchronized boolean add(E e) &#123;</span></span><br><span class="line"><span class="comment">            modCount++;</span></span><br><span class="line"><span class="comment">            ensureCapacityHelper(elementCount + 1);</span></span><br><span class="line"><span class="comment">            elementData[elementCount++] = e;</span></span><br><span class="line"><span class="comment">            return true;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        private void ensureCapacityHelper(int minCapacity) &#123;</span></span><br><span class="line"><span class="comment">            // overflow-conscious code</span></span><br><span class="line"><span class="comment">            if (minCapacity - elementData.length &gt; 0)</span></span><br><span class="line"><span class="comment">                grow(minCapacity);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        private void grow(int minCapacity) &#123;</span></span><br><span class="line"><span class="comment">            // overflow-conscious code</span></span><br><span class="line"><span class="comment">            int oldCapacity = elementData.length;</span></span><br><span class="line"><span class="comment">            int newCapacity = oldCapacity + ((capacityIncrement &gt; 0) ?</span></span><br><span class="line"><span class="comment">                                             capacityIncrement : oldCapacity);</span></span><br><span class="line"><span class="comment">            if (newCapacity - minCapacity &lt; 0)</span></span><br><span class="line"><span class="comment">                newCapacity = minCapacity;</span></span><br><span class="line"><span class="comment">            if (newCapacity - MAX_ARRAY_SIZE &gt; 0)</span></span><br><span class="line"><span class="comment">                newCapacity = hugeCapacity(minCapacity);</span></span><br><span class="line"><span class="comment">            elementData = Arrays.copyOf(elementData, newCapacity);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="泛型机制"><a href="#泛型机制" class="headerlink" title="泛型机制"></a>泛型机制</h1><ol><li>JDK5.0推出的新特性  </li><li>泛型这种语法机制，只在程序编译阶段起作用，只是给编译器参考的。(运行阶段泛型没用!)  </li><li>JDK8之后引入了:自动类型推断机制。（又称为钻石表达式)  </li></ol><h2 id="指定存储Animal类"><a href="#指定存储Animal类" class="headerlink" title="指定存储Animal类"></a>指定存储Animal类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_530_</span>泛型机制 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 使用泛型 指定存储Animal类</span></span><br><span class="line">        List&lt;Animal&gt; list = <span class="keyword">new</span> ArrayList&lt;Animal&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> Cat());</span><br><span class="line">        list.add(<span class="keyword">new</span> Bird());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历</span></span><br><span class="line">        Iterator&lt;Animal&gt; it = list.iterator();</span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">            Animal a = it.next();</span><br><span class="line">            a.move();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Animal move~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">catchMouse</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Cat catch mouse~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bird</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;bird fly~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自动类型推断机制"><a href="#自动类型推断机制" class="headerlink" title="自动类型推断机制"></a>自动类型推断机制</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_531_</span>类型自动判断 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 自动类型判断，钻石表达式</span></span><br><span class="line">        ArrayList&lt;Animal2&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义泛型"><a href="#自定义泛型" class="headerlink" title="自定义泛型"></a>自定义泛型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_532_</span>自定义泛型 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test&lt;String&gt; t = <span class="keyword">new</span> Test&lt;&gt;();</span><br><span class="line">        t.doSome(<span class="string">&quot;ABC&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Test&lt;Integer&gt; i = <span class="keyword">new</span> Test&lt;&gt;();</span><br><span class="line">        i.doSome(<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>&lt;<span class="title">FanXing</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSome</span><span class="params">(FanXing o)</span></span>&#123;</span><br><span class="line">        System.out.println(o);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h1><ol><li>JDK5.0推出新特性 foreach  </li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_533_foreach</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] p = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i:p) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_534_foreach</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="number">100</span>);</span><br><span class="line">        list.add(<span class="number">200</span>);</span><br><span class="line">        list.add(<span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Integer i : list) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h1><h2 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_535_</span>演示<span class="title">HashSet</span>集合特点 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        set.add(<span class="string">&quot;Hello0&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Hello2&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Hello1&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;Hello0&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String i : set)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            Hello0</span></span><br><span class="line"><span class="comment">            Hello1</span></span><br><span class="line"><span class="comment">            Hello2</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="TreeSet"><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_536_</span>演示<span class="title">TreeSet</span>集合特点 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Set&lt;String&gt; set = <span class="keyword">new</span> TreeSet&lt;&gt;();</span><br><span class="line">        set.add(<span class="string">&quot;ABC&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;AB&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;BB&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;AAA&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String i : set) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            AAA</span></span><br><span class="line"><span class="comment">            AB</span></span><br><span class="line"><span class="comment">            ABC</span></span><br><span class="line"><span class="comment">            BB</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Map接口常用方法"><a href="#Map接口常用方法" class="headerlink" title="Map接口常用方法"></a>Map接口常用方法</h1><h2 id="V-put-K-key-V-value"><a href="#V-put-K-key-V-value" class="headerlink" title="V put(K key, V value);"></a>V put(K key, V value);</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_537_Map</span>接口常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Object, Object&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mp.put(<span class="number">100</span>, <span class="string">&quot;100元&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="V-get-Object-key"><a href="#V-get-Object-key" class="headerlink" title="V get(Object key);"></a>V get(Object key);</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_537_Map</span>接口常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Object, Object&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mp.put(<span class="number">100</span>, <span class="string">&quot;100元&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Object o = mp.get(<span class="number">100</span>);</span><br><span class="line">        System.out.println(o);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="void-clear-1"><a href="#void-clear-1" class="headerlink" title="void clear();"></a>void clear();</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_537_Map</span>接口常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Object, Object&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mp.put(<span class="number">100</span>, <span class="string">&quot;100元&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Object o = mp.get(<span class="number">100</span>);</span><br><span class="line">        System.out.println(o); <span class="comment">// 100元</span></span><br><span class="line"></span><br><span class="line">        mp.clear();</span><br><span class="line">        Object o1 = mp.get(<span class="number">100</span>);</span><br><span class="line">        System.out.println(o1); <span class="comment">// null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="int-size-1"><a href="#int-size-1" class="headerlink" title="int size();"></a>int size();</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_537_Map</span>接口常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Object, Object&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mp.put(<span class="number">100</span>, <span class="string">&quot;100元&quot;</span>);</span><br><span class="line">        System.out.println(mp.size()); <span class="comment">// 1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="boolean-containsKey-Object-key"><a href="#boolean-containsKey-Object-key" class="headerlink" title="boolean containsKey(Object key);"></a>boolean containsKey(Object key);</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_537_Map</span>接口常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Object, Object&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mp.put(<span class="number">100</span>, <span class="string">&quot;100元&quot;</span>);</span><br><span class="line">        System.out.println(mp.containsKey(<span class="number">100</span>)); <span class="comment">// true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="boolean-containsValue-Object-value"><a href="#boolean-containsValue-Object-value" class="headerlink" title="boolean containsValue(Object value);"></a>boolean containsValue(Object value);</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_537_Map</span>接口常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Object, Object&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mp.put(<span class="number">100</span>, <span class="string">&quot;100元&quot;</span>);</span><br><span class="line">        System.out.println(mp.containsValue(<span class="string">&quot;100元&quot;</span>)); <span class="comment">// true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="boolean-isEmpty-1"><a href="#boolean-isEmpty-1" class="headerlink" title="boolean isEmpty();"></a>boolean isEmpty();</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_537_Map</span>接口常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Object, Object&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mp.put(<span class="number">100</span>, <span class="string">&quot;100元&quot;</span>);</span><br><span class="line">        mp.clear();</span><br><span class="line">        System.out.println(mp.isEmpty()); <span class="comment">// true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Collection-values"><a href="#Collection-values" class="headerlink" title="Collection values();"></a>Collection<V> values();</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_538_Map</span>接口常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Object, Object&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mp.put(<span class="number">100</span>, <span class="string">&quot;100元&quot;</span>);</span><br><span class="line">        mp.put(<span class="number">200</span>, <span class="string">&quot;200元&quot;</span>);</span><br><span class="line">        mp.put(<span class="number">300</span>, <span class="string">&quot;300元&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Collection&lt;Object&gt; values = mp.values();</span><br><span class="line">        <span class="keyword">for</span> (Object i : values)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            100元</span></span><br><span class="line"><span class="comment">            200元</span></span><br><span class="line"><span class="comment">            300元</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Set-keySet"><a href="#Set-keySet" class="headerlink" title="Set keySet();"></a>Set<K> keySet();</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_539_</span>遍历<span class="title">Map</span>集合 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Object, Object&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mp.put(<span class="number">100</span>, <span class="string">&quot;100元&quot;</span>);</span><br><span class="line">        mp.put(<span class="number">200</span>, <span class="string">&quot;200元&quot;</span>);</span><br><span class="line">        mp.put(<span class="number">300</span>, <span class="string">&quot;300元&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Set&lt;Object&gt; keys = mp.keySet();</span><br><span class="line">        <span class="keyword">for</span> (Object i : keys)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            100</span></span><br><span class="line"><span class="comment">            200</span></span><br><span class="line"><span class="comment">            300</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Object i : keys)&#123;</span><br><span class="line">            System.out.println(mp.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            100元</span></span><br><span class="line"><span class="comment">            200元</span></span><br><span class="line"><span class="comment">            300元</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Set-lt-Map-Entry-lt-K-V-gt-gt-entrySet"><a href="#Set-lt-Map-Entry-lt-K-V-gt-gt-entrySet" class="headerlink" title="Set&lt;Map.Entry&lt;K, V&gt;&gt; entrySet();"></a>Set&lt;Map.Entry&lt;K, V&gt;&gt; entrySet();</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_540_</span>遍历<span class="title">Map</span>集合的另一种方式 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Object, Object&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mp.put(<span class="number">100</span>, <span class="string">&quot;100元&quot;</span>);</span><br><span class="line">        mp.put(<span class="number">200</span>, <span class="string">&quot;200元&quot;</span>);</span><br><span class="line">        mp.put(<span class="number">300</span>, <span class="string">&quot;300元&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Set&lt;Map.Entry&lt;Object, Object&gt;&gt; entries = mp.entrySet();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Object, Object&gt; i : entries)&#123;</span><br><span class="line">            System.out.println(i.getKey() + <span class="string">&quot; = &quot;</span> + i.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            100 = 100元</span></span><br><span class="line"><span class="comment">            200 = 200元</span></span><br><span class="line"><span class="comment">            300 = 300元</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h1><ol><li>HashMap集合底层是哈希表/散列表的数据结构。  </li><li>哈希表是一个怎样的数据结构呢?<br>哈希表是一个数组和单向链表的结合体。<br>数组∶在查询方面效率很高，随机增删方面效率很低。<br>单向链表:在随机增删方面效率较高，在查询方面效率很低。<br>哈希表将以上的两种数据结构融合在―起，充分发挥它们各自的优点。  </li><li>HashMap集合底层的源代码:  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashMap</span> </span>&#123;</span><br><span class="line">            <span class="comment">// HashMap底层实际上就是一个数组。(一维数组)</span></span><br><span class="line">            node&lt;K, V&gt;[] table;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//静态的内部类HashNap.Node</span></span><br><span class="line">            <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">K</span>, <span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> hash; <span class="comment">//哈希值是key 的hashCode()方法的执行结果。</span></span><br><span class="line">                <span class="keyword">final</span> K key;    <span class="comment">//存储到Map集合中的那个key</span></span><br><span class="line">                V value;        <span class="comment">//存储到Map集合中的那个value</span></span><br><span class="line">                Node&lt;K, V&gt; next; <span class="comment">//下一个节点的内存地址。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li>哈希表数据结构：<br>（这儿应该有张图…）  </li><li>HashMap集合的默认初始化容量是16，默认加载因子是0.75<br>这个默认加载因子是当HashMap集合底层数组的容量达到75%的时候，数组开始扩容。<br>重点: 记住: HashMap集合初始化容量必须是2的幂次，这也是官方推荐的，这是因为达到散列均匀，为了提高HashMap集合的存取效率，所必须的。  </li><li>重写hashCode()和equals()通过IDEA要两者同时重写，IDEA自动生成  </li><li>放在HashMap集合key部分的，以及放在HashSet集合中的元素，需要同时重写hashCode方法和equals方法。  </li><li>HashMap在JDK8之后<br>如果哈希表单向链表中元素超过8个,单向链表这种数据结构会变成红黑树数据结构<br>当红黑树上的节点数里小于6时，会重新把红黑树变成单向链表数据结构  </li></ol><h2 id="同时重写hashCode和equals"><a href="#同时重写hashCode和equals" class="headerlink" title="同时重写hashCode和equals"></a>同时重写hashCode和equals</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_544_</span>同时重写<span class="title">hashCode</span>和<span class="title">equals</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// HashSet底层是HashMap</span></span><br><span class="line">        HashSet&lt;Object&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        Student s2 = <span class="keyword">new</span> Student(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(s1.equals(s2)); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;s1 hashCode = &quot;</span> + s1.hashCode());</span><br><span class="line">        System.out.println(<span class="string">&quot;s2 hashCode = &quot;</span> + s2.hashCode());</span><br><span class="line">        set.add(s1);</span><br><span class="line">        set.add(s2);</span><br><span class="line">        <span class="comment">// 如果Student类不重写hashCode()，则set.size() = 2</span></span><br><span class="line">        <span class="comment">// 重写后为 1</span></span><br><span class="line">        System.out.println(set.size());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == o) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">null</span> || getClass() != o.getClass()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        Student student = (Student) o;</span><br><span class="line">        <span class="keyword">return</span> Objects.equals(name, student.name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hash(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="HashMap和Hashtable的区别"><a href="#HashMap和Hashtable的区别" class="headerlink" title="HashMap和Hashtable的区别"></a>HashMap和Hashtable的区别</h1><ol><li>HashMap和Hashtable一样底层都是哈希表  </li><li>Hashtable初始化容量11，默认加载因子是0.75  </li><li>Hashtable 的 key 和 value 都不能为 null  </li><li>Hashtable 扩容是原容量 * 2 + 1  </li></ol><h2 id="Hashtable-的-key-和-value-都不能为-null"><a href="#Hashtable-的-key-和-value-都不能为-null" class="headerlink" title="Hashtable 的 key 和 value 都不能为 null"></a>Hashtable 的 key 和 value 都不能为 null</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_548_HashMap</span>和<span class="title">Hashtable</span>的区别 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;Object, Object&gt; mp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        mp.put(<span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        System.out.println(mp.size());</span><br><span class="line"></span><br><span class="line">        Hashtable&lt;Object, Object&gt; mpt = <span class="keyword">new</span> Hashtable&lt;&gt;();</span><br><span class="line">        <span class="comment">// Hashtable 的 key 和 value 都不能为 null</span></span><br><span class="line"><span class="comment">//        mpt.put(null, null);</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            Exception in thread &quot;main&quot; java.lang.NullPointerException</span></span><br><span class="line"><span class="comment">            at java.util.Hashtable.put(Hashtable.java:460)</span></span><br><span class="line"><span class="comment">            at _548_HashMap和Hashtable的区别.main(_548_HashMap和Hashtable的区别.java:11)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h1><ol><li>key 和 value 用于存 String   </li></ol><h2 id="getProperty-和-setProperty"><a href="#getProperty-和-setProperty" class="headerlink" title="getProperty() 和 setProperty()"></a>getProperty() 和 setProperty()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_549_</span>属性类<span class="title">Properties</span>类 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Properties ppt = <span class="keyword">new</span> Properties();</span><br><span class="line">        ppt.setProperty(<span class="string">&quot;123&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line">        ppt.setProperty(<span class="string">&quot;234&quot;</span>, <span class="string">&quot;234&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(ppt.getProperty(<span class="string">&quot;123&quot;</span>));</span><br><span class="line">        System.out.println(ppt.get(<span class="string">&quot;234&quot;</span>));</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="TreeSet-1"><a href="#TreeSet-1" class="headerlink" title="TreeSet"></a>TreeSet</h1><ol><li>TreeSet集合底层实际上是一个TreeMap  </li><li>TreeMap集合底层是一个二叉树。  </li><li>放到TreeSet集合中的元素，等同于放到TreeMap集合key部分了。  </li><li>TreeSet集合中的元素:无序不可重复，但是可以按照元素的大小顺序自动排序。称为:可排序集合。  </li></ol><h2 id="TreeSet对String是可排序的"><a href="#TreeSet对String是可排序的" class="headerlink" title="TreeSet对String是可排序的"></a>TreeSet对String是可排序的</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_550_</span>演示<span class="title">TreeSet</span>对<span class="title">String</span>是可排序的 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TreeSet&lt;Object&gt; set = <span class="keyword">new</span> TreeSet&lt;&gt;();</span><br><span class="line">        set.add(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;1233&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;022&quot;</span>);</span><br><span class="line">        set.add(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        <span class="comment">// 字典序升序排序</span></span><br><span class="line">        <span class="keyword">for</span> (Object i : set)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            0</span></span><br><span class="line"><span class="comment">            022</span></span><br><span class="line"><span class="comment">            123</span></span><br><span class="line"><span class="comment">            1233</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自定义类型实现Comparable接口"><a href="#自定义类型实现Comparable接口" class="headerlink" title="自定义类型实现Comparable接口"></a>自定义类型实现Comparable接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_552_</span>自定义类型实现<span class="title">Comparable</span>接口 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TreeSet&lt;User&gt; users = <span class="keyword">new</span> TreeSet&lt;&gt;();</span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">10</span>));</span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">30</span>));</span><br><span class="line">        users.add(<span class="keyword">new</span> User(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User i : users)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            User&#123;age=10&#125;</span></span><br><span class="line"><span class="comment">            User&#123;age=20&#125;</span></span><br><span class="line"><span class="comment">            User&#123;age=30&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">User</span>&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 比较逻辑</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(User o)</span> </span>&#123; <span class="comment">// c1.compareTo(c2);</span></span><br><span class="line">        <span class="keyword">return</span> age - o.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_553_</span>比较规则该怎么写 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TreeSet&lt;Vip&gt; vips = <span class="keyword">new</span> TreeSet&lt;&gt;();</span><br><span class="line">        vips.add(<span class="keyword">new</span> Vip(<span class="string">&quot;ycc&quot;</span>,<span class="number">20</span>));</span><br><span class="line">        vips.add(<span class="keyword">new</span> Vip(<span class="string">&quot;lsh&quot;</span>,<span class="number">19</span>));</span><br><span class="line">        vips.add(<span class="keyword">new</span> Vip(<span class="string">&quot;lj&quot;</span>,<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Vip i : vips)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vip</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">Vip</span>&gt;</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Vip</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    compareTo方法的返回值很重要:</span></span><br><span class="line"><span class="comment">    返回0表示相同，value会覆盖。</span></span><br><span class="line"><span class="comment">    返回&gt;0，会继续在右子树上找。【10 - 9 = 1 ,1 &gt; 0的说明左边这个数字比较大。所以在右子树上找。】</span></span><br><span class="line"><span class="comment">    返回&lt;0，会继续在左子树上找。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Vip o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(age == o.age)&#123;</span><br><span class="line">            <span class="keyword">return</span> name.compareTo(o.name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> age - o.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Vip&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现比较器接口"><a href="#实现比较器接口" class="headerlink" title="实现比较器接口"></a>实现比较器接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_555_</span>实现比较器接口 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TreeSet&lt;Integer&gt; set = <span class="keyword">new</span> TreeSet&lt;&gt;(<span class="keyword">new</span> Comparator&lt;Integer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Integer o1, Integer o2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> o2 - o1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        set.add(<span class="number">1</span>);</span><br><span class="line">        set.add(<span class="number">3</span>);</span><br><span class="line">        set.add(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Integer i : set)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            3</span></span><br><span class="line"><span class="comment">            2</span></span><br><span class="line"><span class="comment">            1</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Collections工具类"><a href="#Collections工具类" class="headerlink" title="Collections工具类"></a>Collections工具类</h1><ol><li>java.util.collection 集合接口</li><li>java.util.collections 集合工具类，方便集合的操作。</li></ol><h2 id="Collections-synchronizedList"><a href="#Collections-synchronizedList" class="headerlink" title="Collections.synchronizedList()"></a>Collections.synchronizedList()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_556_Collections</span>工具类 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ArrayList 不是线程安全的</span></span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 变成线程安全的</span></span><br><span class="line">        Collections.synchronizedList(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Collections-sort"><a href="#Collections-sort" class="headerlink" title="Collections.sort()"></a>Collections.sort()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_556_Collections</span>工具类 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 排序</span></span><br><span class="line">        list.add(<span class="number">200</span>);</span><br><span class="line">        list.add(<span class="number">100</span>);</span><br><span class="line">        list.add(<span class="number">300</span>);</span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        <span class="keyword">for</span> (Integer i : list)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125; <span class="comment">// 100 200 300</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【470-500】异常</title>
      <link href="/2022/01/25/JavaSE/%E3%80%90470-500%E3%80%91%E5%BC%82%E5%B8%B8/"/>
      <url>/2022/01/25/JavaSE/%E3%80%90470-500%E3%80%91%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="异常以类和对象的形式存在"><a href="#异常以类和对象的形式存在" class="headerlink" title="异常以类和对象的形式存在"></a>异常以类和对象的形式存在</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_471_Java</span>中异常以类和对象的形式存在 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 实例化 异常对象</span></span><br><span class="line">        NumberFormatException nfe = <span class="keyword">new</span> NumberFormatException(<span class="string">&quot;数字格式化异常&quot;</span>);</span><br><span class="line">        System.out.println(nfe); <span class="comment">// java.lang.NumberFormatException: 数字格式化异常</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 实例化 异常对象</span></span><br><span class="line">        NullPointerException npe = <span class="keyword">new</span> NullPointerException(<span class="string">&quot;空指针异常&quot;</span>);</span><br><span class="line">        System.out.println(npe); <span class="comment">// java.lang.NullPointerException: 空指针异常</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> t = <span class="number">10</span>/<span class="number">0</span>; <span class="comment">// JVM 在执行此处时, 会 new 一个 ArithmeticException 异常对象</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Exception in thread &quot;main&quot; java.lang.ArithmeticException: / by zero</span></span><br><span class="line"><span class="comment">at _471_Java中异常以类和对象的形式存在.main(_471_Java中异常以类和对象的形式存在.java:11)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="UML以及starUML"><a href="#UML以及starUML" class="headerlink" title="UML以及starUML"></a>UML以及starUML</h1><ol><li><p>java的异常处理机制<br>异常在java中以类和对象的形式存在。那么异常的继承结构是怎样的?我们可以使用UML图来描述一下继承结构。<br>画UML图有很多工具，例如:Rational Rose （收费的)、startMz等    </p></li><li><p>什么是UML?有什么用?<br>UML是一种统一建模语言-一种图标式语言(画图的)<br>UML不是只有java中使用。只要是面向对象的编程语言，都有UML<br>一般画UM图的都是软件架构师或者说是系统分析师。这些级别的人员使用的。软件设计人员使用UML。<br>在UML图中可以描述类和类之间的关系，程序执行的流程，对象的状态等.  </p></li></ol><h1 id="异常的继承结构"><a href="#异常的继承结构" class="headerlink" title="异常的继承结构"></a>异常的继承结构</h1><ol><li>object  </li><li>Object下有Throwable (可抛出的)  </li><li>Throwable下有两个分支:Error（不可处理，直接退出JvM）和Exception (可处理的)  </li><li>Exception下有两个分支:  </li><li><ol><li>Exception的直接子类:编译时异常（要求程序员在编写程序阶段必须预先对这些异常处理）  </li></ol></li><li><ol start="2"><li>RuntimeException:运行时异常。(在编写程序阶段程序员可以预先处理，也可以不管）  </li></ol></li></ol><h1 id="编译时异常和运行时异常的区别"><a href="#编译时异常和运行时异常的区别" class="headerlink" title="编译时异常和运行时异常的区别"></a>编译时异常和运行时异常的区别</h1><ol><li>编译时异常和运行时异常，都是发生在运行阶段。编译阶段异常是不会发生的。  </li><li>编译时异常因为什么而得名?<br>因为编译时异常必须在编译(编写)阶段预先处理，如果不处理编译器报错，因此得名。  </li><li>所有异常都是在运行阶段发生的。因为只有程序运行阶段才可以new对象。因为异常的发生就是new异常对象。  </li><li>编译时异常发生概率高，运行时异常概率低。  </li><li>编译时异常又称为 受检异常 和 受控异常   </li><li>运行时异常又称为 未受检异常 和 非受控异常    </li></ol><h1 id="异常的两种处理方式"><a href="#异常的两种处理方式" class="headerlink" title="异常的两种处理方式"></a>异常的两种处理方式</h1><ol><li>在方法声明的位置上使用 throws 关键字  </li><li>使用 try catch 语句对异常捕捉  </li><li>如果一直上抛，抛到 main，main抛给调用者JVM，JVM只有一种结果，终止java程序执行  </li><li>上抛类似推卸责任，catch表示拦下，异常真正解决，调用者不知道  </li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_482_</span>异常处理的原理 </span>&#123;</span><br><span class="line">    <span class="comment">// 第一种方式 在 调用doSome()方法的 main 方法中继续上抛</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException</span>&#123;</span><br><span class="line">        doSome();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第二种方式 try catch 方式</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            doSome();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (ClassNotFoundException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 表示该方法在执行过程中会出现 ClassCastException 异常，这个异常是编译时异常</span></span><br><span class="line">    <span class="comment">// 所以要预先处理，否则直接调用doSome()会报错</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">doSome</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;doSome&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="运行时异常编写程序时可以不处理"><a href="#运行时异常编写程序时可以不处理" class="headerlink" title="运行时异常编写程序时可以不处理"></a>运行时异常编写程序时可以不处理</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_480_</span>运行时异常编写程序时可以不处理 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        程序执行到此处发生了ArithmeticException异常，</span></span><br><span class="line"><span class="comment">        底层new了一个ArithmeticException异常对象，然后抛出了，</span></span><br><span class="line"><span class="comment">        由于是main方法调用了100 / e ,</span></span><br><span class="line"><span class="comment">        所以这个异常ArithmeticException抛给了main方法，</span></span><br><span class="line"><span class="comment">        main方法没有处理，</span></span><br><span class="line"><span class="comment">        将这个异常自动抛给了JVN。</span></span><br><span class="line"><span class="comment">        JVM最终终止程序的执行。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="number">100</span> / <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里未执行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="异常捕捉和上抛的联合使用"><a href="#异常捕捉和上抛的联合使用" class="headerlink" title="异常捕捉和上抛的联合使用"></a>异常捕捉和上抛的联合使用</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_483_</span>异常捕捉和上抛的联合使用 </span>&#123;</span><br><span class="line">    <span class="comment">// 一般不建议在 main 方法上 throws</span></span><br><span class="line">    <span class="comment">// 因为异常发生了，就会抛给JVM，JVM终止程序</span></span><br><span class="line">    <span class="comment">// 所以一般 mian 方法中的异常 使用 try catch 捕捉</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        m1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用 try catch 方式</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;m1 begin&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 如果出现异常 这里不执行</span></span><br><span class="line">            <span class="comment">// 进入catch语句块中处理</span></span><br><span class="line">            m2();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">//            e.printStackTrace();</span></span><br><span class="line">            System.out.println(<span class="string">&quot;该文件被删除&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;m1 end&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 抛出 FileNotFoundException 的父类 IOException 是可行的</span></span><br><span class="line">    <span class="comment">// 也可以写多个异常</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m2</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;m2 begin&quot;</span>);</span><br><span class="line">        m3();</span><br><span class="line">        <span class="comment">// 如果出现异常 这里不执行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;m2 end&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由于 FileInputStream 构造方法中 throws 了 FileNotFoundException 异常</span></span><br><span class="line">    <span class="comment">// 所以程序必须处理这个异常</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m3</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;m3 begin&quot;</span>);</span><br><span class="line">        <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\Workspace\\使用说明.docx&quot;</span>);</span><br><span class="line">        <span class="comment">// 如果出现异常 这里不执行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;m3 end&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="深入try-catch"><a href="#深入try-catch" class="headerlink" title="深入try catch"></a>深入try catch</h1><ol><li>多个catch的时候，从上到下的catch需要从小到大的Exception  </li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_485_try_catch</span>深入 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建输入流</span></span><br><span class="line">            FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\xxxxxx&quot;</span>);</span><br><span class="line">            <span class="comment">// 读文件</span></span><br><span class="line">            fis.read();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123; <span class="comment">// 对应 new FileInputStream</span></span><br><span class="line">            System.out.println(<span class="string">&quot;文件不存在&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e)&#123;            <span class="comment">// 对应 read()</span></span><br><span class="line">            System.out.println(<span class="string">&quot;read 失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="jdk8新特性"><a href="#jdk8新特性" class="headerlink" title="jdk8新特性"></a>jdk8新特性</h1><ol><li>catch中加入 “|” 运算符<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_486_Java8</span>新特性 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\xxxxx&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException | NullPointerException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;文件不存在？ 空指针异常？&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h1 id="上抛和捕捉怎么选择"><a href="#上抛和捕捉怎么选择" class="headerlink" title="上抛和捕捉怎么选择"></a>上抛和捕捉怎么选择</h1><p>如果希望调用者处理，使用throws</p><h1 id="异常对象的常用方法"><a href="#异常对象的常用方法" class="headerlink" title="异常对象的常用方法"></a>异常对象的常用方法</h1><h2 id="getMessage"><a href="#getMessage" class="headerlink" title="getMessage()"></a>getMessage()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_488_</span>异常对象的常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// getMessage() 获取简单的描述信息</span></span><br><span class="line">        NullPointerException npe = <span class="keyword">new</span> NullPointerException(<span class="string">&quot;空指针异常&quot;</span>);</span><br><span class="line">        String msg = npe.getMessage();</span><br><span class="line">        System.out.println(msg);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;======&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="printStackTrace"><a href="#printStackTrace" class="headerlink" title="printStackTrace()"></a>printStackTrace()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_488_</span>异常对象的常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        NullPointerException npe = <span class="keyword">new</span> NullPointerException(<span class="string">&quot;空指针异常&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// printStackTrace() 打印异常堆栈信息</span></span><br><span class="line">        <span class="comment">// 异步线程方式输出</span></span><br><span class="line">        <span class="comment">// 所以控制台输出时 &quot;======&quot; 在前</span></span><br><span class="line">        npe.printStackTrace();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;======&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="异常信息如何查看"><a href="#异常信息如何查看" class="headerlink" title="异常信息如何查看"></a>异常信息如何查看</h1><p>异常追踪信息从上往下看…<br>SUM公司写的代码就不用看了…   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_489_</span>异常对象的常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            m1();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            java.io.FileNotFoundException: D:\xxxxxx (系统找不到指定的文件。)</span></span><br><span class="line"><span class="comment">                at java.io.FileInputStream.open0(Native Method)</span></span><br><span class="line"><span class="comment">                at java.io.FileInputStream.open(FileInputStream.java:195)</span></span><br><span class="line"><span class="comment">                at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:138)</span></span><br><span class="line"><span class="comment">                at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:93)</span></span><br><span class="line"><span class="comment">                at _489_异常对象的常用方法.m3(_489_异常对象的常用方法.java:22)</span></span><br><span class="line"><span class="comment">                at _489_异常对象的常用方法.m2(_489_异常对象的常用方法.java:18)</span></span><br><span class="line"><span class="comment">                at _489_异常对象的常用方法.m1(_489_异常对象的常用方法.java:14)</span></span><br><span class="line"><span class="comment">                at _489_异常对象的常用方法.main(_489_异常对象的常用方法.java:7)</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m1</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        m2();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m2</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        m3();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">m3</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\xxxxxx&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="finally子句的使用"><a href="#finally子句的使用" class="headerlink" title="finally子句的使用"></a>finally子句的使用</h1><ol><li>try中的语句就算发生异常 finally 中的语句可以正常运行  </li><li>所以finally语句比较有保障，比如close文件  </li><li>try 可以直接和 finally 连用</li><li>try 中就算 return，finally 内的语句也会执行，也就是先执行 try 后执行 finally 最后 return  </li><li>退出JVM finally语句不执行</li><li>java中有一条这样的规则: 方法体中的代码必须遵循自上而下顺序战次逐行执行(亘古不变的语法! )  </li></ol><h2 id="123"><a href="#123" class="headerlink" title="123"></a>123</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_490_finally</span>子句的使用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建输入流</span></span><br><span class="line">            fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:\\1Devc++ file\\00001.cpp&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 这里空指针异常 会导致 fis 没有关闭</span></span><br><span class="line">            String s = <span class="keyword">null</span>;</span><br><span class="line">            s.toString();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 关闭 占用资源 的流对象</span></span><br><span class="line">            fis.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NullPointerException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// fis 可能是 null</span></span><br><span class="line">            <span class="comment">// 所以 try catch</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fis.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;======&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_491_finally</span>子句的使用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;try...&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;finally...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_492_</span>退出<span class="title">JVMfinally</span>语句不执行 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;try...&quot;</span>);</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;finally...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6"><a href="#6" class="headerlink" title="6"></a>6</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_493_finally</span>的面试题 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(f());</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            finally!</span></span><br><span class="line"><span class="comment">            100</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            ++i;</span><br><span class="line">            System.out.println(<span class="string">&quot;finally!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    这是对f()反编译后的结果</span></span><br><span class="line"><span class="comment">//    public static int f()&#123;</span></span><br><span class="line"><span class="comment">//        int i = 100;</span></span><br><span class="line"><span class="comment">//        int j = i;</span></span><br><span class="line"><span class="comment">//        ++i;</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;finally!&quot;);</span></span><br><span class="line"><span class="comment">//        return j;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="final-finally-finalize的区别"><a href="#final-finally-finalize的区别" class="headerlink" title="final_finally_finalize的区别"></a>final_finally_finalize的区别</h1><ol><li>final 是一个关键字，表示最终的，不变的    </li><li>finally 也是一个关键字，和try连用，finally语句块中的语句一定执行  </li><li>finalize 是 Object 中的一个方法，所以是标识符，是JVM的GC的垃圾回收器负责调用  </li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_494_final_finally_finalize</span>的区别 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Object o = <span class="keyword">new</span> Object();</span><br><span class="line">        <span class="comment">/* 这是 Object 中的一个方法</span></span><br><span class="line"><span class="comment">        是JVM的GC的垃圾回收器调用</span></span><br><span class="line"><span class="comment">        protected void finalize() throws Throwable &#123; &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java中怎么自定义异常"><a href="#Java中怎么自定义异常" class="headerlink" title="Java中怎么自定义异常"></a>Java中怎么自定义异常</h1><ol><li>编写一个类继承Exception或者RuntimeException.  </li><li>提供两个构造方法，一个无参数的，一个带有string参数的。  </li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_495_java</span>中如何自定义异常 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyException1 e1 = <span class="keyword">new</span> MyException1(<span class="string">&quot;用户名不能为空&quot;</span>);</span><br><span class="line">        e1.printStackTrace();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        MyException1: 用户名不能为空</span></span><br><span class="line"><span class="comment">        at _495_java中如何自定义异常.main(_495_java中如何自定义异常.java:3)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyException1</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123; <span class="comment">// 用于编译时异常</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException1</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyException2</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span></span>&#123; <span class="comment">// 用于运行时异常</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException2</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="异常在实际开发中的作用"><a href="#异常在实际开发中的作用" class="headerlink" title="异常在实际开发中的作用"></a>异常在实际开发中的作用</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_496_</span>异常在实际开发中的作用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        MyStack sta = <span class="keyword">new</span> MyStack();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sta.pop();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MyStackOperatorException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        MyStackOperatorException: 栈空了~</span></span><br><span class="line"><span class="comment">            at MyStack.pop(_496_异常在实际开发中的作用.java:59)</span></span><br><span class="line"><span class="comment">            at _496_异常在实际开发中的作用.main(_496_异常在实际开发中的作用.java:6)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="string">&quot; =============== &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sta.push(<span class="number">1</span>);</span><br><span class="line">            sta.push(<span class="number">2</span>);</span><br><span class="line">            sta.push(<span class="number">3</span>);</span><br><span class="line">            sta.push(<span class="number">4</span>);</span><br><span class="line">            sta.push(<span class="number">5</span>);</span><br><span class="line">            sta.push(<span class="number">6</span>);</span><br><span class="line">            sta.push(<span class="number">7</span>);</span><br><span class="line">            sta.push(<span class="number">8</span>);</span><br><span class="line">            sta.push(<span class="number">9</span>);</span><br><span class="line">            sta.push(<span class="number">10</span>);</span><br><span class="line">            sta.push(<span class="number">11</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MyStackOperatorException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        MyStackOperatorException: 栈已满~</span></span><br><span class="line"><span class="comment">            at MyStack.push(_496_异常在实际开发中的作用.java:48)</span></span><br><span class="line"><span class="comment">            at _496_异常在实际开发中的作用.main(_496_异常在实际开发中的作用.java:23)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStack</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Object[] elements;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> index;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认初始化容量是 10</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyStack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        elements = <span class="keyword">new</span> Object[<span class="number">10</span>];</span><br><span class="line">        index = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(Object o)</span> <span class="keyword">throws</span> MyStackOperatorException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &gt;= <span class="number">10</span>)&#123;</span><br><span class="line"><span class="comment">//            MyStackOperatorException e = new MyStackOperatorException(&quot;栈已满~&quot;);</span></span><br><span class="line"><span class="comment">//            throw e;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 以上两行合并为一行</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MyStackOperatorException(<span class="string">&quot;栈已满~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        elements[index++] = o;</span><br><span class="line">        System.out.println(<span class="string">&quot;push &quot;</span> + o);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> <span class="keyword">throws</span> MyStackOperatorException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt;= <span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//            MyStackOperatorException e = new MyStackOperatorException(&quot;栈空了~&quot;);</span></span><br><span class="line"><span class="comment">//            throw e;</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MyStackOperatorException(<span class="string">&quot;栈空了~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        --index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set get 也许用不上，但是必须写...</span></span><br><span class="line">    <span class="keyword">public</span> Object[] getElements() &#123;</span><br><span class="line">        <span class="keyword">return</span> elements;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setElements</span><span class="params">(Object[] elements)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.elements = elements;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIndex</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.index = index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStackOperatorException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyStackOperatorException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyStackOperatorException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="异常与方法覆盖"><a href="#异常与方法覆盖" class="headerlink" title="异常与方法覆盖"></a>异常与方法覆盖</h1><p>重写之后的方法不能比重写之前更宽泛的编译时的异常，可以更少。    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_497_</span>异常与方法覆盖 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">m1</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">m2</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="comment">/* 编译报错</span></span><br><span class="line"><span class="comment">    @Override</span></span><br><span class="line"><span class="comment">    public void m1() throws Exception&#123;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 编译成功</span></span><br><span class="line"><span class="comment">    @Override</span></span><br><span class="line"><span class="comment">    public void m1() throws RuntimeException&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 编译成功</span></span><br><span class="line"><span class="comment">    @Override</span></span><br><span class="line"><span class="comment">    public void m2()&#123;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 编译成功</span></span><br><span class="line"><span class="comment">    @Override</span></span><br><span class="line"><span class="comment">    public void m2() throws Exception &#123;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 编译成功</span></span><br><span class="line"><span class="comment">    @Override</span></span><br><span class="line"><span class="comment">    public void m2() throws NullPointerException &#123;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="异常中的关键字"><a href="#异常中的关键字" class="headerlink" title="异常中的关键字"></a>异常中的关键字</h1><ol><li>try  </li><li>catch  </li><li>finally  </li><li>throws 在方法上声明  </li><li>throw 手动抛出异常  </li></ol><h1 id="异常作业"><a href="#异常作业" class="headerlink" title="异常作业"></a>异常作业</h1><p>编写程序模拟用户注册:<br>1、程序开始执行时，提示用户输入”用户名”和”密码”信息。<br>2、输入信息之后，后台java程序模拟用户注册。<br>3、注册时用户名要求长度在[6-14]之间，小于或者大于都表示异常。<br>注意:<br>完成注册的方法放到一个单独的类中-异常类自定义即可-  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Userservice</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">register</span> <span class="params">(string username ,string password)</span></span>&#123;</span><br><span class="line">        <span class="comment">//这个方法中完成注册!</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>编写main方法，在main方法中接收用户输入的信息，在main方法中调用Userservice的register方法完成注册   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_498_</span>异常作业 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        UserServices u = <span class="keyword">new</span> UserServices();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            u.register(<span class="keyword">null</span>,<span class="string">&quot;123123123&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MyRegisterException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserServices</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(String username, String pasaword)</span> <span class="keyword">throws</span> MyRegisterException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(username != <span class="keyword">null</span> &amp;&amp; <span class="number">6</span> &lt;= username.length() &amp;&amp; username.length() &lt;= <span class="number">14</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;登陆成功~~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MyRegisterException(<span class="string">&quot;用户名长度不对!!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRegisterException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyRegisterException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyRegisterException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="武器数组作业"><a href="#武器数组作业" class="headerlink" title="武器数组作业"></a>武器数组作业</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_499_</span>武器数组作业 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Army army = <span class="keyword">new</span> Army(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            army.addWeapon(<span class="keyword">new</span> Tank());</span><br><span class="line">            army.addWeapon(<span class="keyword">new</span> Radar());</span><br><span class="line">            army.addWeapon(<span class="keyword">new</span> Missile());</span><br><span class="line">            army.addWeapon(<span class="keyword">new</span> Tank());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (addWeaponException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=======&quot;</span>);</span><br><span class="line">        army.moveAll();</span><br><span class="line">        System.out.println(<span class="string">&quot;=======&quot;</span>);</span><br><span class="line">        army.attackAll();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            Tank加入成功~</span></span><br><span class="line"><span class="comment">            Radar加入成功~</span></span><br><span class="line"><span class="comment">            Missile加入成功~</span></span><br><span class="line"><span class="comment">            =======</span></span><br><span class="line"><span class="comment">            tank move~</span></span><br><span class="line"><span class="comment">            Radar move~</span></span><br><span class="line"><span class="comment">            =======</span></span><br><span class="line"><span class="comment">            tank attack~</span></span><br><span class="line"><span class="comment">            Missile attack~</span></span><br><span class="line"><span class="comment">            addWeaponException: 武器数量已满~</span></span><br><span class="line"><span class="comment">                at Army.addWeapon(_499_武器数组作业.java:36)</span></span><br><span class="line"><span class="comment">                at _499_武器数组作业.main(_499_武器数组作业.java:10)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Army</span></span>&#123;</span><br><span class="line">    Weapon[] w;</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Army</span><span class="params">(<span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line">        w = <span class="keyword">new</span> Weapon[count];</span><br><span class="line">        index = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addWeapon</span><span class="params">(Weapon o)</span> <span class="keyword">throws</span> addWeaponException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; w.length)&#123;</span><br><span class="line">            w[index++] = o;</span><br><span class="line">            System.out.println(o + <span class="string">&quot;加入成功~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">throw</span> <span class="keyword">new</span> addWeaponException(<span class="string">&quot;武器数量已满~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moveAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; w.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(w[i] <span class="keyword">instanceof</span> Movable)&#123;</span><br><span class="line">                Movable o = (Movable) w[i];</span><br><span class="line">                o.move();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attackAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; w.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(w[i] <span class="keyword">instanceof</span> Attachable)&#123;</span><br><span class="line">                Attachable o = (Attachable) w[i];</span><br><span class="line">                o.attack();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 武器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Weapon</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;一个武器&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Missile</span> <span class="keyword">extends</span> <span class="title">Weapon</span> <span class="keyword">implements</span> <span class="title">Attachable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Missile attack~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Missile&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Radar</span> <span class="keyword">extends</span> <span class="title">Weapon</span> <span class="keyword">implements</span> <span class="title">Movable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Radar move~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Radar&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tank</span> <span class="keyword">extends</span> <span class="title">Weapon</span> <span class="keyword">implements</span> <span class="title">Movable</span>, <span class="title">Attachable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;tank move~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;tank attack~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Tank&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可移动接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Movable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可攻击接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Attachable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">attack</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义异常</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">addWeaponException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">addWeaponException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">addWeaponException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【468-469】Enum</title>
      <link href="/2022/01/24/JavaSE/%E3%80%90468-469%E3%80%91Enum/"/>
      <url>/2022/01/24/JavaSE/%E3%80%90468-469%E3%80%91Enum/</url>
      
        <content type="html"><![CDATA[<h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><ol><li>返回的结果只有两种情况，使用boolean就行    </li><li>结果超过两种，但是依旧能列举，推荐使用 enum 类型  </li><li>enum 是一种引用数据类型  </li><li>例如星期，四季等等…  </li></ol><h1 id="枚举类型的使用"><a href="#枚举类型的使用" class="headerlink" title="枚举类型的使用"></a>枚举类型的使用</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_469_</span>枚举类型的使用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Result res = divide(<span class="number">10</span>,<span class="number">0</span>);</span><br><span class="line">        System.out.println(res == Result.SUCCESS? <span class="string">&quot;计算成功&quot;</span>:<span class="string">&quot;计算失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">divide</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> c = a/b;</span><br><span class="line">            <span class="keyword">return</span> Result.SUCCESS;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.FAIL;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每一个值都可以看做常量</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Result</span></span>&#123;</span><br><span class="line">    <span class="comment">// SUCCESS 是枚举 Result 类型中的一个值</span></span><br><span class="line">    <span class="comment">// FAIL 同理</span></span><br><span class="line">    SUCCESS, FAIL</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【466-467】Random</title>
      <link href="/2022/01/24/JavaSE/%E3%80%90466-467%E3%80%91Random/"/>
      <url>/2022/01/24/JavaSE/%E3%80%90466-467%E3%80%91Random/</url>
      
        <content type="html"><![CDATA[<h1 id="产生随机数"><a href="#产生随机数" class="headerlink" title="产生随机数"></a>产生随机数</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_466_</span>产生随机数 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">int</span> i = random.nextInt();</span><br><span class="line">        System.out.println(i); <span class="comment">// 产生一个 int范围内 随机数</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i1 = random.nextInt(<span class="number">111</span>);</span><br><span class="line">        System.out.println(i1); <span class="comment">// 产生 [0,111) 之间的随机数</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="生成5个不重复的随机数"><a href="#生成5个不重复的随机数" class="headerlink" title="生成5个不重复的随机数"></a>生成5个不重复的随机数</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_467_</span>生成5个不重复的随机数 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">int</span>[] v = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">111</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">                <span class="keyword">int</span> j= random.nextInt(<span class="number">100</span>);</span><br><span class="line">                <span class="keyword">if</span>(v[j] == <span class="number">0</span>)&#123;</span><br><span class="line">                    v[j] = <span class="number">1</span>;</span><br><span class="line">                    System.out.println(j);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【464-465】数字类</title>
      <link href="/2022/01/24/JavaSE/%E3%80%90464-465%E3%80%91%E6%95%B0%E5%AD%97%E7%B1%BB/"/>
      <url>/2022/01/24/JavaSE/%E3%80%90464-465%E3%80%91%E6%95%B0%E5%AD%97%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="数字格式化"><a href="#数字格式化" class="headerlink" title="数字格式化"></a>数字格式化</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.DecimalFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_464_</span>数字格式化 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// DecimalFormat 专门负责数字格式化</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        数字格式：</span></span><br><span class="line"><span class="comment">        # 代表任意数字</span></span><br><span class="line"><span class="comment">        , 代表千分位</span></span><br><span class="line"><span class="comment">        . 代表小数点</span></span><br><span class="line"><span class="comment">        0 代表不够时补 0</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// 这里表示 加入千分位 保留两位小数</span></span><br><span class="line">        DecimalFormat decimalFormat = <span class="keyword">new</span> DecimalFormat(<span class="string">&quot;###,###.##&quot;</span>);</span><br><span class="line">        String format = decimalFormat.format(<span class="number">123123.126</span>);</span><br><span class="line">        System.out.println(format); <span class="comment">// 123,123.13</span></span><br><span class="line"></span><br><span class="line">        DecimalFormat decimalFormat1 = <span class="keyword">new</span> DecimalFormat(<span class="string">&quot;###,###.0000&quot;</span>);</span><br><span class="line">        String format1 = decimalFormat1.format(<span class="number">123123.126</span>);</span><br><span class="line">        System.out.println(format1); <span class="comment">// 123,123.1260</span></span><br><span class="line"></span><br><span class="line">        DecimalFormat decimalFormat2 = <span class="keyword">new</span> DecimalFormat(<span class="string">&quot;###,###.####&quot;</span>);</span><br><span class="line">        String format2 = decimalFormat2.format(<span class="number">123123.123</span>);</span><br><span class="line">        System.out.println(format2); <span class="comment">// 123,123.123</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="高精度BigDecimal"><a href="#高精度BigDecimal" class="headerlink" title="高精度BigDecimal"></a>高精度BigDecimal</h1><p>不属于基本数据类型，属于引用数据类型<br>用于财务软件中，double不够用  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_465_</span>高精度<span class="title">BigDecimal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        BigDecimal bigDecimal = <span class="keyword">new</span> BigDecimal(<span class="number">100</span>);</span><br><span class="line">        BigDecimal bigDecimal1 = <span class="keyword">new</span> BigDecimal(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        BigDecimal bigDecimal2 = <span class="keyword">new</span> BigDecimal(<span class="number">123.33</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 求和</span></span><br><span class="line">        BigDecimal add = bigDecimal.add(bigDecimal1);</span><br><span class="line">        System.out.println(add);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 除法</span></span><br><span class="line">        BigDecimal divide = bigDecimal1.divide(bigDecimal);</span><br><span class="line">        System.out.println(divide);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【460-463】日期类</title>
      <link href="/2022/01/24/JavaSE/%E3%80%90460-463%E3%80%91%E6%97%A5%E6%9C%9F%E7%B1%BB/"/>
      <url>/2022/01/24/JavaSE/%E3%80%90460-463%E3%80%91%E6%97%A5%E6%9C%9F%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Date类"><a href="#Date类" class="headerlink" title="Date类"></a>Date类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_460_java</span>对日期的处理 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 系统当前时间</span></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        System.out.println(date); <span class="comment">// Mon Jan 24 18:26:45 CST 2022</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="SimpleDateFormat类"><a href="#SimpleDateFormat类" class="headerlink" title="SimpleDateFormat类"></a>SimpleDateFormat类</h1><p>专门负责Data格式化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_460_java</span>对日期的处理 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 系统当前时间</span></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        System.out.println(date); <span class="comment">// Mon Jan 24 18:26:45 CST 2022</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// SimpleDateFormat 专门负责日期格式化</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        yyyy 年</span></span><br><span class="line"><span class="comment">        MM 月</span></span><br><span class="line"><span class="comment">        dd 日</span></span><br><span class="line"><span class="comment">        HH 时</span></span><br><span class="line"><span class="comment">        mm 分</span></span><br><span class="line"><span class="comment">        ss 秒</span></span><br><span class="line"><span class="comment">        SSS 毫秒</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss SSS&quot;</span>);</span><br><span class="line">        System.out.println(sdf.format(date)); <span class="comment">// 2022-01-24 18:32:21 448</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="String转化为Date"><a href="#String转化为Date" class="headerlink" title="String转化为Date"></a>String转化为Date</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_461_java</span>对日期的处理</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// String -&gt; Date</span></span><br><span class="line">        String time = <span class="string">&quot;2008-08-08 08:08:08 888&quot;</span>;</span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss SSS&quot;</span>);</span><br><span class="line">        Date parse = simpleDateFormat.parse(time);</span><br><span class="line">        System.out.println(parse); <span class="comment">// Fri Aug 08 08:08:08 CST 2008</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="System-currentTimeMillis"><a href="#System-currentTimeMillis" class="headerlink" title="System.currentTimeMillis()"></a>System.currentTimeMillis()</h1><p>获取自1970-1-1 00:00:00:000 到现在时间经过毫秒</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_461_java</span>对日期的处理</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 获取自1970-1-1 00:00:00:000 到现在时间经过毫秒</span></span><br><span class="line">        <span class="keyword">long</span> t = System.currentTimeMillis();</span><br><span class="line">        System.out.println(t);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录一个方法执行时间</span></span><br><span class="line">        <span class="keyword">long</span> l = System.currentTimeMillis();</span><br><span class="line">        print();</span><br><span class="line">        <span class="keyword">long</span> r = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;print() 耗时&quot;</span> + (r-l) + <span class="string">&quot;毫秒&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i = &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="总结-System类-相关属性和方法"><a href="#总结-System类-相关属性和方法" class="headerlink" title="总结 System类 相关属性和方法"></a>总结 System类 相关属性和方法</h1><ol><li>System.out<br>out是System类的静态变量。    </li><li>System.out.println()<br>println()方法不是system类的，是PrintStream类的方法。    </li><li>System.gc()建议启动垃圾回收器    </li><li>System.currentTimeNillis()获取自1970年1月1日到系统当前时间的总毫秒数。    </li><li>System.exit(0)退出VNM。    </li></ol><h1 id="通过毫秒构造Date对象"><a href="#通过毫秒构造Date对象" class="headerlink" title="通过毫秒构造Date对象"></a>通过毫秒构造Date对象</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_463_</span>通过毫秒构造<span class="title">Date</span>对象 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date(<span class="number">0</span>); <span class="comment">// 参数是毫秒</span></span><br><span class="line">        System.out.println(date); <span class="comment">// Thu Jan 01 08:00:00 CST 1970</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取昨天此时的时间</span></span><br><span class="line">        Date date1 = <span class="keyword">new</span> Date(System.currentTimeMillis() - <span class="number">1000</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>);</span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss SSS&quot;</span>);</span><br><span class="line">        System.out.println(simpleDateFormat.format(date1));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【447-459】基本类型对应的8个包装类</title>
      <link href="/2022/01/24/JavaSE/%E3%80%90447-459%E3%80%91%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E5%AF%B9%E5%BA%94%E7%9A%848%E4%B8%AA%E5%8C%85%E8%A3%85%E7%B1%BB/"/>
      <url>/2022/01/24/JavaSE/%E3%80%90447-459%E3%80%91%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E5%AF%B9%E5%BA%94%E7%9A%848%E4%B8%AA%E5%8C%85%E8%A3%85%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="为什么基本数据类型还要包装类？"><a href="#为什么基本数据类型还要包装类？" class="headerlink" title="为什么基本数据类型还要包装类？"></a>为什么基本数据类型还要包装类？</h1><p>因为不够用，如下有需求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_447_</span>包装类存在的意义 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyInt myInt = <span class="keyword">new</span> MyInt(<span class="number">3</span>);</span><br><span class="line">        doSome(myInt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">doSome</span><span class="params">(Object o)</span></span>&#123;</span><br><span class="line">        System.out.println(o);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyInt</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyInt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyInt</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(<span class="keyword">this</span>.value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="八种包装类都是什么"><a href="#八种包装类都是什么" class="headerlink" title="八种包装类都是什么"></a>八种包装类都是什么</h1><table><thead><tr><th>基本数据类型</th><th>包装类型</th></tr></thead><tbody><tr><td>byte</td><td>java.lang.Byte（父类 Number）</td></tr><tr><td>short</td><td>java.lang.Short（父类 Number）</td></tr><tr><td>int</td><td>java.lang.Interger（父类 Number）</td></tr><tr><td>long</td><td>java.lang.Long（父类 Number）</td></tr><tr><td>float</td><td>java.lang.Float（父类 Number）</td></tr><tr><td>double</td><td>java.lang.Double（父类 Number）</td></tr><tr><td>boolean</td><td>java.lang.Boolean（父类 Object）</td></tr><tr><td>char</td><td>java.lang.Character（父类 Object）</td></tr></tbody></table><h1 id="装箱与拆箱"><a href="#装箱与拆箱" class="headerlink" title="装箱与拆箱"></a>装箱与拆箱</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_449_</span>装箱和拆箱的概念 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 基本数据类型 -&gt; 引用数据类型</span></span><br><span class="line">        <span class="comment">// 装箱</span></span><br><span class="line">        Integer i = <span class="keyword">new</span> Integer(<span class="number">123</span>);</span><br><span class="line">        <span class="comment">// 引用数据类型 -&gt; 基本数据类型</span></span><br><span class="line">        <span class="comment">// 拆箱</span></span><br><span class="line">        <span class="keyword">float</span> j = i.floatValue();</span><br><span class="line">        System.out.println(j); <span class="comment">// 123.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Integer的构造方法"><a href="#Integer的构造方法" class="headerlink" title="Integer的构造方法"></a>Integer的构造方法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_450_Integer</span>的构造方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        Integer x = <span class="keyword">new</span> Integer(<span class="number">123</span>);</span><br><span class="line">        System.out.println(x); <span class="comment">// 123</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        Integer y = <span class="keyword">new</span> Integer(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        System.out.println(y); <span class="comment">// 123</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Double的构造方法"><a href="#Double的构造方法" class="headerlink" title="Double的构造方法"></a>Double的构造方法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_451_Double</span>的构造方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        Double z = <span class="keyword">new</span> Double(<span class="string">&quot;3.14&quot;</span>);</span><br><span class="line">        System.out.println(z);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="通过常量获取最大值和最小值"><a href="#通过常量获取最大值和最小值" class="headerlink" title="通过常量获取最大值和最小值"></a>通过常量获取最大值和最小值</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_452_</span>通过常量获取最大值和最小值 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(Integer.MAX_VALUE);</span><br><span class="line">        System.out.println(Integer.MIN_VALUE);</span><br><span class="line">        System.out.println(Byte.MAX_VALUE);</span><br><span class="line">        System.out.println(Byte.MIN_VALUE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="自动装箱和自动拆箱"><a href="#自动装箱和自动拆箱" class="headerlink" title="自动装箱和自动拆箱"></a>自动装箱和自动拆箱</h1><p>自动装箱:基本数据类型自动转换成包装类。<br>自动拆箱:包装类自动转换成基本数据类型。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_453_</span>自动装箱和自动拆箱 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 自动装箱</span></span><br><span class="line">        Integer x = <span class="number">100</span>;</span><br><span class="line">        <span class="comment">// 自动拆箱</span></span><br><span class="line">        <span class="keyword">int</span> y = x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_455_</span>自动装箱和自动拆箱 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Integer a = <span class="number">1000</span>;</span><br><span class="line">        Integer b = <span class="number">1000</span>;</span><br><span class="line">        <span class="comment">// &quot;==&quot; 不会自动拆箱</span></span><br><span class="line">        System.out.println(a == b); <span class="comment">// false 比较的是内存地址</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// java中为了提高程序的执行效率，将[-128,127]之间所有的包装对象提前创建好</span></span><br><span class="line">        <span class="comment">// 如果数字在[-128,127]之间，数字会放到方法区常量池中</span></span><br><span class="line">        <span class="comment">// 如下 x,y 内存地址相同</span></span><br><span class="line">        Integer x = <span class="number">123</span>;</span><br><span class="line">        Integer y = <span class="number">123</span>;</span><br><span class="line">        System.out.println(x == y); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Integer常用方法"><a href="#Integer常用方法" class="headerlink" title="Integer常用方法"></a>Integer常用方法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_456_Integer</span>常用方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Integer x = <span class="keyword">new</span> Integer(<span class="number">100</span>);</span><br><span class="line">        <span class="comment">// 手动拆箱</span></span><br><span class="line">        <span class="keyword">int</span> z = x.intValue();</span><br><span class="line">        System.out.println(z);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里运行异常 NumberFormatException</span></span><br><span class="line"><span class="comment">//        Integer y = new Integer(&quot;中文&quot;);</span></span><br><span class="line"><span class="comment">//        System.out.println(y);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转换为 int</span></span><br><span class="line">        <span class="keyword">int</span> i = Integer.parseInt(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        System.out.println(i + <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转化为 double</span></span><br><span class="line">        <span class="keyword">double</span> v = Double.parseDouble(<span class="string">&quot;3.14&quot;</span>);</span><br><span class="line">        System.out.println(v);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 十进制转二进制</span></span><br><span class="line">        String s = Integer.toBinaryString(<span class="number">7</span>);</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 十进制转十六进制</span></span><br><span class="line">        String s1 = Integer.toHexString(<span class="number">15</span>);</span><br><span class="line">        System.out.println(s1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 十进制转八进制</span></span><br><span class="line">        String s2 = Integer.toOctalString(<span class="number">9</span>);</span><br><span class="line">        System.out.println(s2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="String-int-Integer类型互换"><a href="#String-int-Integer类型互换" class="headerlink" title="String_int_Integer类型互换"></a>String_int_Integer类型互换</h1><p>这儿因该得有个图  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_459_String_int_Integer</span>类型互换 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// int -&gt; String</span></span><br><span class="line">        String s1 = <span class="number">123</span> + <span class="string">&quot;&quot;</span>;</span><br><span class="line">        String s2 = String.valueOf(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// String -&gt; int</span></span><br><span class="line">        <span class="keyword">int</span> i1 = Integer.parseInt(<span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// int &lt;-&gt; Integer</span></span><br><span class="line">        <span class="comment">// 自动装箱 拆箱</span></span><br><span class="line">        Integer integer = Integer.valueOf(<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">int</span> i2 = integer.intValue();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// String &lt;-&gt; Integer</span></span><br><span class="line">        Integer integer1 = Integer.valueOf(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        String s = String.valueOf(<span class="keyword">new</span> Integer(<span class="number">123</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【425-446】String</title>
      <link href="/2022/01/23/JavaSE/%E3%80%90425-446%E3%80%91String/"/>
      <url>/2022/01/23/JavaSE/%E3%80%90425-446%E3%80%91String/</url>
      
        <content type="html"><![CDATA[<h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><ol><li>String 属于引用类型，不属于基本类型  </li><li>用双引号括起来的字符串，例如“abs”,”def”都是存储在“方法区”的“字符串常量池”中  </li><li>使用“+”进行字符串拼接，如String s = “a”+“b”，会在方法去产生两个字符串对象，在堆内存中产生一个String s对象，频繁使用导致内存空间的浪费    </li><li>面试题:String为什么是不可变的?<br> 我看过源代码，String类中有一个byte[ ]数组，这个byte[ ]数组采用了final修饰，因为数组一旦创建长度不可变。并且被final修饰的引用一旦指向某个对象之后，不可再指向其它对象，所以String是不可变的!  <pre><code> &quot;abc”无法变成&quot;abcd&quot;  </code></pre></li><li>StringBuiLder/StringBuffer为什么是可变的呢?<br> 我看过源代码，StringBuffer/StringBuiLder内部实际上是一个byte[ ]数组，这个byte[ ]数组没有披final修饰，StringBuffer/StringBuilder的初始化容量我记得应该是16，当存满之后会进行扩容，底层调用了数组拷贝的方法System.arraycopy()…是这样扩容的。所以stringBuilder/StringBuffer适合于使用字符串的频繁拼接操作。  </li></ol><h1 id="String字符串的存储原理"><a href="#String字符串的存储原理" class="headerlink" title="String字符串的存储原理"></a>String字符串的存储原理</h1><h2 id="01"><a href="#01" class="headerlink" title="01"></a>01</h2><p>这里本该有一张图   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_425_String</span>字符串的存储原理 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 以下两行在底层创建了三个字符串对象, 都存储在字符串常量池中</span></span><br><span class="line">        String s1 = <span class="string">&quot;abcdef&quot;</span>;</span><br><span class="line">        String s2 = <span class="string">&quot;abcdef&quot;</span> + <span class="string">&quot;xy&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// new对象的时候一定在堆内存中开辟空间</span></span><br><span class="line">        <span class="comment">// “xy” 一定在字符串常量池中有一份</span></span><br><span class="line">        String s3 = <span class="keyword">new</span> String(<span class="string">&quot;xy&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="02"><a href="#02" class="headerlink" title="02"></a>02</h2><p>这里本该有一张图   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_426_String</span>字符串的存储原理 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="number">110</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        String s1 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">        String s2 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">        System.out.println(s1 == s2); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        String x = <span class="keyword">new</span> String(<span class="string">&quot;xyz&quot;</span>);</span><br><span class="line">        String y = <span class="keyword">new</span> String(<span class="string">&quot;xyz&quot;</span>);</span><br><span class="line">        System.out.println(x == y); <span class="comment">// false</span></span><br><span class="line">        <span class="comment">// 所以String重写equals方法，使用equals方法比较</span></span><br><span class="line">        System.out.println(x.equals(y));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这样写可以避免空指针异常</span></span><br><span class="line">        System.out.println(<span class="string">&quot;xyz&quot;</span>.equals(x));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> Id;</span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">int</span> id, String name)</span> </span>&#123;</span><br><span class="line">        Id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="03"><a href="#03" class="headerlink" title="03"></a>03</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_428_String</span>面试题中创建了几个对象 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        一共3个对象：</span></span><br><span class="line"><span class="comment">            方法区字符串常量池有1个“hello”</span></span><br><span class="line"><span class="comment">            堆内存中有2个String对象</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        String s1 = <span class="keyword">new</span> String(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        String s2 = <span class="keyword">new</span> String(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="String类的构造方法"><a href="#String类的构造方法" class="headerlink" title="String类的构造方法"></a>String类的构造方法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_429_String</span>类的构造方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        String s = <span class="keyword">new</span> String(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        String s1 = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        System.out.println(s1);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="keyword">byte</span>[] bytes = &#123;<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>&#125;;</span><br><span class="line">        String s2 = <span class="keyword">new</span> String(bytes);</span><br><span class="line">        System.out.println(s2);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        String s3 = <span class="keyword">new</span> String(bytes,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(s3);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="keyword">char</span>[] chars = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>&#125;;</span><br><span class="line">        String s4 = <span class="keyword">new</span> String(chars);</span><br><span class="line">        System.out.println(s4);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        String s5 = <span class="keyword">new</span> String(chars,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">        System.out.println(s5);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="String类中的方法"><a href="#String类中的方法" class="headerlink" title="String类中的方法"></a>String类中的方法</h1><h2 id="charAt"><a href="#charAt" class="headerlink" title="charAt()"></a>charAt()</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_430_String</span>类的<span class="title">charAt</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> c = <span class="string">&quot;abc&quot;</span>.charAt(<span class="number">2</span>);</span><br><span class="line">        System.out.println(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="compareTo"><a href="#compareTo" class="headerlink" title="compareTo()"></a>compareTo()</h2><p>按照字典序比较大小<br>相等返回0<br>小返回负数<br>大返回正数  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_431_String</span>类的<span class="title">compareTo</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="string">&quot;abc&quot;</span>.compareTo(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        System.out.println(res); <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res1 = <span class="string">&quot;abc&quot;</span>.compareTo(<span class="string">&quot;abcd&quot;</span>);</span><br><span class="line">        System.out.println(res1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res2 = <span class="string">&quot;abc&quot;</span>.compareTo(<span class="string">&quot;ac&quot;</span>);</span><br><span class="line">        System.out.println(res2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res3 = <span class="string">&quot;abc&quot;</span>.compareTo(<span class="string">&quot;cba&quot;</span>);</span><br><span class="line">        System.out.println(res3);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res4 = <span class="string">&quot;abc&quot;</span>.compareTo(<span class="string">&quot;aba&quot;</span>);</span><br><span class="line">        System.out.println(res4);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="contains"><a href="#contains" class="headerlink" title="contains()"></a>contains()</h2><p>判断是否包含字符串  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_432_String</span>类的<span class="title">contains</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断是否包含字符串</span></span><br><span class="line">        System.out.println(<span class="string">&quot;hello&quot;</span>.contains(<span class="string">&quot;ell&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="endsWith"><a href="#endsWith" class="headerlink" title="endsWith()"></a>endsWith()</h2><p>判断当前字符串是否以某字符串结尾  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_433_String</span>类的<span class="title">endsWith</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断当前字符串是否以某字符串结尾</span></span><br><span class="line">        System.out.println(<span class="string">&quot;t1.txt&quot;</span>.endsWith(<span class="string">&quot;.txt&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="equals-和compareTo"><a href="#equals-和compareTo" class="headerlink" title="equals()和compareTo()"></a>equals()和compareTo()</h2><p>在Java8中equals()代码中不包含compareTo()…  </p><h2 id="equalsIgnoreCase"><a href="#equalsIgnoreCase" class="headerlink" title="equalsIgnoreCase()"></a>equalsIgnoreCase()</h2><p>就是忽略大小写的equals()  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_437_String</span>类的<span class="title">equalsIgnoreCase</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;abc&quot;</span>.equalsIgnoreCase(<span class="string">&quot;ABC&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="getBytes"><a href="#getBytes" class="headerlink" title="getBytes()"></a>getBytes()</h2><p>就是将字符串转换为byte数组  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_438_String</span>类的<span class="title">getBytes</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="string">&quot;ans&quot;</span>.getBytes();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bytes.length; i++) &#123;</span><br><span class="line">            System.out.println(bytes[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf()"></a>indexOf()</h2><p>返回字符串第一次出现起始位置的下标  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_438_String</span>类的<span class="title">getBytes</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;abcabcac&quot;</span>.indexOf(<span class="string">&quot;ca&quot;</span>)); <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="isEmpty"><a href="#isEmpty" class="headerlink" title="isEmpty()"></a>isEmpty()</h2><p>判断是否为空串<br>不能 String s = null 会空指针异常  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_439_String</span>类的<span class="title">isEmpty</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String s = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        System.out.println(s.isEmpty());</span><br><span class="line">        String s1 = <span class="string">&quot;11&quot;</span>;</span><br><span class="line">        System.out.println(s1.isEmpty());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="lastIndexOf"><a href="#lastIndexOf" class="headerlink" title="lastIndexOf()"></a>lastIndexOf()</h2><p>返回字符串最后一次出现的索引</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_440_String</span>类的<span class="title">replace</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;abcabcac&quot;</span>.lastIndexOf(<span class="string">&quot;ca&quot;</span>)); <span class="comment">// 5</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="replace"><a href="#replace" class="headerlink" title="replace()"></a>replace()</h2><p>将“ab”-&gt;“xx”  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_440_String</span>类的<span class="title">replace</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;abaabc&quot;</span>.replace(<span class="string">&quot;ab&quot;</span>,<span class="string">&quot;xx&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="split"><a href="#split" class="headerlink" title="split()"></a>split()</h2><p>拆分…  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_440_String</span>类的<span class="title">replace</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String[] s = <span class="string">&quot;2001-1-24&quot;</span>.split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length; i++) &#123;</span><br><span class="line">            System.out.println(s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="startsWith"><a href="#startsWith" class="headerlink" title="startsWith()"></a>startsWith()</h2><p>判断是否为某字符串开头</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_441_String</span>类的<span class="title">substring</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;abc&quot;</span>.startsWith(<span class="string">&quot;ab&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="substring"><a href="#substring" class="headerlink" title="substring()"></a>substring()</h2><p>截取子字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_441_String</span>类的<span class="title">substring</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String s = <span class="string">&quot;abcde&quot;</span>.substring(<span class="number">3</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// &quot;de&quot;</span></span><br><span class="line">        String s1 = <span class="string">&quot;abcde&quot;</span>.substring(<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line">        System.out.println(s1); <span class="comment">// 范围 [2,4) -&gt; cd</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="toCharArray"><a href="#toCharArray" class="headerlink" title="toCharArray()"></a>toCharArray()</h2><p>转化为char数组  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_442_String</span>类的<span class="title">toCharArray</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span>[] chars = <span class="string">&quot;abc&quot;</span>.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chars.length; i++) &#123;</span><br><span class="line">            System.out.println(chars[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="toLowerCase-与-toUpperCase"><a href="#toLowerCase-与-toUpperCase" class="headerlink" title="toLowerCase() 与 toUpperCase()"></a>toLowerCase() 与 toUpperCase()</h2><p>大小写转化  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_443_String</span>类的<span class="title">toLowerCase</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ABC&quot;</span>.toLowerCase());</span><br><span class="line">        System.out.println(<span class="string">&quot;abc&quot;</span>.toUpperCase());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="trim"><a href="#trim" class="headerlink" title="trim()"></a>trim()</h2><p>取出字符串前后空白  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_444_String</span>类的<span class="title">valueOf</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot; abc &quot;</span>.trim());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="valueOf-NaN"><a href="#valueOf-NaN" class="headerlink" title="valueOf()"></a>valueOf()</h2><p>String类方法中 只有一个 valueOf 方法是静态的 不需要 new 对象  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_444_String</span>类的<span class="title">valueOf</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// String类方法中 只有一个 valueOf 方法是静态的 不需要 new 对象</span></span><br><span class="line">        String s = String.valueOf(<span class="number">97</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// &quot;97&quot; 现在已经是字符串了</span></span><br><span class="line"></span><br><span class="line">        String s1 = String.valueOf(<span class="keyword">new</span> Customer());</span><br><span class="line">        System.out.println(s1); <span class="comment">// 这里调用 Customer 的 toString 方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Customer</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="StringBuffer"><a href="#StringBuffer" class="headerlink" title="StringBuffer"></a>StringBuffer</h1><p>使用“+”进行字符串拼接，如String s = “a”+“b”，会在方法去产生两个字符串对象，在堆内存中产生一个String s对象，频繁使用导致内存空间的浪费    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_445_StringBuffer</span>进行字符串拼接 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 这样会给内存池很大压力</span></span><br><span class="line">        String s1 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            s1 += i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用 StringBuffer</span></span><br><span class="line">        <span class="comment">// 初始化创建容量为16个bytes[]数组</span></span><br><span class="line">        StringBuffer s2 = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        s2.append(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        s2.append(<span class="number">3.14</span>);</span><br><span class="line">        s2.append(<span class="keyword">true</span>);</span><br><span class="line">        System.out.println(s2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用 StringBuffer 时最好创建时初始化初始容量，减少扩容次数</span></span><br><span class="line">        StringBuffer s3 = <span class="keyword">new</span> StringBuffer(<span class="number">10</span>);</span><br><span class="line">        s3.append(<span class="string">&quot;heooolo&quot;</span>);</span><br><span class="line">        System.out.println(s3); <span class="comment">// heooolo</span></span><br><span class="line">        s3.append(<span class="string">&quot;xxxxxxxx&quot;</span>);</span><br><span class="line">        System.out.println(s3); <span class="comment">// heoooloxxxxxxxx</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="StringBuilder和StringBuffer的区别"><a href="#StringBuilder和StringBuffer的区别" class="headerlink" title="StringBuilder和StringBuffer的区别"></a>StringBuilder和StringBuffer的区别</h1><p>StringBuffer中的方法都有：synchronized 关键词修饰，表示StringBuffer在多线程环境下时安全的<br>StringBuilder是非线程安全的  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_446_StringBuilder</span>和<span class="title">StringBuffer</span>的区别 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 代码没啥区别</span></span><br><span class="line">        StringBuilder s1 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        s1.append(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        s1.append(<span class="keyword">true</span>);</span><br><span class="line">        s1.append(<span class="number">3.456</span>);</span><br><span class="line">        System.out.println(s1);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【384-424】数组</title>
      <link href="/2022/01/20/JavaSE/%E3%80%90384-424%E3%80%91%E6%95%B0%E7%BB%84/"/>
      <url>/2022/01/20/JavaSE/%E3%80%90384-424%E3%80%91%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数组概述"><a href="#数组概述" class="headerlink" title="数组概述"></a>数组概述</h1><ol><li>Java中数组是一种应用数据类型。  </li><li>数组一旦创建，长度不可变。  </li><li>数组存储在堆中。  </li><li>数组存储的是引用类型时，实际上存储对象的内存地址。    </li><li>数组都有length属性。  </li><li>内存地址连续。  </li><li>数组将第一个内存地址当整个数组对象的内存地址。  </li><li>二维数组每个元素存放的是一个一维数组</li></ol><h1 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h1><h2 id="初始化一维数组"><a href="#初始化一维数组" class="headerlink" title="初始化一维数组"></a>初始化一维数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_388_</span>初始化一维数组 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 静态初始化</span></span><br><span class="line">        <span class="keyword">int</span> array1[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="comment">// 动态初始化</span></span><br><span class="line">        <span class="keyword">int</span> array2[] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="对数组的修改与遍历"><a href="#对数组的修改与遍历" class="headerlink" title="对数组的修改与遍历"></a>对数组的修改与遍历</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_389_</span>对一维数组中元素的访问 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 静态初始化</span></span><br><span class="line">        <span class="keyword">int</span> p[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        p[p.length-<span class="number">1</span>] = <span class="number">555</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;p.length = &quot;</span> + p.length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; p.length; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;p[&quot;</span> + i + <span class="string">&quot;] = &quot;</span> + p[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法的参数是数组"><a href="#方法的参数是数组" class="headerlink" title="方法的参数是数组"></a>方法的参数是数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_392_</span>方法的参数是数组 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] p = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        printArray(p);</span><br><span class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">        printArray(a);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;==========&quot;</span>);</span><br><span class="line">        printArray(<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span>[] array)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            System.out.println(array[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="main方法的String数组"><a href="#main方法的String数组" class="headerlink" title="main方法的String数组"></a>main方法的String数组</h2><p>运行命令  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java Test str1 str2 str3</span><br></pre></td></tr></table></figure><p>此时 JVM 会将 “str1 str2 str3” 以空格分隔传入 args[] 中  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_394_main</span>方法的<span class="title">String</span>数组 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// JVM默认传递的 String[] args 长度默认为 0</span></span><br><span class="line">        <span class="comment">// args 不是 null</span></span><br><span class="line">        System.out.println(args.length);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===============&quot;</span>);</span><br><span class="line">        String[] s = <span class="keyword">new</span> String[<span class="number">0</span>];</span><br><span class="line">        printLength(s);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printLength</span><span class="params">(String[] s)</span></span>&#123;</span><br><span class="line">        System.out.println(s.length);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="main方法String参数的案例"><a href="#main方法String参数的案例" class="headerlink" title="main方法String参数的案例"></a>main方法String参数的案例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_395_main</span>方法<span class="title">String</span>参数的案例 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(args.length != <span class="number">2</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入账号和密码，如 zhangsan 123&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String username = args[<span class="number">0</span>];</span><br><span class="line">        String password = args[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 防止空指针异常~</span></span><br><span class="line"><span class="comment">//        if(username.equals(&quot;zhangsan&quot;) &amp;&amp; password.equals(&quot;123&quot;))&#123;</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;zhangsan&quot;</span>.equals(username) &amp;&amp; <span class="string">&quot;123&quot;</span>.equals(password))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;登陆成功!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;登陆失败!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数组中存储引用数据类型"><a href="#数组中存储引用数据类型" class="headerlink" title="数组中存储引用数据类型"></a>数组中存储引用数据类型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_396_</span>数组中存储引用数据类型 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 静态初始化</span></span><br><span class="line">        Animal[] p = &#123;<span class="keyword">new</span> Animal(), <span class="keyword">new</span> Animal()&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; p.length; i++) &#123;</span><br><span class="line">            p[i].move();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=============&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 动态初始化</span></span><br><span class="line">        Animal[] animals = <span class="keyword">new</span> Animal[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; animals.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 还需要 new 一下</span></span><br><span class="line">            animals[i] = <span class="keyword">new</span> Animal();</span><br><span class="line">            animals[i].move();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=============&quot;</span>);</span><br><span class="line">        Animal[] a = &#123;<span class="keyword">new</span> Cat(), <span class="keyword">new</span> Bird()&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            a[i].move();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;move~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;cat move~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bird</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;bird fly~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数组扩容与拷贝"><a href="#数组扩容与拷贝" class="headerlink" title="数组扩容与拷贝"></a>数组扩容与拷贝</h2><p>就是数组拷贝一份…</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.arraycopy(...);</span><br></pre></td></tr></table></figure><p>源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        * public static native void arraycopy(Object src,  int  srcPos,</span></span><br><span class="line"><span class="comment">                                        Object dest, int destPos,</span></span><br><span class="line"><span class="comment">                                        int length);</span></span><br><span class="line"><span class="comment">                                        *</span></span><br><span class="line"><span class="comment">                                        * */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_398_</span>数组拷贝 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] src = &#123;<span class="number">1</span>, <span class="number">11</span>, <span class="number">22</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] dst = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">        System.arraycopy(src,<span class="number">1</span>,dst,<span class="number">3</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dst.length; i++) &#123;</span><br><span class="line">            System.out.println(i + <span class="string">&quot; &quot;</span> + dst[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h1><h2 id="初始化二维数组"><a href="#初始化二维数组" class="headerlink" title="初始化二维数组"></a>初始化二维数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_399_</span>对二维数组的理解 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] a = &#123;</span><br><span class="line">                &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">                &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;,</span><br><span class="line">                &#123;<span class="number">22</span>,<span class="number">3</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[][] b = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>][];</span><br><span class="line">        b[<span class="number">0</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">        b[<span class="number">1</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];</span><br><span class="line">        b[<span class="number">2</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二维数组的length属性"><a href="#二维数组的length属性" class="headerlink" title="二维数组的length属性"></a>二维数组的length属性</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_400_</span>二维数组的<span class="title">length</span>属性 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] a = &#123;</span><br><span class="line">                &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">                &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;,</span><br><span class="line">                &#123;<span class="number">22</span>,<span class="number">3</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(a.length); <span class="comment">// 3</span></span><br><span class="line">        System.out.println(a[<span class="number">1</span>].length); <span class="comment">// 4</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二维数组的元素访问与遍历"><a href="#二维数组的元素访问与遍历" class="headerlink" title="二维数组的元素访问与遍历"></a>二维数组的元素访问与遍历</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_401_</span>二维数组的元素访问 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] a = &#123;</span><br><span class="line">                &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">                &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;,</span><br><span class="line">                &#123;<span class="number">22</span>,<span class="number">3</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a[i].length; j++) &#123;</span><br><span class="line">                System.out.printf(a[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法的参数是一个二维数组"><a href="#方法的参数是一个二维数组" class="headerlink" title="方法的参数是一个二维数组"></a>方法的参数是一个二维数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_403_</span>方法的参数是一个二维数组 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] a = &#123;</span><br><span class="line">                &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">                &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;,</span><br><span class="line">                &#123;<span class="number">22</span>,<span class="number">3</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        printArrays(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArrays</span><span class="params">(<span class="keyword">int</span>[][] a)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a[i].length; j++) &#123;</span><br><span class="line">                System.out.printf(a[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h1><h2 id="数组模拟栈数据结构"><a href="#数组模拟栈数据结构" class="headerlink" title="数组模拟栈数据结构"></a>数组模拟栈数据结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_410_</span>数组模拟栈数据结构 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyStack myStack = <span class="keyword">new</span> MyStack();</span><br><span class="line"></span><br><span class="line">        myStack.pop();</span><br><span class="line">        myStack.push(<span class="number">1</span>);</span><br><span class="line">        myStack.push(<span class="number">2</span>);</span><br><span class="line">        myStack.push(<span class="number">3</span>);</span><br><span class="line">        myStack.push(<span class="number">4</span>);</span><br><span class="line">        myStack.push(<span class="number">5</span>);</span><br><span class="line">        myStack.push(<span class="number">6</span>);</span><br><span class="line">        myStack.push(<span class="number">7</span>);</span><br><span class="line">        myStack.push(<span class="number">8</span>);</span><br><span class="line">        myStack.push(<span class="number">9</span>);</span><br><span class="line">        myStack.push(<span class="number">10</span>);</span><br><span class="line">        myStack.push(<span class="number">11</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStack</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Object[] elements;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> index;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认初始化容量是 10</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyStack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        elements = <span class="keyword">new</span> Object[<span class="number">10</span>];</span><br><span class="line">        index = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(Object o)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &gt;= <span class="number">10</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;栈满了~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            elements[index++] = o;</span><br><span class="line">            System.out.println(<span class="string">&quot;push &quot;</span> + o);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;栈已经空了~&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            --index;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set get 也许用不上，但是必须写...</span></span><br><span class="line">    <span class="keyword">public</span> Object[] getElements() &#123;</span><br><span class="line">        <span class="keyword">return</span> elements;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setElements</span><span class="params">(Object[] elements)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.elements = elements;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIndex</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.index = index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="酒店管理系统部分功能实现"><a href="#酒店管理系统部分功能实现" class="headerlink" title="酒店管理系统部分功能实现"></a>酒店管理系统部分功能实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_413_</span>酒店管理系统部分功能实现 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Hotel hotel = <span class="keyword">new</span> Hotel(<span class="number">3</span>,<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;欢迎使用酒店管理系统，请认真使用以下说明&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;功能对应编号：[1]表示查看房间列表, [2]订房, [3]退房&quot;</span>);</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入房间编号~&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> op = scanner.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">                hotel.printRooms();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入房间ID&quot;</span>);</span><br><span class="line">                <span class="keyword">int</span> roomID = scanner.nextInt();</span><br><span class="line">                hotel.order(roomID);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">3</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入房间ID&quot;</span>);</span><br><span class="line">                <span class="keyword">int</span> roomID = scanner.nextInt();</span><br><span class="line">                hotel.exit(roomID);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;输入有误~&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hotel</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Room[][] rooms;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Hotel</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        rooms = <span class="keyword">new</span> Room[x][y];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; y; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>) rooms[i][j] = <span class="keyword">new</span> Room((i+<span class="number">1</span>)*<span class="number">100</span>+j+<span class="number">1</span>,<span class="string">&quot;标准间&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">1</span>) rooms[i][j] = <span class="keyword">new</span> Room((i+<span class="number">1</span>)*<span class="number">100</span>+j+<span class="number">1</span>,<span class="string">&quot;单人间&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">2</span>) rooms[i][j] = <span class="keyword">new</span> Room((i+<span class="number">1</span>)*<span class="number">100</span>+j+<span class="number">1</span>,<span class="string">&quot;双人间&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">3</span>) rooms[i][j] = <span class="keyword">new</span> Room((i+<span class="number">1</span>)*<span class="number">100</span>+j+<span class="number">1</span>,<span class="string">&quot;三人间&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printRooms</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rooms.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; rooms[i].length; j++) &#123;</span><br><span class="line">                System.out.printf(rooms[i][j].toString() + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">order</span><span class="params">(<span class="keyword">int</span> roomId)</span></span>&#123;</span><br><span class="line">        rooms[roomId/<span class="number">100</span> - <span class="number">1</span>][roomId%<span class="number">100</span> - <span class="number">1</span>].setStatus(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exit</span><span class="params">(<span class="keyword">int</span> roomId)</span></span>&#123;</span><br><span class="line">        rooms[roomId/<span class="number">100</span> - <span class="number">1</span>][roomId%<span class="number">100</span> - <span class="number">1</span>].setStatus(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Room</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> roomId; <span class="comment">// ex: 101, 102, 201, 503 ...</span></span><br><span class="line">    <span class="keyword">private</span> String type; <span class="comment">// ex: 标准间, 单人间...</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> status; <span class="comment">// true 空闲, flase 占用</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Room</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Room</span><span class="params">(<span class="keyword">int</span> roomId, String type, <span class="keyword">boolean</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.roomId = roomId;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">this</span>.status = status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 以下是素养...</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRoomId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> roomId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRoomId</span><span class="params">(<span class="keyword">int</span> roomId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.roomId = roomId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setType</span><span class="params">(String type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IDEA 默认 isStatus</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(<span class="keyword">boolean</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.status = status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == o) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">null</span> || getClass() != o.getClass()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        Room room = (Room) o;</span><br><span class="line">        <span class="keyword">return</span> roomId == room.roomId &amp;&amp; status == room.status &amp;&amp; Objects.equals(type, room.type);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Room&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;roomId=&quot;</span> + roomId +</span><br><span class="line">                <span class="string">&quot;, type=&#x27;&quot;</span> + type + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, status=&quot;</span> + status +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Arrays工具类中的sort"><a href="#Arrays工具类中的sort" class="headerlink" title="Arrays工具类中的sort"></a>Arrays工具类中的sort</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_417_Arrays</span>工具类 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] a = &#123;<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 源码中 sort 前 static 修饰, 类名直接调用</span></span><br><span class="line">        Arrays.sort(a);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            System.out.printf(a[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="冒泡排序算法"><a href="#冒泡排序算法" class="headerlink" title="冒泡排序算法"></a>冒泡排序算法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_418_</span>冒泡排序算法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] a = &#123;<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; a.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i] &gt; a[j])&#123;</span><br><span class="line">                    <span class="keyword">int</span> t = a[i];</span><br><span class="line">                    a[i] = a[j];</span><br><span class="line">                    a[j] = t;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            System.out.printf(a[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="选择排序算法"><a href="#选择排序算法" class="headerlink" title="选择排序算法"></a>选择排序算法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_420_</span>选择排序算法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] a = &#123;<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> min = a[i];</span><br><span class="line">            <span class="keyword">int</span> pos = i;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; a.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j] &lt; min)&#123;</span><br><span class="line">                    min = a[j];</span><br><span class="line">                    pos = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> t = a[i];</span><br><span class="line">            a[i] = min;</span><br><span class="line">            a[pos] = t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            System.out.printf(a[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="二分查找法代码实现"><a href="#二分查找法代码实现" class="headerlink" title="二分查找法代码实现"></a>二分查找法代码实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_423_</span>二分法查找代码实现 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] p = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">21</span>,<span class="number">67</span>&#125;;</span><br><span class="line">        System.out.println(lowerBound(p,<span class="number">20</span>));</span><br><span class="line">        System.out.println(lowerBound(p,<span class="number">21</span>));</span><br><span class="line">        System.out.println(lowerBound(p,<span class="number">22</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 找到第一个大于等于 tar 的下标</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">lowerBound</span><span class="params">(<span class="keyword">int</span>[] p, <span class="keyword">int</span> tar)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> r = p.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> res = l;</span><br><span class="line">        <span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(p[mid] &gt;= tar)&#123;</span><br><span class="line">                res = mid;</span><br><span class="line">                r = mid-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                l = mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Arrays工具类中的binarySearch"><a href="#Arrays工具类中的binarySearch" class="headerlink" title="Arrays工具类中的binarySearch"></a>Arrays工具类中的binarySearch</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_424_Arrays</span>工具类的使用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] p = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">21</span>,<span class="number">67</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// &lt; 0 代表找不到, 返回下标</span></span><br><span class="line">        System.out.println(Arrays.binarySearch(p,<span class="number">20</span>)); <span class="comment">// -6</span></span><br><span class="line">        System.out.println(Arrays.binarySearch(p,<span class="number">21</span>)); <span class="comment">// 5</span></span><br><span class="line">        System.out.println(Arrays.binarySearch(p,<span class="number">22</span>)); <span class="comment">// -8</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【381-383】内部类</title>
      <link href="/2022/01/20/JavaSE/%E3%80%90381-383%E3%80%91%E5%86%85%E9%83%A8%E7%B1%BB/"/>
      <url>/2022/01/20/JavaSE/%E3%80%90381-383%E3%80%91%E5%86%85%E9%83%A8%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="内部类概述"><a href="#内部类概述" class="headerlink" title="内部类概述"></a>内部类概述</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_381_</span>内部类概述 </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test01</span></span>&#123;</span><br><span class="line">    <span class="comment">// 静态内部类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner1</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例内部类</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Inner2</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSoming</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 局部内部类</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Inner3</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_382_</span>引出匿名内部类 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyMath myMath = <span class="keyword">new</span> MyMath();</span><br><span class="line">        <span class="comment">// 多态</span></span><br><span class="line">        myMath.mySum(<span class="keyword">new</span> ComputeImpl(), <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="comment">// 使用匿名内部类</span></span><br><span class="line">        <span class="comment">// new 接口，&#123;&#125;后是对接口的实现，该实现的类没有名字</span></span><br><span class="line">        myMath.mySum(<span class="keyword">new</span> Compute() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> a+b;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Compute</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ComputeImpl</span> <span class="keyword">implements</span> <span class="title">Compute</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyMath</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mySum</span><span class="params">(Compute c, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res = c.sum(x, y);</span><br><span class="line">        System.out.println(x + <span class="string">&quot;+&quot;</span> + y + <span class="string">&quot;=&quot;</span> + res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【367-380】Object类</title>
      <link href="/2022/01/02/JavaSE/%E3%80%90367-380%E3%80%91Object%E7%B1%BB/"/>
      <url>/2022/01/02/JavaSE/%E3%80%90367-380%E3%80%91Object%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>一般类都默认继承 Object 类</p><h1 id="toString-方法"><a href="#toString-方法" class="headerlink" title="toString() 方法"></a>toString() 方法</h1><p>定义类后一般需要重写 toString() 方法  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(引用); </span><br><span class="line"><span class="comment">// 这里自动调用引用的 toString 方法</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_368_Object</span>中的<span class="title">toString</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Object o = <span class="keyword">new</span> Object();</span><br><span class="line">        System.out.println(o.toString());</span><br><span class="line">        <span class="comment">// 输出 java.lang.Object@1b6d3586</span></span><br><span class="line"></span><br><span class="line">        MyTime myTime = <span class="keyword">new</span> MyTime(<span class="number">2022</span>,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(myTime.toString());</span><br><span class="line">        System.out.println(myTime); <span class="comment">// 会直接调用myTime的toString方法</span></span><br><span class="line">        <span class="comment">// 输出 2022 1 2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// toString 一般建议重写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 返回对象的表示形式</span></span><br><span class="line"><span class="comment">* public String toString() &#123;</span></span><br><span class="line"><span class="comment">        return getClass().getName() + &quot;@&quot; + Integer.toHexString(hashCode());</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTime</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">MyTime</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyTime</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.year = year;</span><br><span class="line">        <span class="keyword">this</span>.month = month;</span><br><span class="line">        <span class="keyword">this</span>.day = day;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.year + <span class="string">&quot; &quot;</span> + <span class="keyword">this</span>.month + <span class="string">&quot; &quot;</span> + <span class="keyword">this</span>.day;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="equals-方法"><a href="#equals-方法" class="headerlink" title="equals() 方法"></a>equals() 方法</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>定义类后一般需要重写 equals() 方法<br>自带的 equals() 使用双等号，原理是比较内存地址<br>基本数据类型使用： “ == “<br>引用数据类型使用： “equals” 方法   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_370_Object</span>类的<span class="title">equals</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        new Object();</span></span><br><span class="line">        <span class="comment">// 判断基本数据类型数据是否相等</span></span><br><span class="line">        <span class="comment">// 使用 “==”</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// true</span></span><br><span class="line">        System.out.println(a == b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断两个java对象是否相等</span></span><br><span class="line">        <span class="comment">// 使用 equals 方法</span></span><br><span class="line">        MyTime1 myTimeA = <span class="keyword">new</span> MyTime1(<span class="number">2022</span>,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        MyTime1 myTimeB = <span class="keyword">new</span> MyTime1(<span class="number">2022</span>,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        <span class="comment">// &quot;==&quot; 是判断两个对象的&quot;内存地址&quot;是否相等</span></span><br><span class="line">        <span class="comment">// 所以是 false</span></span><br><span class="line">        System.out.println(myTimeA == myTimeB);</span><br><span class="line">        <span class="comment">// 默认 equals() 方法同 &quot;==&quot;</span></span><br><span class="line">        <span class="comment">// 所以 equals 需要重写，进而判断类中 &quot;内容&quot; 是否相等</span></span><br><span class="line">        System.out.println(myTimeA.equals(myTimeB));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果是 null</span></span><br><span class="line">        MyTime1 myTimeC = <span class="keyword">null</span>;</span><br><span class="line">        System.out.println(myTimeA.equals(myTimeC));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 判断了两个对象是否相等</span></span><br><span class="line"><span class="comment">public boolean equals(Object obj) &#123;</span></span><br><span class="line"><span class="comment">    return (this == obj);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTime1</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">MyTime1</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyTime1</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.year = year;</span><br><span class="line">        <span class="keyword">this</span>.month = month;</span><br><span class="line">        <span class="keyword">this</span>.day = day;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.year + <span class="string">&quot; &quot;</span> + <span class="keyword">this</span>.month + <span class="string">&quot; &quot;</span> + <span class="keyword">this</span>.day;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 空指针 || 无父子关系</span></span><br><span class="line">        <span class="keyword">if</span>(obj == <span class="keyword">null</span> || !(obj <span class="keyword">instanceof</span> MyTime1)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">// 内存地址相同</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span> == obj) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">// 内容判断</span></span><br><span class="line">        MyTime1 mt = (MyTime1)obj;</span><br><span class="line">        <span class="keyword">return</span> mt.year == <span class="keyword">this</span>.year &amp;&amp; mt.month == <span class="keyword">this</span>.month &amp;&amp; mt.day == <span class="keyword">this</span>.day;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IDEA生成equals-方法"><a href="#IDEA生成equals-方法" class="headerlink" title="IDEA生成equals()方法"></a>IDEA生成equals()方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_373_IDEA</span>生成<span class="title">equals</span>方法 </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTime2</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyTime2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyTime2</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.year = year;</span><br><span class="line">        <span class="keyword">this</span>.month = month;</span><br><span class="line">        <span class="keyword">this</span>.day = day;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;MyTime2&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;year=&quot;</span> + year +</span><br><span class="line">                <span class="string">&quot;, month=&quot;</span> + month +</span><br><span class="line">                <span class="string">&quot;, day=&quot;</span> + day +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == o) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">null</span> || getClass() != o.getClass()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        MyTime2 myTime2 = (MyTime2) o;</span><br><span class="line">        <span class="keyword">return</span> year == myTime2.year &amp;&amp; month == myTime2.month &amp;&amp; day == myTime2.day;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hash(year, month, day);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重写Object类的equals方法"><a href="#重写Object类的equals方法" class="headerlink" title="重写Object类的equals方法"></a>重写Object类的equals方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_375_</span>重写<span class="title">Object</span>类的<span class="title">equals</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student(<span class="number">123</span>, <span class="string">&quot;cc&quot;</span>);</span><br><span class="line">        Student s2 = <span class="keyword">new</span> Student(<span class="number">123</span>, <span class="string">&quot;cc&quot;</span>);</span><br><span class="line">        System.out.println(s1.equals(s2)); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">        Student s3 = <span class="keyword">new</span> Student(<span class="number">111</span>, <span class="keyword">new</span> String(<span class="string">&quot;cc&quot;</span>));</span><br><span class="line">        Student s4 = <span class="keyword">new</span> Student(<span class="number">111</span>, <span class="keyword">new</span> String(<span class="string">&quot;cc&quot;</span>));</span><br><span class="line">        System.out.println(s3.equals(s4)); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    String school;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(<span class="keyword">int</span> id, String school)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.school = school;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, school=&#x27;&quot;</span> + school + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == o) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">null</span> || getClass() != o.getClass()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        Student student = (Student) o;</span><br><span class="line">        <span class="keyword">return</span> id == student.id &amp;&amp; Objects.equals(school, student.school);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="重写equals方法要彻底"><a href="#重写equals方法要彻底" class="headerlink" title="重写equals方法要彻底"></a>重写equals方法要彻底</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 总结 重写 equals 方法要彻底</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_377_equals</span>方法深层次理解 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        User s1 = <span class="keyword">new</span> User(<span class="string">&quot;zhangsan&quot;</span>, <span class="keyword">new</span> Address(<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;大兴区&quot;</span>, <span class="string">&quot;111&quot;</span>));</span><br><span class="line">        User s2 = <span class="keyword">new</span> User(<span class="string">&quot;zhangsan&quot;</span>, <span class="keyword">new</span> Address(<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;大兴区&quot;</span>, <span class="string">&quot;111&quot;</span>));</span><br><span class="line">        System.out.println(s1.equals(s2));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    Address addr;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name, Address addr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.addr = addr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写equals方法</span></span><br><span class="line">    <span class="comment">// 规则，用户名和家庭住址都相同</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == o) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">null</span> || !(o <span class="keyword">instanceof</span> User)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        User user = (User) o;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name.equals(user.name)</span><br><span class="line">                &amp;&amp; <span class="keyword">this</span>.addr.equals(user.addr); <span class="comment">// 这里由于没有重写Address.equals,所以用的是Object类中的equals方法，双等号比较</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Address</span></span>&#123;</span><br><span class="line">    String city;</span><br><span class="line">    String street;</span><br><span class="line">    String zipcode;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Address</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Address</span><span class="params">(String city, String street, String zipcode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.city = city;</span><br><span class="line">        <span class="keyword">this</span>.street = street;</span><br><span class="line">        <span class="keyword">this</span>.zipcode = zipcode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 这里没有重写equals方法</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="String类重写了toString和equals"><a href="#String类重写了toString和equals" class="headerlink" title="String类重写了toString和equals"></a>String类重写了toString和equals</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_374_String</span>类重写了<span class="title">toString</span>和<span class="title">equals</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str1 = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">        String str2 = <span class="string">&quot;ABC&quot;</span>;</span><br><span class="line"></span><br><span class="line">        String str3 = <span class="keyword">new</span> String(<span class="string">&quot;Test1&quot;</span>);</span><br><span class="line">        String str4 = <span class="keyword">new</span> String(<span class="string">&quot;Test1&quot;</span>);</span><br><span class="line">        <span class="comment">// 比较内存地址 false</span></span><br><span class="line">        System.out.println(str3 == str4);</span><br><span class="line">        <span class="comment">// String重写了equals方法 true</span></span><br><span class="line">        System.out.println(str3.equals(str4));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// String 重写了 toString 方法</span></span><br><span class="line">        <span class="comment">// 如果没重写就是调用 Object 默认的toString，得到类名+&quot;@&quot;+hashcode</span></span><br><span class="line">        System.out.println(str3.toString());</span><br><span class="line">        System.out.println(str3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="finalize-方法"><a href="#finalize-方法" class="headerlink" title="finalize() 方法"></a>finalize() 方法</h1><p>源代码是：  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">finalize</span><span class="params">()</span> <span class="keyword">throws</span> Throwable </span>&#123; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个方法不需要手动调用，JVM垃圾回收器负责调用，一般finalize()只需要重写；  </p><p>静态代码块在类加载执行一次，在准备类的时机加载；<br>finalize()也是时机，是在垃圾回收时机；  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_379_Object</span>的<span class="title">finalize</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person person = <span class="keyword">new</span> Person();</span><br><span class="line">        <span class="comment">// 如何变成垃圾</span></span><br><span class="line">        person = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 这里没有启动垃圾回收器，原因：垃圾太少，时间没到..</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 于是多造一点...</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">500000</span>; i++) &#123;</span><br><span class="line">            Person person1 = <span class="keyword">new</span> Person();</span><br><span class="line">            person1 = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 建议垃圾回收器启动</span></span><br><span class="line">        System.gc();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">extends</span> <span class="title">Object</span></span>&#123;</span><br><span class="line">    <span class="comment">// java13后这个方法过时了</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">finalize</span><span class="params">()</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="keyword">this</span> + <span class="string">&quot;即将被销毁&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="hashCode-方法"><a href="#hashCode-方法" class="headerlink" title="hashCode() 方法"></a>hashCode() 方法</h1><p>源码  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>hashCode() 方法返回的是哈希码:<br>实际上就是一个java对象的内存地址，经过哈希算法，得出的一个值。所以hashcode ()方法的执行结果可以等同看做一个java对象的内存地址。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_380_Object</span>的<span class="title">hashCode</span>方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Object o = <span class="keyword">new</span> Object();</span><br><span class="line">        System.out.println(o.hashCode());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【365-366】访问控制权限</title>
      <link href="/2022/01/02/JavaSE/%E3%80%90365-366%E3%80%91%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%9D%83%E9%99%90/"/>
      <url>/2022/01/02/JavaSE/%E3%80%90365-366%E3%80%91%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_365_</span>访问控制权限 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="comment">// private 只能在本类中使用</span></span><br><span class="line">        <span class="comment">// System.out.println(user.id);</span></span><br><span class="line">        System.out.println(user.age);</span><br><span class="line">        System.out.println(user.name);</span><br><span class="line">        System.out.println(user.weight);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> weight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1、访问控制权限都有哪些?</span></span><br><span class="line"><span class="comment">    4个。</span></span><br><span class="line"><span class="comment">    private私有</span></span><br><span class="line"><span class="comment">    public公开</span></span><br><span class="line"><span class="comment">    protected受保护</span></span><br><span class="line"><span class="comment">    默认</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2、以上的4个访问控制权限:控制的范围是什么?</span></span><br><span class="line"><span class="comment">    private     表示私有的,只能在本类中访问</span></span><br><span class="line"><span class="comment">    public      表示公开的,在任何位置都可以访问</span></span><br><span class="line"><span class="comment">    默认         表示只能在本类，以及同包下访问。</span></span><br><span class="line"><span class="comment">    protected   表示只能在本类、同包、子类中访问。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">访问控制修饰符     本类      同包      子类      任意位置</span></span><br><span class="line"><span class="comment">------------------------------------------------------</span></span><br><span class="line"><span class="comment">public          可以      可以      可以      可以</span></span><br><span class="line"><span class="comment">protected       可以      可以      可以      不行</span></span><br><span class="line"><span class="comment">默认             可以      可以      不行      不行</span></span><br><span class="line"><span class="comment">private         可以      不行      不行      不行</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这个不要死记硬背，自己下去之后编写代码自己测试。</span></span><br><span class="line"><span class="comment">范围从大到小排序: public &gt; protected &gt; 默认 &gt; private</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3、访问控制权限修饰符可以修饰什么?</span></span><br><span class="line"><span class="comment">属性  (4个都能用)</span></span><br><span class="line"><span class="comment">方法  (4个都能用)</span></span><br><span class="line"><span class="comment">类    (public和默认能用,其它不行)</span></span><br><span class="line"><span class="comment">接口  (public和默认能用，其它不行)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* */</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【358-364】包和import</title>
      <link href="/2022/01/01/JavaSE/%E3%80%90358-364%E3%80%91%E5%8C%85%E5%92%8Cimport/"/>
      <url>/2022/01/01/JavaSE/%E3%80%90358-364%E3%80%91%E5%8C%85%E5%92%8Cimport/</url>
      
        <content type="html"><![CDATA[<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_362_</span>总结<span class="title">package</span>和<span class="title">import</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">1、package</span></span><br><span class="line"><span class="comment">    第一: package 出现在 java 源文件第一行</span></span><br><span class="line"><span class="comment">    第二: 带有包名怎么编译? javac -d . xxx.java</span></span><br><span class="line"><span class="comment">    第三: 怎么运行? java完整类名</span></span><br><span class="line"><span class="comment">2、import</span></span><br><span class="line"><span class="comment">    import什么时候不需要?</span></span><br><span class="line"><span class="comment">        java.lang不需要。</span></span><br><span class="line"><span class="comment">        同包下不需要。</span></span><br><span class="line"><span class="comment">        其它一律都需要</span></span><br><span class="line"><span class="comment">    怎么用?</span></span><br><span class="line"><span class="comment">        import完整类名;</span></span><br><span class="line"><span class="comment">        import包名.*;</span></span><br><span class="line"><span class="comment">        *代表一个类名，java.*不被允许，要一直import一个具体包名。</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="解释Scanner"><a href="#解释Scanner" class="headerlink" title="解释Scanner"></a>解释Scanner</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_361_</span>解释<span class="title">Scanner</span> </span>&#123;</span><br><span class="line">    <span class="comment">// String 为什么不需要导包？</span></span><br><span class="line">    <span class="comment">// String 在 java.lang.*; 包下，不需要 import 导入</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 同一个包下可以不用导包</span></span><br><span class="line">        <span class="comment">// 要用另一个包下的类需要import</span></span><br><span class="line">        <span class="comment">// import后方便编写代码</span></span><br><span class="line">        <span class="comment">// java.util.Scanner scanner = new java.util.Scanner(System.in);</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        String str = scanner.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;str = &quot;</span> + str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【334-357】抽象类和接口</title>
      <link href="/2021/12/31/JavaSE/%E3%80%90334-357%E3%80%91%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3/"/>
      <url>/2021/12/31/JavaSE/%E3%80%90334-357%E3%80%91%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h1><h2 id="抽象类的理解"><a href="#抽象类的理解" class="headerlink" title="抽象类的理解"></a>抽象类的理解</h2><p>这里先放一个图片…<br><img src="/images/JavaSE/_334_%E6%8A%BD%E8%B1%A1%E7%B1%BB%E7%9A%84%E7%90%86%E8%A7%A3.png"></p><h2 id="抽象类属于什么数据类型？"><a href="#抽象类属于什么数据类型？" class="headerlink" title="抽象类属于什么数据类型？"></a>抽象类属于什么数据类型？</h2><p>抽象类属于引用数据类型</p><h2 id="抽象类怎么定义？"><a href="#抽象类怎么定义？" class="headerlink" title="抽象类怎么定义？"></a>抽象类怎么定义？</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 抽象类的定义：</span></span><br><span class="line"><span class="comment">[修饰符列表] abstract class 类名&#123;</span></span><br><span class="line"><span class="comment">    类体</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抽象类无法实例化对象"><a href="#抽象类无法实例化对象" class="headerlink" title="抽象类无法实例化对象"></a>抽象类无法实例化对象</h2><p>所以是用来被子类继承的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_335_</span>抽象类无法实例化但有构造方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* A是抽象的; 无法实例化</span></span><br><span class="line"><span class="comment">        new A();</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="final-和-abstract-不能联用"><a href="#final-和-abstract-不能联用" class="headerlink" title="final 和 abstract 不能联用"></a>final 和 abstract 不能联用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">非法的修饰符组合 final &amp; abstract</span></span><br><span class="line"><span class="comment">final abstract class A&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="抽象类的子类可以是抽象类"><a href="#抽象类的子类可以是抽象类" class="headerlink" title="抽象类的子类可以是抽象类"></a>抽象类的子类可以是抽象类</h2><p>也可以是非抽象类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">子类B继承抽象类A，B可以被实例化</span></span><br><span class="line"><span class="comment">class B extends A&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">抽象类的子类可以是抽象类</span></span><br><span class="line"><span class="comment">abstract class B extends A&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="抽象类无法实例化，但有构造方法"><a href="#抽象类无法实例化，但有构造方法" class="headerlink" title="抽象类无法实例化，但有构造方法"></a>抽象类无法实例化，但有构造方法</h2><p>构造方法是供子类实现的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">A</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抽象方法表示没有实现的方法"><a href="#抽象方法表示没有实现的方法" class="headerlink" title="抽象方法表示没有实现的方法"></a>抽象方法表示没有实现的方法</h2><p>特点1：没有方法体，以分号结尾；<br>特点2：修饰符有abstract；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抽象类不一定有抽象方法，抽象方法必须出现在抽象类中"><a href="#抽象类不一定有抽象方法，抽象方法必须出现在抽象类中" class="headerlink" title="抽象类不一定有抽象方法，抽象方法必须出现在抽象类中"></a>抽象类不一定有抽象方法，抽象方法必须出现在抽象类中</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">抽象方法必须出现在抽象类中</span></span><br><span class="line"><span class="comment">class C&#123;</span></span><br><span class="line"><span class="comment">    public abstract void test();</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="非抽象类继承抽象类，必须将抽象类中的方法实现"><a href="#非抽象类继承抽象类，必须将抽象类中的方法实现" class="headerlink" title="非抽象类继承抽象类，必须将抽象类中的方法实现"></a>非抽象类继承抽象类，必须将抽象类中的方法实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_338_</span>非抽象类继承抽象类必须将抽象方法实现 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 使用多态</span></span><br><span class="line">        <span class="comment">// 父类型的引用指向子类型对象</span></span><br><span class="line">        <span class="comment">// 面向抽象编程：</span></span><br><span class="line">        <span class="comment">//      降低程序耦合度</span></span><br><span class="line">        <span class="comment">//      提高程序扩展力</span></span><br><span class="line">        <span class="comment">//      这种编程思想符合OCT原则</span></span><br><span class="line">        Animal a = <span class="keyword">new</span> Bird();</span><br><span class="line">        <span class="comment">// move()方法</span></span><br><span class="line">        <span class="comment">// 编译的时候是Animal的</span></span><br><span class="line">        <span class="comment">// 运行的时候是Bird的</span></span><br><span class="line">        a.move();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">die</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 非抽象类继承抽象类需要实现抽象类中的抽象方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bird</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;flying~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽象类继承抽象类可以继承父类的抽象方法</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Bird2</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Java没有方法体的方法都是抽象方法？"><a href="#Java没有方法体的方法都是抽象方法？" class="headerlink" title="Java没有方法体的方法都是抽象方法？"></a>Java没有方法体的方法都是抽象方法？</h2><p>答：不是。<br>Object类中有方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>底层调用C++的动态链接库，表示调用JVM本地程序</p><h1 id="接口的基础语法"><a href="#接口的基础语法" class="headerlink" title="接口的基础语法"></a>接口的基础语法</h1><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1、接口是一种“引用数据类型”<br>2、接口是完全抽象的。<br>3、接口怎么定义:[修饰符列表] interface 接口名{}<br>4、接口支持多继承。<br>5、接口中只有常量+抽象方法<br>6、接口中所有的元素都是pub1ic修饰的<br>7、接口中抽象方法的public abstract可以省略。<br>8、接口中常量的public static final可以省略。<br>9、接口中方法不能有方法体。<br>10、一个非抽象的类，实现接口的时候，必须将接口中所有方法加以实现。<br>11、一个类可以实现多个接口-<br>12、extends和implements可以共存，extends在前，implements在后。<br>13、使用接口，写代码的时候，可以使用多态（父类型引用指向子类型对象）。  </p><h2 id="接口属于什么数据类型？"><a href="#接口属于什么数据类型？" class="headerlink" title="接口属于什么数据类型？"></a>接口属于什么数据类型？</h2><p>引用数据类型，编译生成.class字节码文件</p><h2 id="接口是完全抽象的"><a href="#接口是完全抽象的" class="headerlink" title="接口是完全抽象的"></a>接口是完全抽象的</h2><p>抽象类是半抽象的，或者说接口是特殊的抽象类。</p><h2 id="接口怎么定义"><a href="#接口怎么定义" class="headerlink" title="接口怎么定义"></a>接口怎么定义</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// [修饰符列表] interface 接口名&#123;&#125;</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">C</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口支持多继承"><a href="#接口支持多继承" class="headerlink" title="接口支持多继承-"></a>接口支持多继承-</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">C</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">D</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接口支持多继承</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">E</span> <span class="keyword">extends</span> <span class="title">C</span>,<span class="title">D</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口中只有常量-抽象方法。"><a href="#接口中只有常量-抽象方法。" class="headerlink" title="接口中只有常量+抽象方法。"></a>接口中只有常量+抽象方法。</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Math1</span></span>&#123;</span><br><span class="line">    <span class="comment">// 常量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PI = <span class="number">3.1415</span>;</span><br><span class="line">    <span class="comment">// 抽象方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口中所有的元素都是public修饰的"><a href="#接口中所有的元素都是public修饰的" class="headerlink" title="接口中所有的元素都是public修饰的"></a>接口中所有的元素都是public修饰的</h2><p>都是公开的。</p><h2 id="接口中抽象方法的public-abstract可以省略"><a href="#接口中抽象方法的public-abstract可以省略" class="headerlink" title="接口中抽象方法的public abstract可以省略"></a>接口中抽象方法的public abstract可以省略</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Math1</span></span>&#123;</span><br><span class="line">    <span class="comment">// 接口当中都是抽象方法</span></span><br><span class="line">    <span class="comment">// public abstract 可以省略</span></span><br><span class="line">    <span class="comment">// public abstract int sum(int a, int b);</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口中常量的public-static-final可以省略"><a href="#接口中常量的public-static-final可以省略" class="headerlink" title="接口中常量的public static final可以省略"></a>接口中常量的public static final可以省略</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Math1</span></span>&#123;</span><br><span class="line">    <span class="comment">// 常量</span></span><br><span class="line">    <span class="comment">// public static final可以省略</span></span><br><span class="line">    <span class="comment">// public static final double PI = 3.1415;</span></span><br><span class="line">    <span class="keyword">double</span> PI = <span class="number">3.1415</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口中方法不能有方法体"><a href="#接口中方法不能有方法体" class="headerlink" title="接口中方法不能有方法体"></a>接口中方法不能有方法体</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Math1</span></span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    接口抽象方法不能有方法体，毕竟是抽象的</span></span><br><span class="line"><span class="comment">    int add()&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类实现接口要实现所有方法"><a href="#类实现接口要实现所有方法" class="headerlink" title="类实现接口要实现所有方法"></a>类实现接口要实现所有方法</h2><p>使用implements关键字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_345_</span>类实现接口要实现所有方法 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Math2</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> PI = <span class="number">3.1415</span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽象类继承，不实现方法也可行</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Math2Impl2</span> <span class="keyword">implements</span> <span class="title">Math2</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 非抽象类implements接口需要实现接口中所有的方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Math2Impl</span> <span class="keyword">implements</span> <span class="title">Math2</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a - b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口中的方法都是public的，类实现时修饰符只能写public"><a href="#接口中的方法都是public的，类实现时修饰符只能写public" class="headerlink" title="接口中的方法都是public的，类实现时修饰符只能写public"></a>接口中的方法都是public的，类实现时修饰符只能写public</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_346_</span>接口中的方法都是<span class="title">public</span>的 </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Math3</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> PI = <span class="number">3.1415</span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 非抽象类implements接口需要实现接口中所有的方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Math2Impl3</span> <span class="keyword">implements</span> <span class="title">Math3</span></span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    接口中的方法是public，</span></span><br><span class="line"><span class="comment">    这里的修饰符访问权限只能更高，</span></span><br><span class="line"><span class="comment">    也就是public</span></span><br><span class="line"><span class="comment">    @Override</span></span><br><span class="line"><span class="comment">    int sum(int a, int b) &#123;</span></span><br><span class="line"><span class="comment">        return a + b;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a - b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口和多态的联合使用"><a href="#接口和多态的联合使用" class="headerlink" title="接口和多态的联合使用"></a>接口和多态的联合使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_347_</span>接口和多态的联合使用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 面向接口编程</span></span><br><span class="line">        Math4 p = <span class="keyword">new</span> Math2Impl4();</span><br><span class="line">        <span class="comment">// 调用接口里面的方法</span></span><br><span class="line">        System.out.println(p.sum(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">        System.out.println(p.sub(<span class="number">3</span>,<span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Math4</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> PI = <span class="number">3.1415</span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Math2Impl4</span> <span class="keyword">implements</span> <span class="title">Math4</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a - b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一个类可以实现多个接口"><a href="#一个类可以实现多个接口" class="headerlink" title="一个类可以实现多个接口"></a>一个类可以实现多个接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_348_</span>一个类可以实现多个接口 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 多态的使用</span></span><br><span class="line">        F f = <span class="keyword">new</span> H();</span><br><span class="line">        G g = <span class="keyword">new</span> H();</span><br><span class="line">        f.m1();</span><br><span class="line">        <span class="comment">// 强制转换，有继承关系强转</span></span><br><span class="line">        ( (G)f ).m2();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// --------------------------</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 接口之间强制转化在没有继承关系下也可以</span></span><br><span class="line">        <span class="comment">// 但是运行时可能会出现ClassCastException异常</span></span><br><span class="line">        <span class="comment">// 编译没问题，运行有问题</span></span><br><span class="line">        J j = <span class="keyword">new</span> K();</span><br><span class="line">        I i = (I)j;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转型建议加判断</span></span><br><span class="line">        <span class="keyword">if</span>(j <span class="keyword">instanceof</span> K)&#123;</span><br><span class="line">            I ii = (I)j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">F</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">m1</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">G</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">m2</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个类可以实现 多个接口</span></span><br><span class="line"><span class="comment">// 需要实现所有方法</span></span><br><span class="line"><span class="comment">// 弥补单继承的缺陷</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">H</span> <span class="keyword">implements</span> <span class="title">F</span>, <span class="title">G</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">m1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;m1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">m2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;m2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">I</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">J</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">K</span> <span class="keyword">implements</span> <span class="title">J</span></span>&#123;&#125;;</span><br></pre></td></tr></table></figure><h2 id="extends和implements同时出现"><a href="#extends和implements同时出现" class="headerlink" title="extends和implements同时出现"></a>extends和implements同时出现</h2><p>extends 在前 implements 在后</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_349_extends</span>和<span class="keyword">implements</span>同时出现 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Flyable f1 = <span class="keyword">new</span> Cat();</span><br><span class="line">        f1.fly();</span><br><span class="line"></span><br><span class="line">        Flyable f2 = <span class="keyword">new</span> Pig();</span><br><span class="line">        f2.fly();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal1</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可飞翔的接口</span></span><br><span class="line"><span class="comment">// 能插拔的接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Flyable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// extends 在前 implements 在后</span></span><br><span class="line"><span class="comment">// 给 猫类 继承 动物类 再插上 Flyable 接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal1</span> <span class="keyword">implements</span> <span class="title">Flyable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;cat flying~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 蛇类，不飞，就不插 Flyable 接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Snake</span> <span class="keyword">extends</span> <span class="title">Animal1</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 想飞就插接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pig</span> <span class="keyword">extends</span> <span class="title">Animal1</span> <span class="keyword">implements</span> <span class="title">Flyable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;pig flying~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不写extends默认继承Object类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fish</span> /*<span class="keyword">extends</span> <span class="title">Object</span>*/ <span class="keyword">implements</span> <span class="title">Flyable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;fish flying~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="接口在开发中的作用"><a href="#接口在开发中的作用" class="headerlink" title="接口在开发中的作用"></a>接口在开发中的作用</h1><h2 id="解耦合！！！"><a href="#解耦合！！！" class="headerlink" title="解耦合！！！"></a>解耦合！！！</h2><p>最先定下接口<br>然后<br>调用者调用接口<br>实现者实现接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_351_</span>接口在开发中的作用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建厨师对象</span></span><br><span class="line">        Menu chinaChef = <span class="keyword">new</span> ChinaChef();</span><br><span class="line">        <span class="comment">// 创建顾客对象 传入中国厨师的菜单</span></span><br><span class="line">        Customer customer = <span class="keyword">new</span> Customer(chinaChef);</span><br><span class="line">        <span class="comment">// 顾客点菜</span></span><br><span class="line">        customer.order();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 改成西餐</span></span><br><span class="line">        Menu americaChef = <span class="keyword">new</span> AmericaChef();</span><br><span class="line">        customer = <span class="keyword">new</span> Customer(americaChef);</span><br><span class="line">        customer.order();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* **解耦合**</span></span><br><span class="line"><span class="comment">* 接口的使用离不开多态</span></span><br><span class="line"><span class="comment">* 降低程序的耦合度，提高程序扩展力，符合OCP开发原则</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Customer</span></span>&#123;</span><br><span class="line">    <span class="comment">// ***面向接口编程</span></span><br><span class="line">    <span class="comment">// Menu中可以有 ChinaChef 或 AmericaChef 做的 food</span></span><br><span class="line">    <span class="comment">// 属性私有化必定养成习惯 get set</span></span><br><span class="line">    <span class="keyword">private</span> Menu menu;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    这样写就把 Customer 吃的菜种类写死了</span></span><br><span class="line"><span class="comment">    1.</span></span><br><span class="line"><span class="comment">    ChinaChef cc;</span></span><br><span class="line"><span class="comment">    2.</span></span><br><span class="line"><span class="comment">    AmericaChef dd;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.menu = menu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Menu <span class="title">getMenu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> menu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.menu = menu;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点菜</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">order</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 先拿菜单</span></span><br><span class="line">        Menu menu = <span class="keyword">this</span>.getMenu();</span><br><span class="line">        <span class="comment">// 点菜</span></span><br><span class="line">        menu.food1();</span><br><span class="line">        menu.food2();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 菜单</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Menu</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">food1</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">food2</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 厨师实现菜单接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChinaChef</span> <span class="keyword">implements</span> <span class="title">Menu</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">food1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ChinaChef food1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">food2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ChinaChef food2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AmericaChef</span> <span class="keyword">implements</span> <span class="title">Menu</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">food1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;AmericaChef food1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">food2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;AmericaChef food2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类与类之间的关系"><a href="#类与类之间的关系" class="headerlink" title="类与类之间的关系"></a>类与类之间的关系</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_356_</span>类与类之间的关系 </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* is a, has a, like a</span></span><br><span class="line"><span class="comment">* is a:</span></span><br><span class="line"><span class="comment">*   Cat is a Animal</span></span><br><span class="line"><span class="comment">*   表示“继承关系”</span></span><br><span class="line"><span class="comment">*   A extends B&#123;&#125;</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* has a:</span></span><br><span class="line"><span class="comment">*   I has a pen</span></span><br><span class="line"><span class="comment">*   关联关系通常以“属性”形式存在</span></span><br><span class="line"><span class="comment">*   A&#123;</span></span><br><span class="line"><span class="comment">*       B b;</span></span><br><span class="line"><span class="comment">*   &#125;</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* like a:</span></span><br><span class="line"><span class="comment">*   Chef like a Menu</span></span><br><span class="line"><span class="comment">*   表示“实现关系”</span></span><br><span class="line"><span class="comment">*   类实现接口</span></span><br><span class="line"><span class="comment">*   A implements B&#123;&#125;</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* */</span></span><br></pre></td></tr></table></figure><h1 id="接口和抽象类在语法上的区别"><a href="#接口和抽象类在语法上的区别" class="headerlink" title="接口和抽象类在语法上的区别"></a>接口和抽象类在语法上的区别</h1><ul><li>在语法上的区别：</li><li></li><li>抽象类是版抽象的</li><li>接口是完全抽象的</li><li></li><li>抽象类中没有构造方法</li><li>接口中没有构造方法</li><li></li><li>接口和接口之间支持多继承</li><li>类和类之间只能单继承</li><li></li><li>一个类可以同时实现多个接口</li><li>一个抽象类只能继承一个类（单继承）</li><li></li><li>接口中只允许出现常量和抽象方法</li><li></li><li>  以后接口使用的比较多</li><li>  接口一般都是对“行为”的抽象</li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【327-333】Final修饰词</title>
      <link href="/2021/12/31/JavaSE/%E3%80%90327-333%E3%80%91Final%E4%BF%AE%E9%A5%B0%E8%AF%8D/"/>
      <url>/2021/12/31/JavaSE/%E3%80%90327-333%E3%80%91Final%E4%BF%AE%E9%A5%B0%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1、final修饰的类无法继承。<br>2、final修饰的方法无法覆盖。<br>3、final修饰的变量只能赋一次值。<br>4、final修饰的引用一旦指向某个对象，则不能再重新指向其它对象，但该引用指向的对象内部的数据是可以修改的。<br>5、final修饰的实例变量必须手动初始化，不能采用系统默认值。<br>6、final修饰的实例变量一般和static联合使用，称为常量。<br>public static final double PI = 3.1415926 ;</p><h1 id="Final-修饰的类无法继承"><a href="#Final-修饰的类无法继承" class="headerlink" title="Final 修饰的类无法继承"></a>Final 修饰的类无法继承</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Final</span>修饰的类无法继承 </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">final class A&#123;&#125;</span></span><br><span class="line"><span class="comment">class B extends A&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Final-修饰的方法无法覆盖"><a href="#Final-修饰的方法无法覆盖" class="headerlink" title="Final 修饰的方法无法覆盖"></a>Final 修饰的方法无法覆盖</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Final</span>修饰的方法无法覆盖 </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">class A&#123;</span></span><br><span class="line"><span class="comment">    public final void test()&#123;&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">class B extends A&#123;</span></span><br><span class="line"><span class="comment">    public void test()&#123;&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Final-修饰的局部变量"><a href="#Final-修饰的局部变量" class="headerlink" title="Final 修饰的局部变量"></a>Final 修饰的局部变量</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Final</span>修饰的局部变量 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">/* 只能赋值一次</span></span><br><span class="line"><span class="comment">        final int i = 100;</span></span><br><span class="line"><span class="comment">        i = 200;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Final-修饰引用"><a href="#Final-修饰引用" class="headerlink" title="Final 修饰引用"></a>Final 修饰引用</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Final</span>修饰引用 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 无法为最终变量p分配值</span></span><br><span class="line">        <span class="keyword">final</span> Person p = <span class="keyword">new</span> Person(<span class="number">30</span>); <span class="comment">// 地址0x111</span></span><br><span class="line"><span class="comment">//        p = new Person(); 地址0x123</span></span><br><span class="line"><span class="comment">//        p = null;</span></span><br><span class="line">        <span class="comment">// final 的引用指向某个对象</span></span><br><span class="line">        <span class="comment">// 但是内部的数据可以被修改</span></span><br><span class="line">        p.age = <span class="number">40</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Final-修饰实例变量"><a href="#Final-修饰实例变量" class="headerlink" title="Final 修饰实例变量"></a>Final 修饰实例变量</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Final</span>修饰实例变量 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="comment">// 1.</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> age = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">double</span> height;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">double</span> height)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 只要赶在系统给height赋默认值就行</span></span><br><span class="line">        <span class="comment">// height = 0，这个等号是在构造方法的时候赋值</span></span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_332_</span>常量 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chinese</span></span>&#123;</span><br><span class="line">    String idCard;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="comment">// 实例变量如果用final修饰，说明该实例变量不会随对象的变化而变换</span></span><br><span class="line">    <span class="comment">// final 修饰的实例变量一般添加 static 修饰</span></span><br><span class="line">    <span class="comment">// 每一次new都会占用内存，使用static随类的加载而生成，存放在方法区，节省内存</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String COUNTRY = <span class="string">&quot;中国&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyMath</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PI = <span class="number">3.1415926</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【DSU】洛谷 U41492 树上数颜色</title>
      <link href="/2021/11/04/ACM/%E3%80%90DSU%E3%80%91%E6%B4%9B%E8%B0%B7%20U41492%20%E6%A0%91%E4%B8%8A%E6%95%B0%E9%A2%9C%E8%89%B2/"/>
      <url>/2021/11/04/ACM/%E3%80%90DSU%E3%80%91%E6%B4%9B%E8%B0%B7%20U41492%20%E6%A0%91%E4%B8%8A%E6%95%B0%E9%A2%9C%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/U41492">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>给一棵根为1的树，每次询问子树颜色种类数；  </p><p>$DSU$ 模板题</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gg(x) cout &lt;&lt; #x &lt;&lt; <span class="meta-string">&quot;: &quot;</span> &lt;&lt; x &lt;&lt; <span class="meta-string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;int ,int &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">2e9</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MS = <span class="number">100009</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> sz[MS], zson[MS];</span><br><span class="line"><span class="keyword">int</span> S;</span><br><span class="line"><span class="keyword">int</span> cnt[MS], tot;</span><br><span class="line"><span class="keyword">int</span> ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f)&#123;</span><br><span class="line"><span class="built_in">dfs</span>(v, u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line"><span class="keyword">if</span>(sz[v] &gt; sz[zson[u]]) zson[u] = v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> f, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">cnt[a[u]] += val;</span><br><span class="line"><span class="keyword">if</span>(val == <span class="number">1</span> &amp;&amp; cnt[a[u]] == <span class="number">1</span>) ++tot;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(val == <span class="number">-1</span> &amp;&amp; cnt[a[u]] == <span class="number">0</span>) --tot;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f &amp;&amp; v != S)&#123;</span><br><span class="line"><span class="built_in">cal</span>(v, u, val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dsu</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> f, <span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f &amp;&amp; v != zson[u])&#123;</span><br><span class="line"><span class="built_in">dsu</span>(v, u, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(zson[u]) <span class="built_in">dsu</span>(zson[u], u, <span class="number">1</span>), S = zson[u];</span><br><span class="line"><span class="built_in">cal</span>(u, f, <span class="number">1</span>), S = <span class="number">0</span>;</span><br><span class="line">ac[u] = tot;</span><br><span class="line"><span class="keyword">if</span>(!w) <span class="built_in">cal</span>(u, f, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v; cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">dsu</span>(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">//for(int i=1;i&lt;=n;i++) cout &lt;&lt; ac[i] &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> x; cin &gt;&gt; x;</span><br><span class="line">cout &lt;&lt; ac[x] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DSU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【DSU 线段树】2019 ICPC 南昌 K-Tree</title>
      <link href="/2021/11/04/ACM/%E3%80%90DSU%20%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912019%20ICPC%20%E5%8D%97%E6%98%8C%20K-Tree/"/>
      <url>/2021/11/04/ACM/%E3%80%90DSU%20%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912019%20ICPC%20%E5%8D%97%E6%98%8C%20K-Tree/</url>
      
        <content type="html"><![CDATA[<p><a href="https://vjudge.net/contest/425655#problem/K">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>求树上有多少对点对 $(x,y)$ 满足：<br>&emsp; $1.$ $x != y$;<br>&emsp; $2.$ $(x,y)$ 不互为祖先;<br>&emsp; $3.$ $x$ 到 $y$ 的最短路径 $&lt;=k$;<br>&emsp; $4.$ $lca(x,y)$ 的权值是 $x$ 与 $y$ 权值之和;  </p><p>讨论每一个 $lca$，对于一个 $lca$ 维护好前 $i-1$ 棵子树的信息，遍历第 $i$ 棵树并通过以及维护好的信息更新答案；  </p><p>对每一个权值维护一棵线段树，线段树的下标是树的深度，对于一个点只需要查询对应权值和对应深度区间的点数即可；  </p><p>但是这样复杂度是 $n^2logn$ 的，所以用 $DSU$ 保留重儿子的信息优化复杂度至 $nlogn^2$；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gg(x) cout &lt;&lt; #x &lt;&lt; <span class="meta-string">&quot;: &quot;</span> &lt;&lt; x &lt;&lt; <span class="meta-string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;int ,int &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">2e9</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MS = <span class="number">100009</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> w[MS], sz[MS], zson[MS], dep[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> root[MS], tot;</span><br><span class="line">LL ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt) rt = ++tot;</span><br><span class="line">p[rt].sum += val;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">modify</span>(pos,l,m,p[rt].l,val);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">modify</span>(pos,m+<span class="number">1</span>,r,p[rt].r,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> &amp;rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R) <span class="keyword">return</span> p[rt].sum;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> cc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) cc += <span class="built_in">query</span>(L,R,l,m,p[rt].l);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) cc += <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,p[rt].r);</span><br><span class="line"><span class="keyword">return</span> cc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line">dep[u] = dep[f]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="built_in">dfs</span>(v, u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line"><span class="keyword">if</span>(sz[v] &gt; sz[zson[u]]) zson[u] = v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="built_in">modify</span>(dep[u],<span class="number">1</span>,n,root[w[u]],val);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u]) <span class="built_in">add</span>(v, val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> lca)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tar = w[lca]*<span class="number">2</span> - w[u];</span><br><span class="line"><span class="keyword">int</span> depl = dep[lca]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> depr = dep[lca]+(k-(dep[u]-dep[lca]));</span><br><span class="line">depr = <span class="built_in">min</span>(depr, n);</span><br><span class="line"><span class="keyword">if</span>(depl &lt;= depr &amp;&amp; <span class="number">0</span> &lt;= tar &amp;&amp; tar &lt;= n) ans += <span class="built_in">query</span>(depl,depr,<span class="number">1</span>,n,root[tar]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u]) <span class="built_in">cal</span>(v, lca);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dsu</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> op)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != zson[u]) <span class="built_in">dsu</span>(v, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(zson[u]) <span class="built_in">dsu</span>(zson[u], <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != zson[u]) <span class="built_in">cal</span>(v, u), <span class="built_in">add</span>(v, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">modify</span>(dep[u],<span class="number">1</span>,n,root[w[u]],<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(!op) <span class="built_in">add</span>(u, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; w[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x; cin &gt;&gt; x;</span><br><span class="line">vc[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">dsu</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">cout &lt;&lt; ans*<span class="number">2</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> DSU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【思维】2019 ICPC 徐州 M. Kill the tree</title>
      <link href="/2021/10/30/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%912019%20ICPC%20%E5%BE%90%E5%B7%9E%20M.%20Kill%20the%20tree/"/>
      <url>/2021/10/30/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%912019%20ICPC%20%E5%BE%90%E5%B7%9E%20M.%20Kill%20the%20tree/</url>
      
        <content type="html"><![CDATA[<p><a href="https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-42552">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>求所有子树的重心；  </p><p>&emsp; $1.$ 以 $u$ 为根节点的子树的重心，一定在 $u$ 的重儿子的重心到 $u$ 的路径上；<br>&emsp; $2.$ 一棵树的重心不会超过两个；  </p><p>对每一棵子树跳它重儿子的重心就可以了；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gg(x) cout &lt;&lt; #x &lt;&lt; <span class="meta-string">&quot;: &quot;</span> &lt;&lt; x &lt;&lt; <span class="meta-string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;int ,int &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">2e9</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MS = <span class="number">200009</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> sz[MS], zson[MS], fa[MS];</span><br><span class="line"><span class="keyword">int</span> zx[MS][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line">fa[u] = f;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f)&#123;</span><br><span class="line"><span class="built_in">dfs</span>(v, u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line"><span class="keyword">if</span>(sz[v] &gt; sz[zson[u]]) zson[u] = v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f) <span class="built_in">dfs2</span>(v, u);</span><br><span class="line">&#125;</span><br><span class="line">zx[u][<span class="number">0</span>] = u;</span><br><span class="line"><span class="keyword">if</span>(zson[u])&#123;</span><br><span class="line"><span class="keyword">int</span> t = zx[zson[u]][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">while</span>(sz[u]-sz[t]&gt;sz[t]) t = fa[t];</span><br><span class="line">zx[u][<span class="number">0</span>] = t;</span><br><span class="line"><span class="keyword">if</span>(sz[u]-sz[t] == sz[t]) zx[u][<span class="number">1</span>] = fa[t];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v; cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">dfs2</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!zx[i][<span class="number">1</span>]) cout &lt;&lt; zx[i][<span class="number">0</span>] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="built_in">min</span>(zx[i][<span class="number">0</span>],zx[i][<span class="number">1</span>]) &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="built_in">max</span>(zx[i][<span class="number">0</span>],zx[i][<span class="number">1</span>]) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【莫队】洛谷 P5268 一个简单的询问</title>
      <link href="/2021/10/25/ACM/%E3%80%90%E8%8E%AB%E9%98%9F%E3%80%91%E6%B4%9B%E8%B0%B7%20P5268%20%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%A2%E9%97%AE/"/>
      <url>/2021/10/25/ACM/%E3%80%90%E8%8E%AB%E9%98%9F%E3%80%91%E6%B4%9B%E8%B0%B7%20P5268%20%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%A2%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P5268">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>给一个数组，多次询问 $\sum_{x=0}^{\infty}get(l_1,r_1,x)·get(l_2,r_2,x)$，$get$ 是指区间 $[l,r]$ 中 $x$ 出现的次数；  </p><p>可以将式子转化变为 $[get(1,r_1,x)-get(1,l_1-1,x)]·[get(1,r_2,x)-get(1,l_2-1,x)]$，<br>再化开变为<br>$get(1,r_1,x)get(1,r_2,x)-get(1,l_1-1,x)get(1,r_2,x)-get(1,r_1,x)get(1,l_2-1,x)+get(1,l_1-1,x)get(1,l_2-1,x)$  </p><p>这样对每个式子跑莫队，4遍~  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gg(x) cout &lt;&lt; #x &lt;&lt; <span class="meta-string">&quot;: &quot;</span> &lt;&lt; x &lt;&lt; <span class="meta-string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 50009</span></span><br><span class="line"></span><br><span class="line">LL n,m,k,T;</span><br><span class="line">LL a[MS];</span><br><span class="line">LL ask[MS][<span class="number">4</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL l,r,id;</span><br><span class="line">&#125;tsk[MS];</span><br><span class="line">LL cnt[<span class="number">2</span>][MS];</span><br><span class="line">LL ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1, node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t1.l/T == t2.l/T) <span class="keyword">return</span> t1.r &lt; t2.r;</span><br><span class="line"><span class="keyword">return</span> t1.l &lt; t2.l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_tsk</span><span class="params">(LL l,LL r)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">tsk[i] = &#123;ask[i][l], ask[i][r], i&#125;;</span><br><span class="line"><span class="keyword">if</span>(tsk[i].l &gt; tsk[i].r) <span class="built_in">swap</span>(tsk[i].l, tsk[i].r);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(LL t, LL val, LL w, LL &amp;res)</span></span>&#123;</span><br><span class="line">res -= cnt[t][val]*cnt[t^<span class="number">1</span>][val];</span><br><span class="line">cnt[t][val] += w;</span><br><span class="line">res += cnt[t][val]*cnt[t^<span class="number">1</span>][val];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(LL t)</span></span>&#123;</span><br><span class="line"><span class="built_in">sort</span>(tsk+<span class="number">1</span>, tsk+m+<span class="number">1</span>, cmp);</span><br><span class="line"><span class="built_in">memset</span>(cnt, <span class="number">0</span>, <span class="keyword">sizeof</span> cnt);</span><br><span class="line">LL res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,L=<span class="number">0</span>,R=<span class="number">0</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(R &lt; tsk[i].r) <span class="built_in">modify</span>(<span class="number">1</span>, a[++R], <span class="number">1</span>, res);</span><br><span class="line"><span class="keyword">while</span>(R &gt; tsk[i].r) <span class="built_in">modify</span>(<span class="number">1</span>, a[R--],<span class="number">-1</span>, res);</span><br><span class="line"><span class="keyword">while</span>(L &lt; tsk[i].l) <span class="built_in">modify</span>(<span class="number">0</span>, a[++L], <span class="number">1</span>, res);</span><br><span class="line"><span class="keyword">while</span>(L &gt; tsk[i].l) <span class="built_in">modify</span>(<span class="number">0</span>, a[L--],<span class="number">-1</span>, res);</span><br><span class="line">ac[tsk[i].id] += t*res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n; T = <span class="built_in">sqrt</span>(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; a[i];</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++) cin &gt;&gt; ask[i][j];</span><br><span class="line">ask[i][<span class="number">0</span>]--, ask[i][<span class="number">2</span>]--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">init_tsk</span>(<span class="number">1</span>,<span class="number">3</span>); <span class="built_in">cal</span>( <span class="number">1</span>);</span><br><span class="line"><span class="built_in">init_tsk</span>(<span class="number">1</span>,<span class="number">2</span>); <span class="built_in">cal</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">init_tsk</span>(<span class="number">0</span>,<span class="number">3</span>); <span class="built_in">cal</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">init_tsk</span>(<span class="number">0</span>,<span class="number">2</span>); <span class="built_in">cal</span>( <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 莫队 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【点分治 DP】2017 CCPC Hangzhou E. Master of Subgraph</title>
      <link href="/2021/10/25/ACM/%E3%80%90%E7%82%B9%E5%88%86%E6%B2%BB%20DP%E3%80%912017%20CCPC%20Hangzhou%20E.%20Master%20of%20Subgraph/"/>
      <url>/2021/10/25/ACM/%E3%80%90%E7%82%B9%E5%88%86%E6%B2%BB%20DP%E3%80%912017%20CCPC%20Hangzhou%20E.%20Master%20of%20Subgraph/</url>
      
        <content type="html"><![CDATA[<p><a href="https://vjudge.net/problem/HDU-6268">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>给定一颗树，求是否存在某一连通子图的点权和等于 i；</p><p>点分治，求包含重心的连通子图的所有权值和；  </p><p>此时转化为树形DP问题，将重心作为根，因为是连通子图，所以若某一点被选择，那么它的父亲都要被选择；  </p><p>设 bitset&lt;m&gt; dp[i] 表示选择 i 号节点能得到得所有权值；  </p><p>转移公式： dp[u] = (dp[v1] | dp[v2] | … | dp[vk]) &lt;&lt; w[u]， v 是 u 的孩子节点；<br>注意 dfs 到当前 u 节点时，需要将根节点到 u 节点的路径和计算上；  </p><p>需要的信息就是 dp[root] 的信息，将 ans |= dp[root]；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gg(x) cout &lt;&lt; #x &lt;&lt; <span class="meta-string">&quot;: &quot;</span> &lt;&lt; x &lt;&lt; <span class="meta-string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;int ,int &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">2e9</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MS = <span class="number">3009</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> val[MS];</span><br><span class="line"><span class="keyword">int</span> w[MS], sz[MS], tr_size, rt;</span><br><span class="line"><span class="keyword">int</span> vis[MS];</span><br><span class="line">bitset&lt;100009&gt; dp[MS], ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_root</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line">w[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f &amp;&amp; !vis[v])&#123;</span><br><span class="line"><span class="built_in">get_root</span>(v,u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line">w[u] = <span class="built_in">max</span>(w[u], sz[v]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">w[u] = <span class="built_in">max</span>(w[u], tr_size-sz[u]);</span><br><span class="line"><span class="keyword">if</span>(w[u] &lt; w[rt]) rt = u;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">dp[u] &lt;&lt;= val[u];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f &amp;&amp; !vis[v])&#123;</span><br><span class="line">dp[v] = dp[u];</span><br><span class="line"><span class="built_in">dfs</span>(v, u);</span><br><span class="line">dp[u] |= dp[v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">vis[u] = <span class="number">1</span>;</span><br><span class="line">dp[u].<span class="built_in">reset</span>(); dp[u][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">dfs</span>(u, <span class="number">0</span>);</span><br><span class="line">ans |= dp[u];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f &amp;&amp; !vis[v])&#123;</span><br><span class="line">w[rt = <span class="number">0</span>] = tr_size = sz[v];</span><br><span class="line"><span class="built_in">get_root</span>(v, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">get_root</span>(rt, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">divide</span>(rt, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line">ans.<span class="built_in">reset</span>();</span><br><span class="line"><span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">vc[i].<span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v; cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; val[i];</span><br><span class="line">w[rt = <span class="number">0</span>] = tr_size = n;</span><br><span class="line"><span class="built_in">get_root</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">get_root</span>(rt, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">divide</span>(rt, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cout &lt;&lt; ans[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; ce;</span><br><span class="line"><span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> 点分治 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【思维】Codeforces Round 750 (Div. 2) F2. Korney Korneevich and XOR (hard version)</title>
      <link href="/2021/10/25/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%91Codeforces%20Round%20750%20(Div.%202)%20F2.%20Korney%20Korneevich%20and%20XOR%20(hard%20version)/"/>
      <url>/2021/10/25/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%91Codeforces%20Round%20750%20(Div.%202)%20F2.%20Korney%20Korneevich%20and%20XOR%20(hard%20version)/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.ml/contest/1582">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>这是 <a href="https://codeforces.ml/contest/1582/problem/F1">F1</a> 的数据加强版；  </p><p>定义一个严格上升子序列的 $f$ 值为该子序列的所有元素异或和，给定一个数组，求它的所有严格上升子序列能出现的 $f$ 值；  </p><p>一个严格上升的子序列有这样的性质，第 $i+1$ 个数要比第 $i$ 个数大，且位置要更靠后；  </p><p>始终维护两个数组：<br>&emsp; $vis[i]$ 表示 $i$ 这个值能否是某个子序列异或和；<br>&emsp; $pos[i]$ 表示异或出 $i$ 这个值的某个子序列末尾的最小位置；  </p><p>于是用 $vector[a_i]$ 记录给定数组 $a_i$ 的所有位置，在 $vector[a_i]$ 中是按照位置递增排序的；  </p><p>遍历每一个 $vector[i]$，考虑 $vis[[0,8192)]$ 是否存在，如果存在某个 $vis[j]$，$pos[j]$ 就是异或出 $j$ 这个值的某个子序列末尾的最小位置，二分查找 $vector[i]$ 中第一个大于 $pos[j]$ 的位置 $t$，如果存在的话那么 $vis[i \oplus j] = 1$ 并且更新 $pos[i \oplus j] = min(pos[i \oplus j], t)$；  </p><p>最后所有 $vis[i] = 1$ 的值都是能得到的；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MS = <span class="number">5001</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">8192</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> pos[MAXN];</span><br><span class="line"><span class="keyword">int</span> vis[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x; cin &gt;&gt; x;</span><br><span class="line">vc[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++) pos[i] = n+<span class="number">1</span>, vis[i] = <span class="number">0</span>;</span><br><span class="line">vis[<span class="number">0</span>] = <span class="number">1</span>, pos[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MS;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;MAXN;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[j])&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">lower_bound</span>(vc[i].<span class="built_in">begin</span>(), vc[i].<span class="built_in">end</span>(), pos[j]) - vc[i].<span class="built_in">begin</span>();</span><br><span class="line"><span class="keyword">if</span>(t &lt; vc[i].<span class="built_in">size</span>())&#123;</span><br><span class="line">vis[i^j] = <span class="number">1</span>;</span><br><span class="line">pos[i^j] = <span class="built_in">min</span>(pos[i^j], vc[i][t]);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++) <span class="keyword">if</span>(vis[i]) cnt++;</span><br><span class="line">cout &lt;&lt; cnt &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++) <span class="keyword">if</span>(vis[i]) cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【思维】Codeforces Round 750 (Div. 2) F1. Korney Korneevich and XOR (easy version)</title>
      <link href="/2021/10/25/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%91Codeforces%20Round%20750%20(Div.%202)%20F1.%20Korney%20Korneevich%20and%20XOR%20(easy%20version)/"/>
      <url>/2021/10/25/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%91Codeforces%20Round%20750%20(Div.%202)%20F1.%20Korney%20Korneevich%20and%20XOR%20(easy%20version)/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.ml/contest/1582">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>定义一个严格上升子序列的 $f$ 值为该子序列的所有元素异或和，给定一个数组，求它的所有严格上升子序列能出现的 $f$ 值；</p><p>一个严格上升的子序列有这样的性质，第 $i+1$ 个数要比第 $i$ 个数大，且位置要更靠后；  </p><p>考虑该数组的第 $i$ 个数字，如果我能知道前 $i-1$ 个数字组成的上升子序列能异或出哪些值，并且能知道异或出这些值所需要的上升子序列的最后一个值的最小值就好了，比如说序列 [2,4,6,5]，下标分别为 [1,2,3,4]，当 $i=4$ 时，前 $3$ 个数字能组成的子序列可得到 [0,2,4,6] 这些值，并且得到 0 的子序列的末尾最小值是 0，得到 2 的子序列的末尾最小值是 2，得到 4 的子序列的末尾最小值是 4，得到 6 的子序列的末尾最小值是 4 (由子序列[2,4]的到)；  </p><p>于是我记录前 $i$ 个数字能否得到 $w$，对应 $vis[w] = 1$，以及记录得到 $w$ 的子序列末尾最小值是 $x$，对应 $val[w] = x$；</p><p>那么对于第 $i$ 个数字，只需要遍历前 $i-1$ 个数组成的子序列可能异或出来的值 $w$，并判断 $vis[w]$ 是否存在，以及能组成 $w$ 的子序列的末尾最小值 $val[w]$ 是否小于第 $i$ 个数字，然后更新 $vis[]$ 和 $val[]$；</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gg(x) cout &lt;&lt; #x &lt;&lt; <span class="meta-string">&quot;: &quot;</span> &lt;&lt; x &lt;&lt; <span class="meta-string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;int ,int &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">2e9</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MS = <span class="number">100009</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="keyword">int</span> b[MS];</span><br><span class="line"><span class="keyword">int</span> vis[MS];</span><br><span class="line"><span class="keyword">int</span> val[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">512</span>;i++) val[i] = <span class="number">520</span>;</span><br><span class="line">vis[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">val[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">512</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[j] &amp;&amp; val[j] &lt; a[i])&#123;</span><br><span class="line">vis[j^a[i]] = <span class="number">1</span>;</span><br><span class="line">val[j^a[i]] = <span class="built_in">min</span>(val[j^a[i]], a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">512</span>;i++)&#123;</span><br><span class="line">cnt += vis[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; cnt &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">512</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[i]) cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【AC自动机 DP】The 16th Heilongjiang Provincial Collegiate Programming Contest E. Elastic Search</title>
      <link href="/2021/10/15/ACM/%E3%80%90AC%E8%87%AA%E5%8A%A8%E6%9C%BA%20DP%E3%80%91The%2016th%20Heilongjiang%20Provincial%20Collegiate%20Programming%20Contest%20E.%20Elastic%20Search/"/>
      <url>/2021/10/15/ACM/%E3%80%90AC%E8%87%AA%E5%8A%A8%E6%9C%BA%20DP%E3%80%91The%2016th%20Heilongjiang%20Provincial%20Collegiate%20Programming%20Contest%20E.%20Elastic%20Search/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.ml/gym/103107/problem/E">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>给定 $n$ 个字符串，如果串 $a$ 是串 $b$ 的子串，那么 $b$ 向 $a$ 连接一条有向边，求最长路径；  </p><p>对所有字符串构建 $AC$ 自动机，定义：<br>&emsp; $fa[u]$ 为字典树上 $u$ 节点的父亲；<br>&emsp; $fail[u]$ 为失配指针；<br>&emsp; $num[u]$ 表示以 $u$ 节点为结尾的有多少字符串；  </p><p>对字符串的每一个前缀进行 $dp$，也就是对字典树上每一个节点 $dp$；<br>对于一个字符串，走向下一个字符串要么就是去头，要么去尾；<br>于是转移公式 $dp[u]=max(dp[fa[u]],dp[fail[u]])+num[u]$；  </p><p>由于求 $fail$ 的时候会破坏原有字典树结构，$dp$ 又是在原有字典树结构上 $dp$ 的，所以重构一遍这个字典树或者新建一个就可以 $dp$ 了；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gg(x) cout &lt;&lt; #x &lt;&lt; <span class="meta-string">&quot;: &quot;</span> &lt;&lt; x &lt;&lt; <span class="meta-string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line"><span class="keyword">int</span> dic[MS][<span class="number">26</span>], fail[MS], num[MS], tot;</span><br><span class="line"><span class="keyword">int</span> dicc[MS][<span class="number">26</span>], fa[MS];</span><br><span class="line">queue&lt;<span class="keyword">int</span> &gt; Q;</span><br><span class="line"><span class="keyword">int</span> dp[MS], ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;s[i];i++)&#123;</span><br><span class="line"><span class="keyword">int</span> t = s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!dic[u][t]) ++tot, dic[u][t] = dicc[u][t] = tot, fa[tot] = u;</span><br><span class="line">u = dic[u][t];</span><br><span class="line">&#125;</span><br><span class="line">num[u]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_fail</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) <span class="keyword">if</span>(dic[<span class="number">0</span>][i]) Q.<span class="built_in">push</span>(dic[<span class="number">0</span>][i]);</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line"><span class="keyword">int</span> u = Q.<span class="built_in">front</span>(); Q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(dic[u][i]) fail[dic[u][i]] = dic[fail[u]][i], Q.<span class="built_in">push</span>(dic[u][i]);</span><br><span class="line"><span class="keyword">else</span> dic[u][i] = dic[fail[u]][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) <span class="keyword">if</span>(dicc[<span class="number">0</span>][i]) Q.<span class="built_in">push</span>(dicc[<span class="number">0</span>][i]);</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line"><span class="keyword">int</span> u = Q.<span class="built_in">front</span>(); Q.<span class="built_in">pop</span>();</span><br><span class="line">dp[u] = <span class="built_in">max</span>(dp[fa[u]],dp[fail[u]]) + num[u];</span><br><span class="line">ans = <span class="built_in">max</span>(ans,dp[u]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) <span class="keyword">if</span>(dicc[u][i]) Q.<span class="built_in">push</span>(dicc[u][i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; s+<span class="number">1</span>, <span class="built_in">insert</span>();</span><br><span class="line"><span class="built_in">init_fail</span>();</span><br><span class="line"><span class="built_in">bfs</span>();</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--) &#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> AC自动机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【莫队 线段树】2020-2021 Winter Petrozavodsk Camp, UPC contest E. Even Intervals</title>
      <link href="/2021/10/15/ACM/%E3%80%90%E8%8E%AB%E9%98%9F%20%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912020-2021%20Winter%20Petrozavodsk%20Camp,%20UPC%20contest%20E.%20Even%20Intervals/"/>
      <url>/2021/10/15/ACM/%E3%80%90%E8%8E%AB%E9%98%9F%20%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912020-2021%20Winter%20Petrozavodsk%20Camp,%20UPC%20contest%20E.%20Even%20Intervals/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.ml/gym/103098/problem/E">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>每次询问区间 $a_l \dots a_r$ 经过排序后的偶数位置上的和，下标从 $0$ 开始；  </p><p>莫队，权值线段树维护偶数位上的和；  </p><p>具体来说线段树上每个节点维护：{<br>&emsp; 偶数位，奇数位和；<br>&emsp; 数的个数；<br>}<br>这样 $push_up$ 也很方便了；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;int ,int &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 200009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,T;</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,id;</span><br><span class="line">&#125;ask[MS];</span><br><span class="line"><span class="keyword">int</span> ac[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tree</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> cnt,sum[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> root,tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1, node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (t1.l/T == t2.l/T) <span class="keyword">return</span> t1.r &lt; t2.r;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> t1.l &lt; t2.l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> &amp;rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> LS = p[rt].l, RS = p[rt].r;</span><br><span class="line">p[rt].cnt = p[LS].cnt + p[RS].cnt;</span><br><span class="line"><span class="keyword">if</span> (p[LS].cnt&amp;<span class="number">1</span>) p[rt].sum[<span class="number">0</span>] = p[LS].sum[<span class="number">0</span>] + p[RS].sum[<span class="number">1</span>], p[rt].sum[<span class="number">1</span>] = p[LS].sum[<span class="number">1</span>] + p[RS].sum[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> p[rt].sum[<span class="number">0</span>] = p[LS].sum[<span class="number">0</span>] + p[RS].sum[<span class="number">0</span>], p[rt].sum[<span class="number">1</span>] = p[LS].sum[<span class="number">1</span>] + p[RS].sum[<span class="number">1</span>];</span><br><span class="line">p[rt].sum[<span class="number">0</span>] %= mod, p[rt].sum[<span class="number">1</span>] %= mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> &amp;rt,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!rt) rt = ++tot;</span><br><span class="line"><span class="keyword">if</span> (l == r)&#123;</span><br><span class="line">p[rt].cnt += val;</span><br><span class="line"><span class="keyword">if</span> (!p[rt].cnt) p[rt].sum[<span class="number">0</span>] = <span class="number">0</span>, p[rt].sum[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> p[rt].sum[<span class="number">0</span>] = l, p[rt].sum[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (m &gt;= pos) <span class="built_in">modify</span>(pos,l,m,p[rt].l,val);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">modify</span>(pos,m+<span class="number">1</span>,r,p[rt].r,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line"><span class="built_in">modify</span>(a[index],<span class="number">0</span>,MAXN,root,<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line"><span class="built_in">modify</span>(a[index],<span class="number">0</span>,MAXN,root,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m; </span><br><span class="line">T = <span class="built_in">sqrt</span>(n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) cin &gt;&gt; ask[i].l &gt;&gt; ask[i].r, ask[i].id = i, ++ask[i].l, ++ask[i].r;</span><br><span class="line"><span class="built_in">sort</span>(ask+<span class="number">1</span>,ask+m+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>,L=<span class="number">1</span>,R=<span class="number">0</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">while</span> (L &lt; ask[i].l) <span class="built_in">remove</span>(L++);</span><br><span class="line"><span class="keyword">while</span> (L &gt; ask[i].l) <span class="built_in">add</span>(--L);</span><br><span class="line"><span class="keyword">while</span> (R &lt; ask[i].r) <span class="built_in">add</span>(++R);</span><br><span class="line"><span class="keyword">while</span> (R &gt; ask[i].r) <span class="built_in">remove</span>(R--);</span><br><span class="line">ac[ask[i].id] = p[root].sum[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span> (ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 莫队 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【字典树】洛谷 P4551 最长异或路径</title>
      <link href="/2021/10/15/ACM/%E3%80%90%E5%AD%97%E5%85%B8%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P4551%20%E6%9C%80%E9%95%BF%E5%BC%82%E6%88%96%E8%B7%AF%E5%BE%84/"/>
      <url>/2021/10/15/ACM/%E3%80%90%E5%AD%97%E5%85%B8%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P4551%20%E6%9C%80%E9%95%BF%E5%BC%82%E6%88%96%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4551">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>树上每条边都有一个权值，求最大异或路径的值；  </p><p>以 $1$ 为根，求 $i \in [1,n]$ 到 $1$ 的异或路径的值，对这些值建立 $01$ 字典树，对于每个值都在这颗字典树上查找与之异或最大的数即可；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> poi,val;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> sum[MS];</span><br><span class="line"><span class="keyword">int</span> dir[MS*<span class="number">30</span>][<span class="number">2</span>], tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span> (v.poi != f)&#123;</span><br><span class="line">sum[v.poi] = sum[u]^v.val;</span><br><span class="line"><span class="built_in">dfs</span>(v.poi,u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">30</span>,u=<span class="number">0</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">int</span> t = (x&gt;&gt;i)&amp;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (!dir[u][t]) dir[u][t] = ++tot;</span><br><span class="line">u = dir[u][t];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">30</span>,u=<span class="number">0</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">int</span> t = (x&gt;&gt;i)&amp;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (dir[u][t^<span class="number">1</span>])&#123;</span><br><span class="line">ans += (<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">u = dir[u][t^<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">u = dir[u][t];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v,w; cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(&#123;v,w&#125;);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(&#123;u,w&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">insert</span>(sum[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans = <span class="built_in">max</span>(ans,<span class="built_in">query</span>(sum[i]));</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>( <span class="literal">false</span> );</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span> (ce--) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 字典树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【后缀数组 线段树】2018-2019 ACM-ICPC, Asia Jiaozuo Regional Contest H. Can You Solve the Harder Problem</title>
      <link href="/2021/10/06/ACM/%E3%80%90%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%20%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912018-2019%20ACM-ICPC,%20Asia%20Jiaozuo%20Regional%20Contest%20H.%20Can%20You%20Solve%20the%20Harder%20Problem/"/>
      <url>/2021/10/06/ACM/%E3%80%90%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%20%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912018-2019%20ACM-ICPC,%20Asia%20Jiaozuo%20Regional%20Contest%20H.%20Can%20You%20Solve%20the%20Harder%20Problem/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/gym/102028/problem/H">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>求所有本质不同的子区间的 $f$ 值的总和，$f$ 值为该区间的最大值；<br>本质不同指的是子区间长度不同，当长度相同时则存在一个位置他们的权值不同；  </p><p>&emsp; 后缀数组可以得到所有本质不同的子区间，可以通过单调栈求比当前值大的下一个值的位置 $nxt[i]$ 以及从后往前递推求得以 $i$ 为左区间 $j \in [i+1,n]$ 为右区间的最大值的总和 $val[i]$；  </p><p>对于 $sa[i]$ 和 $sa[i-1]$ 相比，重复的部分就是 $height[i]$；  </p><p>&emsp; 考虑一个子问题：求以 $i$ 为左区间，$j \in [t,n]$ 为右区间的区间最大值总和；<br>解法可以线段树维护求得 $[i,t-1]$ 的最大值 $mxw$ 和最大值的位置 $pos$，下一个比 $mxw$ 大的值的位置为 $nxt[pos]$，这样就可以将 $[t,n]$ 分为两段，那么 $[t,nxt[pos]-1]$ 的区间最大值都是 $mxw$，$[nxt[pos],n]$ 的贡献就是 $val[nxt[pos]]$，和起来就是这个子问题的答案；  </p><p>那么对于每一个后缀 $sa[i]$ 都是解决这个子问题；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 2000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000009</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> a[N],nxt[N];</span><br><span class="line">LL val[N];</span><br><span class="line">stack&lt;<span class="keyword">int</span> &gt; sta;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> mxw;</span><br><span class="line"><span class="keyword">int</span> pos;</span><br><span class="line">&#125;p[N];</span><br><span class="line"><span class="keyword">int</span> wa[N],wb[N],wv[N],wss[N],rak[N],height[N],cal[N],sa[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> *r,<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> r[a]==r[b]&amp;&amp;r[a+l]==r[b+l];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">da</span><span class="params">(<span class="keyword">int</span> *r,<span class="keyword">int</span> *sa,<span class="keyword">int</span> n,<span class="keyword">int</span> M)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">int</span> i,j,p,*x=wa,*y=wb,*t;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;M;i++) wss[i]=<span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) wss[x[i]=r[i]]++;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;M;i++) wss[i]+=wss[i<span class="number">-1</span>];</span><br><span class="line">     <span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) sa[--wss[x[i]]]=i;</span><br><span class="line">     <span class="keyword">for</span>(j=<span class="number">1</span>,p=<span class="number">1</span>;p&lt;n;j*=<span class="number">2</span>,M=p) &#123;</span><br><span class="line">        <span class="keyword">for</span>(p=<span class="number">0</span>,i=n-j;i&lt;n;i++) y[p++]=i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) <span class="keyword">if</span>(sa[i]&gt;=j) y[p++]=sa[i]-j;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) wv[i]=x[y[i]];</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;M;i++) wss[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) wss[wv[i]]++;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;M;i++) wss[i]+=wss[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) sa[--wss[wv[i]]]=y[i];</span><br><span class="line">        <span class="keyword">for</span>(t=x,x=y,y=t,p=<span class="number">1</span>,x[sa[<span class="number">0</span>]]=<span class="number">0</span>,i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        x[sa[i]]=<span class="built_in">cmp</span>(y,sa[i<span class="number">-1</span>],sa[i],j)?p<span class="number">-1</span>:p++;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calheight</span><span class="params">(<span class="keyword">int</span> *r,<span class="keyword">int</span> *sa,<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">int</span> i,j,k=<span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++) rak[sa[i]]=i;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;height[rak[i++]]=k)</span><br><span class="line">     <span class="keyword">for</span>(k?k--:<span class="number">0</span>,j=sa[rak[i]<span class="number">-1</span>];r[i+k]==r[j+k];k++);</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;i--)rak[i]=rak[i<span class="number">-1</span>],sa[i]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calnxt</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(!sta.<span class="built_in">empty</span>()) sta.<span class="built_in">pop</span>();</span><br><span class="line">a[n+<span class="number">1</span>] = <span class="number">2e9</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(sta.<span class="built_in">empty</span>()) sta.<span class="built_in">push</span>(i);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(!sta.<span class="built_in">empty</span>() &amp;&amp; a[sta.<span class="built_in">top</span>()] &lt; a[i])&#123;</span><br><span class="line"><span class="keyword">int</span> t = sta.<span class="built_in">top</span>(); sta.<span class="built_in">pop</span>();</span><br><span class="line">nxt[t] = i;</span><br><span class="line">&#125;</span><br><span class="line">sta.<span class="built_in">push</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calval</span><span class="params">()</span></span>&#123;</span><br><span class="line">val[n+<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">val[i] = <span class="number">1LL</span>*a[i]*(nxt[i]-i) + val[nxt[i]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">node <span class="title">push_up</span><span class="params">(node t1, node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t1.mxw &gt;= t2.mxw) <span class="keyword">return</span> t1;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> t2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt] = &#123;a[l],l&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls); <span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">p[rt] = <span class="built_in">push_up</span>(p[ls],p[rs]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">node <span class="title">calpos</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R) <span class="keyword">return</span> p[rt];</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">node ans = &#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">push_up</span>(ans,<span class="built_in">calpos</span>(L,R,l,m,ls));</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">push_up</span>(ans,<span class="built_in">calpos</span>(L,R,m+<span class="number">1</span>,r,rs));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cal[i] = a[i]; cal[n+<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">da</span>(cal+<span class="number">1</span>,sa,n+<span class="number">1</span>,<span class="number">1000009</span>);</span><br><span class="line"><span class="built_in">calheight</span>(cal+<span class="number">1</span>,sa,n);</span><br><span class="line"><span class="built_in">calnxt</span>();</span><br><span class="line"><span class="built_in">calval</span>();</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(height[i] == <span class="number">0</span>) ans += val[sa[i]];</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = sa[i]+height[i];</span><br><span class="line">node t = <span class="built_in">calpos</span>(sa[i],l<span class="number">-1</span>,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> pos = nxt[t.pos];</span><br><span class="line">ans += <span class="number">1LL</span>*t.mxw*(pos-l) + val[pos];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; ce;</span><br><span class="line"><span class="keyword">while</span>(ce--) &#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后缀数组 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树 扫描线】HDU 1255 覆盖的面积</title>
      <link href="/2021/09/28/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E6%89%AB%E6%8F%8F%E7%BA%BF%E3%80%91HDU%201255%20%E8%A6%86%E7%9B%96%E7%9A%84%E9%9D%A2%E7%A7%AF/"/>
      <url>/2021/09/28/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E6%89%AB%E6%8F%8F%E7%BA%BF%E3%80%91HDU%201255%20%E8%A6%86%E7%9B%96%E7%9A%84%E9%9D%A2%E7%A7%AF/</url>
      
        <content type="html"><![CDATA[<p><a href="https://acm.hdu.edu.cn/showproblem.php?pid=1255">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>扫描线模板题，求被覆盖两次及以上的区域面积；  </p><p>线段树维护区间覆盖次数，被覆盖一次的总长度 $len1$ ，被覆盖两次的总长度 $len2$；  </p><p>对区间覆盖次数 $cnt$ 分类讨论：<br>&emsp; $1.$ $cnt &gt;= 2$，那么 $len1,len2$ 覆盖完全；<br>&emsp; $2.$ $cnt == 1$，那么 $len1$ 覆盖完全，$len2$ 为左右孩子的 $len1$ 之和；<br>&emsp; $3.$ $cnt == 0$，那么 $lem1,len2$ 分别为为左右孩子的 $len1,len2$ 之和；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> l,r,h;</span><br><span class="line"><span class="keyword">int</span> w;</span><br><span class="line">&#125;li[MS&lt;&lt;<span class="number">1</span>]; <span class="keyword">int</span> tot;</span><br><span class="line"><span class="keyword">double</span> dx[MS&lt;&lt;<span class="number">1</span>]; <span class="keyword">int</span> totx;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> len1;</span><br><span class="line"><span class="keyword">double</span> len2;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1, node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (t1.h == t2.h) <span class="keyword">return</span> t1.w &gt; t2.w;</span><br><span class="line"><span class="keyword">return</span> t1.h &lt; t2.h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span> (l == r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls); <span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p[rt].cnt &gt; <span class="number">1</span>) p[rt].len1 = p[rt].len2 = dx[r+<span class="number">1</span>] - dx[l];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (p[rt].cnt == <span class="number">1</span>)&#123;</span><br><span class="line">p[rt].len1 = dx[r+<span class="number">1</span>] - dx[l];</span><br><span class="line"><span class="keyword">if</span> (l == r) p[rt].len2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> p[rt].len2 = p[ls].len1 + p[rs].len1;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l == r) p[rt].len1 = p[rt].len2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">p[rt].len1 = p[ls].len1 + p[rs].len1;</span><br><span class="line">p[rt].len2 = p[ls].len2 + p[rs].len2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt].cnt += w;</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (m &gt;= L) <span class="built_in">modify</span>(L,R,l,m,ls,w);</span><br><span class="line"><span class="keyword">if</span> (m &lt;  R) <span class="built_in">modify</span>(L,R,m+<span class="number">1</span>,r,rs,w);</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n); tot = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">double</span> x1,y1,x2,y2; <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf&quot;</span>,&amp;x1,&amp;y1,&amp;x2,&amp;y2);</span><br><span class="line">li[++tot] = &#123;x1,x2,y1, <span class="number">1</span>&#125;; dx[tot] = x1;</span><br><span class="line">li[++tot] = &#123;x1,x2,y2,<span class="number">-1</span>&#125;; dx[tot] = x2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(dx+<span class="number">1</span>,dx+tot+<span class="number">1</span>); totx = <span class="number">1</span>; <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=tot;i++) <span class="keyword">if</span> (dx[i] != dx[i<span class="number">-1</span>]) dx[++totx] = dx[i];</span><br><span class="line"><span class="built_in">sort</span>(li+<span class="number">1</span>,li+tot+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,totx<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//for (int i=1;i&lt;=tot;i++)&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; li[i].l &lt;&lt; &quot; &quot; &lt;&lt; li[i].r &lt;&lt; &quot; &quot; &lt;&lt; li[i].h &lt;&lt; &quot; &quot; &lt;&lt; li[i].w &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;tot;i++)&#123;</span><br><span class="line"><span class="keyword">double</span> now = p[<span class="number">1</span>].len2;</span><br><span class="line"><span class="keyword">int</span> L = <span class="built_in">lower_bound</span>(dx+<span class="number">1</span>,dx+totx+<span class="number">1</span>,li[i].l) - dx;</span><br><span class="line"><span class="keyword">int</span> R = <span class="built_in">lower_bound</span>(dx+<span class="number">1</span>,dx+totx+<span class="number">1</span>,li[i].r) - dx;</span><br><span class="line"><span class="built_in">modify</span>(L,R<span class="number">-1</span>,<span class="number">1</span>,totx<span class="number">-1</span>,<span class="number">1</span>,li[i].w);</span><br><span class="line">ans += p[<span class="number">1</span>].len2*(li[i+<span class="number">1</span>].h-li[i].h);</span><br><span class="line"><span class="comment">//cout &lt;&lt; i &lt;&lt; &quot;: &quot; &lt;&lt; p[1].len2 &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; ce;</span><br><span class="line"><span class="keyword">while</span> (ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】The 2021 ICPC Asia Regionals Online Contest (II)</title>
      <link href="/2021/09/26/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91The%202021%20ICPC%20Asia%20Regionals%20Online%20Contest%20(II)/"/>
      <url>/2021/09/26/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91The%202021%20ICPC%20Asia%20Regionals%20Online%20Contest%20(II)/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pintia.cn/problem-sets/1441745686294945792/problems/1441745856154955787">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>题给两种操作：<br>&emsp; $1.$ $\forall i \in [L,R], x_i=x_i*w$；<br>&emsp; $2.$ 输出 $\sum_{i=l}^{r}f(x_i)$，其中 $f(x_i)$ 为 $x_i$ 的欧拉函数值；  </p><p>由于 $f(x) = x * \prod_ { 质数 p\mid x} ( 1- \frac {1} {p} )$，对于一个数 $x = 6$，$x$ 的质因子有 $2$、$3$，$f(x) = 6 * \frac {1} {2} * \frac {2} {3} = 2$，那么将 $x$ 乘上 $w = 10$，由于 $w$ 的质因子有 $2$、$5$，其中 $2$ 这个质因子已经在 $x$ 中出现过了，那么 $x$ 乘上 $w$ 造成的贡献就是 $d = 10 * \frac {4} {5} = 8$，于是 $x = x * w = 60$，且 $f(60) = 2 * d = 16$；  </p><p>用线段树维护出现的质因子和答案，每次修改暴力更新质因子是否存在，代码使用 $bitset$，好写还快；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 50001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">bitset&lt;111&gt; c;</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line"><span class="keyword">int</span> la;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">bitset&lt;111&gt; <span class="title">change</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; <span class="comment">// 求 x 的质因子 </span></span><br><span class="line">bitset&lt;111&gt; t; t.<span class="built_in">reset</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=x;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!(x%i))&#123;</span><br><span class="line">t[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!(x%i)) x/=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x!=<span class="number">1</span>) t[x] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> w, bitset&lt;<span class="number">111</span>&gt; t)</span></span>&#123; <span class="comment">// 求贡献 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> pos=t._Find_next(<span class="number">1</span>); pos!=<span class="number">111</span>; pos=t._Find_next(pos)) w = w/pos*(pos<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">return</span> w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].sum = (p[ls].sum + p[rs].sum)%mod;</span><br><span class="line">p[rt].c = p[ls].c &amp; p[rs].c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].la != <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> t = p[rt].la;</span><br><span class="line">p[ls].sum = <span class="number">1LL</span>*p[ls].sum*t%mod;</span><br><span class="line">p[rs].sum = <span class="number">1LL</span>*p[rs].sum*t%mod;</span><br><span class="line">p[ls].la = <span class="number">1LL</span>*p[ls].la*t%mod;</span><br><span class="line">p[rs].la = <span class="number">1LL</span>*p[rs].la*t%mod;</span><br><span class="line">p[rt].la = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].la = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line"><span class="keyword">int</span> x; cin &gt;&gt; x;</span><br><span class="line">p[rt].c = <span class="built_in">change</span>(x);</span><br><span class="line">p[rt].sum = <span class="built_in">cal</span>(x,p[rt].c);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls); <span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> w,bitset&lt;<span class="number">111</span>&gt; cc)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">if</span>((p[rt].c|cc) == p[rt].c)&#123; <span class="comment">// 如果该区间每个数的质因子都包含了 w 的质因子 </span></span><br><span class="line">p[rt].sum = <span class="number">1LL</span>*p[rt].sum*w%mod;</span><br><span class="line">p[rt].la = <span class="number">1LL</span>*p[rt].la*w%mod;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123; <span class="comment">// 暴力更新 </span></span><br><span class="line">bitset&lt;111&gt; t = (p[rt].c|cc)^p[rt].c;</span><br><span class="line">p[rt].sum = <span class="number">1LL</span>*p[rt].sum*<span class="built_in">cal</span>(w,t)%mod;</span><br><span class="line">p[rt].c |= cc;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify</span>(L,R,l,m,ls,w,cc);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify</span>(L,R,m+<span class="number">1</span>,r,rs,w,cc);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R) <span class="keyword">return</span> p[rt].sum;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = (ans + <span class="built_in">query</span>(L,R,l,m,ls) )%mod;</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = (ans + <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs) )%mod;</span><br><span class="line"><span class="keyword">return</span> ans; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m; <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> op,l,r,w; cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">if</span>(!op) cin &gt;&gt; w, <span class="built_in">modify</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,w,<span class="built_in">change</span>(w));</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="built_in">query</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--) &#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> bitset优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树 扫描线】洛谷 P1856 [USACO5.5]矩形周长Picture</title>
      <link href="/2021/09/26/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E6%89%AB%E6%8F%8F%E7%BA%BF%E3%80%91%E6%B4%9B%E8%B0%B7%20P1856%20%5BUSACO5.5%5D%E7%9F%A9%E5%BD%A2%E5%91%A8%E9%95%BFPicture/"/>
      <url>/2021/09/26/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E6%89%AB%E6%8F%8F%E7%BA%BF%E3%80%91%E6%B4%9B%E8%B0%B7%20P1856%20%5BUSACO5.5%5D%E7%9F%A9%E5%BD%A2%E5%91%A8%E9%95%BFPicture/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1856">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>做两次扫描线，一次扫 $x$，一次扫 $y$；  </p><p>每次扫到一条线，这条线的贡献就是 加入这条线之前覆盖的长度 与 加入这条线之后覆盖的长度 的绝对值；  </p><p>注意：当两条线的高度相等时，权值为 $1$ 的先处理；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M1 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M2 1000000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 5009</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 洛谷 P1856 [USACO5.5]矩形周长Picture </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x1,y1;</span><br><span class="line"><span class="keyword">int</span> x2,y2;</span><br><span class="line">&#125;b[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">line</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,h,w;</span><br><span class="line">&#125;a[MS&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"><span class="keyword">int</span> tmp[MS&lt;&lt;<span class="number">1</span>], num;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"><span class="keyword">int</span> mark;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(line t1, line t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t1.h == t2.h) <span class="keyword">return</span> t1.w &gt; t2.w;</span><br><span class="line"><span class="keyword">return</span> t1.h &lt; t2.h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_x</span><span class="params">()</span></span>&#123;</span><br><span class="line">num = tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">++num; tmp[num] = b[i].x1;</span><br><span class="line">++num; tmp[num] = b[i].x2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(tmp+<span class="number">1</span>,tmp+num+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> len = num; num = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(tmp[i] != tmp[i<span class="number">-1</span>]) tmp[++num] = tmp[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">lower_bound</span>(tmp+<span class="number">1</span>,tmp+num+<span class="number">1</span>,b[i].x1) - tmp;</span><br><span class="line"><span class="keyword">int</span> r = <span class="built_in">lower_bound</span>(tmp+<span class="number">1</span>,tmp+num+<span class="number">1</span>,b[i].x2) - tmp;</span><br><span class="line">a[++tot] = &#123;l,r,b[i].y1, <span class="number">1</span>&#125;;</span><br><span class="line">a[++tot] = &#123;l,r,b[i].y2,<span class="number">-1</span>&#125;;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+tot+<span class="number">1</span>,cmp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_y</span><span class="params">()</span></span>&#123;</span><br><span class="line">num = tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">++num; tmp[num] = b[i].y1;</span><br><span class="line">++num; tmp[num] = b[i].y2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(tmp+<span class="number">1</span>,tmp+num+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> len = num; num = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(tmp[i] != tmp[i<span class="number">-1</span>]) tmp[++num] = tmp[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">lower_bound</span>(tmp+<span class="number">1</span>,tmp+num+<span class="number">1</span>,b[i].y1) - tmp;</span><br><span class="line"><span class="keyword">int</span> r = <span class="built_in">lower_bound</span>(tmp+<span class="number">1</span>,tmp+num+<span class="number">1</span>,b[i].y2) - tmp;</span><br><span class="line">a[++tot] = &#123;l,r,b[i].x1, <span class="number">1</span>&#125;;</span><br><span class="line">a[++tot] = &#123;l,r,b[i].x2,<span class="number">-1</span>&#125;;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+tot+<span class="number">1</span>,cmp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = &#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].mark) p[rt].val = tmp[r+<span class="number">1</span>] - tmp[l];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(l == r) p[rt].val = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> p[rt].val = p[ls].val + p[rs].val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt].mark += val;</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,num<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> t = p[<span class="number">1</span>].val;</span><br><span class="line"><span class="built_in">modify</span>(a[i].l,a[i].r<span class="number">-1</span>,<span class="number">1</span>,num<span class="number">-1</span>,<span class="number">1</span>,a[i].w);</span><br><span class="line">ans += (<span class="keyword">int</span>)<span class="built_in">abs</span>(p[<span class="number">1</span>].val - t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//cin &gt;&gt; n;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x1,y1,x2,y2; cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">b[i] = &#123;x1,y1,x2,y2&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>; </span><br><span class="line"><span class="built_in">init_x</span>(); ans += <span class="built_in">cal</span>();</span><br><span class="line"><span class="built_in">init_y</span>(); ans += <span class="built_in">cal</span>();</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【AC自动机】洛谷 P3796 【模板】AC自动机（加强版）</title>
      <link href="/2021/09/26/ACM/%E3%80%90AC%E8%87%AA%E5%8A%A8%E6%9C%BA%E3%80%91%E6%B4%9B%E8%B0%B7%20P3796%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91AC%E8%87%AA%E5%8A%A8%E6%9C%BA%EF%BC%88%E5%8A%A0%E5%BC%BA%E7%89%88%EF%BC%89/"/>
      <url>/2021/09/26/ACM/%E3%80%90AC%E8%87%AA%E5%8A%A8%E6%9C%BA%E3%80%91%E6%B4%9B%E8%B0%B7%20P3796%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91AC%E8%87%AA%E5%8A%A8%E6%9C%BA%EF%BC%88%E5%8A%A0%E5%BC%BA%E7%89%88%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3796">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>多模式串匹配，使用$AC$自动机，模板题；  </p><p>学自 <a href="https://oi-wiki.org/string/ac-automaton/">$OI-wiki$</a>  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M1 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M2 1000000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// P3796 【模板】AC自动机（加强版） </span></span><br><span class="line"><span class="comment">// for(int j=u;j;j=fail[j])</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100</span>];</span><br><span class="line">&#125;p[<span class="number">200</span>];</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">200</span>];</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line"><span class="keyword">int</span> dic[MS][<span class="number">26</span>], ext_id[MS], fail[MS], tot;</span><br><span class="line">queue&lt;<span class="keyword">int</span> &gt; Q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> len, <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> c = s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!dic[u][c]) dic[u][c] = ++tot;</span><br><span class="line">u = dic[u][c];</span><br><span class="line">&#125; </span><br><span class="line">ext_id[u] = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(dic[<span class="number">0</span>][i]) Q.<span class="built_in">push</span>(dic[<span class="number">0</span>][i]);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line"><span class="keyword">int</span> u = Q.<span class="built_in">front</span>(); Q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(dic[u][i])&#123;</span><br><span class="line">fail[dic[u][i]] = dic[fail[u]][i];</span><br><span class="line">Q.<span class="built_in">push</span>(dic[u][i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">dic[u][i] = dic[fail[u]][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,u=<span class="number">0</span>,c;i&lt;len;i++)&#123;</span><br><span class="line">c = s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">u = dic[u][c];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=u;j;j=fail[j])&#123;</span><br><span class="line">cnt[ext_id[j]]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(cnt, <span class="number">0</span>, <span class="keyword">sizeof</span> cnt);</span><br><span class="line"><span class="built_in">memset</span>(dic, <span class="number">0</span>, <span class="keyword">sizeof</span> dic);</span><br><span class="line"><span class="built_in">memset</span>(ext_id, <span class="number">0</span>, <span class="keyword">sizeof</span> ext_id);</span><br><span class="line"><span class="built_in">memset</span>(fail, <span class="number">0</span>, <span class="keyword">sizeof</span> fail);</span><br><span class="line">tot = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i].s;</span><br><span class="line"><span class="built_in">insert</span>(p[i].s, <span class="built_in">strlen</span>(p[i].s), i); </span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">build</span>();</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="built_in">query</span>(s, <span class="built_in">strlen</span>(s));</span><br><span class="line"><span class="keyword">int</span> maxn = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) maxn = <span class="built_in">max</span>(maxn, cnt[i]);</span><br><span class="line">cout &lt;&lt; maxn &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt[i] == maxn)&#123;</span><br><span class="line">cout &lt;&lt; p[i].s &lt;&lt; <span class="string">&quot;\n&quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; n)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> AC自动机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【AC自动机】洛谷 P3808 【模板】AC自动机（简单版）</title>
      <link href="/2021/09/26/ACM/%E3%80%90AC%E8%87%AA%E5%8A%A8%E6%9C%BA%E3%80%91%E6%B4%9B%E8%B0%B7%20P3808%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91AC%E8%87%AA%E5%8A%A8%E6%9C%BA%EF%BC%88%E7%AE%80%E5%8D%95%E7%89%88%EF%BC%89/"/>
      <url>/2021/09/26/ACM/%E3%80%90AC%E8%87%AA%E5%8A%A8%E6%9C%BA%E3%80%91%E6%B4%9B%E8%B0%B7%20P3808%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91AC%E8%87%AA%E5%8A%A8%E6%9C%BA%EF%BC%88%E7%AE%80%E5%8D%95%E7%89%88%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3808">题链</a></p><h1 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h1><p>多模式串匹配，使用$AC$自动机，模板题；  </p><p>学自 <a href="https://oi-wiki.org/string/ac-automaton/">$OI-wiki$</a>  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M1 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M2 1000000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  for(int j=u;j &amp;&amp; ext[j];j=fail[j])</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line"><span class="keyword">int</span> dic[MS][<span class="number">26</span>], ext[MS], fail[MS], tot;</span><br><span class="line">queue&lt;<span class="keyword">int</span> &gt; Q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> c = s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!dic[u][c]) dic[u][c] = ++tot;</span><br><span class="line">u = dic[u][c];</span><br><span class="line">&#125; </span><br><span class="line">ext[u]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(dic[<span class="number">0</span>][i]) Q.<span class="built_in">push</span>(dic[<span class="number">0</span>][i]);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line"><span class="keyword">int</span> u = Q.<span class="built_in">front</span>(); Q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(dic[u][i])&#123;</span><br><span class="line">fail[dic[u][i]] = dic[fail[u]][i];</span><br><span class="line">Q.<span class="built_in">push</span>(dic[u][i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">dic[u][i] = dic[fail[u]][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,u=<span class="number">0</span>,c;i&lt;len;i++)&#123;</span><br><span class="line">c = s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">u = dic[u][c];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=u;j &amp;&amp; ext[j];j=fail[j])&#123;</span><br><span class="line">cnt += ext[j];</span><br><span class="line">ext[j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="built_in">insert</span>(s, <span class="built_in">strlen</span>(s)); </span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">build</span>();</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(s, <span class="built_in">strlen</span>(s)) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> AC自动机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【后缀数组】洛谷 P2408 不同子串个数</title>
      <link href="/2021/09/23/ACM/%E3%80%90%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E3%80%91%E6%B4%9B%E8%B0%B7%20P2408%20%E4%B8%8D%E5%90%8C%E5%AD%90%E4%B8%B2%E4%B8%AA%E6%95%B0/"/>
      <url>/2021/09/23/ACM/%E3%80%90%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E3%80%91%E6%B4%9B%E8%B0%B7%20P2408%20%E4%B8%8D%E5%90%8C%E5%AD%90%E4%B8%B2%E4%B8%AA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2408">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>求出后缀数组后，得到排序过后的后缀序列，例如：<br>&emsp; $ababca$ 得出的后缀序列为：<br>&emsp; $a$<br>&emsp; $ababca$<br>&emsp; $abca$<br>&emsp; $babca$<br>&emsp; $bca$<br>&emsp; $ca$  </p><p>对应的三个数组如下：  </p><table><thead><tr><th align="center">pos</th><th align="center">1</th><th align="center">2</th><th align="center">3</th><th align="center">4</th><th align="center">5</th><th align="center">6</th></tr></thead><tbody><tr><td align="center">height</td><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center">0</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">sa</td><td align="center">6</td><td align="center">1</td><td align="center">3</td><td align="center">2</td><td align="center">4</td><td align="center">5</td></tr><tr><td align="center">rak</td><td align="center">2</td><td align="center">4</td><td align="center">3</td><td align="center">5</td><td align="center">6</td><td align="center">1</td></tr></tbody></table><p>要得到不同字串的个数，每一个字串来源于一个后缀的前缀，由于后缀是按字典序排序过后的，重复的子串只需要考虑相邻两串的重复度，于是可以查看相邻两串重复了多少来去重，可以发现相邻两串重复的恰好就是 $height$ 数组的值，那么对于一个后缀的贡献就是这个后缀的长度 $n-sa_i+1$ 减去 $height_i$，于是 $ans = \sum_{i=1}^{i=n}n-sa_i+1-height_i$；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M1 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M2 1000000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line"></span><br><span class="line">LL wa[MS],wb[MS],wv[MS],wss[MS],rak[MS],height[MS],cal[MS],sa[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(LL *r,LL a,LL b,LL l)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> r[a] == r[b] &amp;&amp; r[a+l] == r[b+l];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">da</span><span class="params">(LL *r,LL *sa,LL n,LL M)</span></span>&#123;</span><br><span class="line">LL i,j,p,*x=wa,*y=wb,*t;</span><br><span class="line"><span class="keyword">for</span>(LL i=<span class="number">0</span>;i&lt;M;i++) wss[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(LL i=<span class="number">0</span>;i&lt;n;i++) wss[x[i]=r[i]]++;</span><br><span class="line"><span class="keyword">for</span>(LL i=<span class="number">1</span>;i&lt;M;i++) wss[i] += wss[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(LL i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) sa[--wss[x[i]]] = i;</span><br><span class="line"><span class="keyword">for</span>(LL j=<span class="number">1</span>,p=<span class="number">1</span>;p&lt;n;j*=<span class="number">2</span>,M=p)&#123;</span><br><span class="line"><span class="keyword">for</span>(p=<span class="number">0</span>,i=n-j;i&lt;n;i++) y[p++] = i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) <span class="keyword">if</span>(sa[i]&gt;=j) y[p++] = sa[i]-j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) wv[i] = x[y[i]]; </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;M;i++) wss[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) wss[wv[i]]++;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;M;i++) wss[i] += wss[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) sa[--wss[wv[i]]] = y[i];</span><br><span class="line"><span class="keyword">for</span>(t=x,x=y,y=t,p=<span class="number">1</span>,x[sa[<span class="number">0</span>]]=<span class="number">0</span>,i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">x[sa[i]] = <span class="built_in">cmp</span>(y,sa[i<span class="number">-1</span>],sa[i],j)?p<span class="number">-1</span>:p++; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calheight</span><span class="params">(LL *r,LL *sa,LL n)</span></span>&#123;</span><br><span class="line">LL i,j,k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++) rak[sa[i]] = i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;height[rak[i++]]=k)</span><br><span class="line"><span class="keyword">for</span>(k?k--:<span class="number">0</span>,j=sa[rak[i]<span class="number">-1</span>];r[i+k]==r[j+k];k++);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;i--) rak[i] = rak[i<span class="number">-1</span>],sa[i]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">cin &gt;&gt; s+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cal[i] = s[i];</span><br><span class="line">cal[n+<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">da</span>(cal+<span class="number">1</span>,sa,n+<span class="number">1</span>,<span class="number">200</span>);</span><br><span class="line"><span class="built_in">calheight</span>(cal+<span class="number">1</span>,sa,n);</span><br><span class="line"><span class="comment">//LL ans = n*(n+1)/2;</span></span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="comment">//ans -= height[rak[i]];</span></span><br><span class="line">ans += n-sa[i]+<span class="number">1</span>-height[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 后缀数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【KMP】Codeforces Round 246 (Div. 2) D. Prefixes and Suffixes （统计每个前缀出现次数）</title>
      <link href="/2021/09/22/ACM/%E3%80%90KMP%E3%80%91Codeforces%20Round%20246%20(Div.%202)%20D.%20Prefixes%20and%20Suffixes%20%EF%BC%88%E7%BB%9F%E8%AE%A1%E6%AF%8F%E4%B8%AA%E5%89%8D%E7%BC%80%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%EF%BC%89/"/>
      <url>/2021/09/22/ACM/%E3%80%90KMP%E3%80%91Codeforces%20Round%20246%20(Div.%202)%20D.%20Prefixes%20and%20Suffixes%20%EF%BC%88%E7%BB%9F%E8%AE%A1%E6%AF%8F%E4%B8%AA%E5%89%8D%E7%BC%80%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.ml/contest/432/problem/D">题链</a></p><h1 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h1><p>题意给定一个字符串 $s$，对于 $s$ 的任何与后缀匹配的前缀，输出该前缀在字符串中出现次数；  </p><p>如果统计完每个前缀出现次数，那么与后缀匹配的前缀可以通过跳最后一个字符对应的 $next$ 数组的值来得到；  </p><p>统计每个前缀出现次数则是 $OI-wiki$ 上的模板算法；</p><p><a href="https://oi-wiki.org/string/kmp/">$OI-wiki/string/kmp$</a></p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M1 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M2 1000000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line"><span class="keyword">int</span> skmp[MS];</span><br><span class="line"><span class="keyword">int</span> cnt[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> len, val;</span><br><span class="line">&#125;ac[MS];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_skmp</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>,j=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(j &amp;&amp; s[i] != s[j+<span class="number">1</span>]) j = skmp[j];</span><br><span class="line"><span class="keyword">if</span>(s[i] ==  s[j+<span class="number">1</span>]) j++;</span><br><span class="line">skmp[i] = j;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; s+<span class="number">1</span>;</span><br><span class="line">n = <span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">get_skmp</span>();</span><br><span class="line"><span class="comment">// 求出 cnt[i] 表示与前缀 i 相同的字串个数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++) cnt[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--) cnt[skmp[i]] += cnt[i];</span><br><span class="line"><span class="comment">//for(int i=0;i&lt;=n;i++) cout &lt;&lt; cnt[i] &lt;&lt; &quot; &quot;;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=n;j;j=skmp[j])&#123;</span><br><span class="line">ac[++tot] = &#123;j,cnt[j]&#125;;</span><br><span class="line">&#125; </span><br><span class="line">cout &lt;&lt; tot &lt;&lt; <span class="string">&quot;\n&quot;</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=tot;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">cout &lt;&lt; ac[i].len &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ac[i].val &lt;&lt; <span class="string">&quot;\n&quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> KMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【思维】2016 Benelux Algorithm Programming Contest (BAPC 16) G Manhattan Positioning System</title>
      <link href="/2021/09/17/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%912016%20Benelux%20Algorithm%20Programming%20Contest%20(BAPC%2016)%20G%20Manhattan%20Positioning%20System/"/>
      <url>/2021/09/17/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%912016%20Benelux%20Algorithm%20Programming%20Contest%20(BAPC%2016)%20G%20Manhattan%20Positioning%20System/</url>
      
        <content type="html"><![CDATA[<h1 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h1><p>给定多个标准菱形，求交点；  </p><p>将第一个菱形作为初始菱形，对于新来的菱形直接求与初始菱形的交，再变更初始菱形，最终看初始菱形还剩哪些点；  </p><p>代码中将每个菱形都分为四条边求交；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M1 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M2 1000000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 200009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">point c[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">bool</span> dir;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> x,y,d;</span><br><span class="line">deque&lt;node &gt; Q;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;node &gt; <span class="title">divide</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">vector&lt;node &gt; vc;</span><br><span class="line">node t;</span><br><span class="line"><span class="keyword">if</span>(d == <span class="number">0</span>)&#123;</span><br><span class="line">t.c[<span class="number">0</span>] = t.c[<span class="number">1</span>] = &#123;x,y&#125;; t.dir = <span class="number">1</span>;</span><br><span class="line">vc.<span class="built_in">push_back</span>(t);</span><br><span class="line"><span class="keyword">return</span> vc;</span><br><span class="line">&#125;</span><br><span class="line">t.c[<span class="number">0</span>] = &#123;x, y-d&#125;; t.c[<span class="number">1</span>] = &#123;x+d<span class="number">-1</span>, y<span class="number">-1</span>&#125;; t.dir = <span class="number">1</span>; vc.<span class="built_in">push_back</span>(t);</span><br><span class="line">t.c[<span class="number">0</span>] = &#123;x+d, y&#125;; t.c[<span class="number">1</span>] = &#123;x+<span class="number">1</span>, y+d<span class="number">-1</span>&#125;; t.dir = <span class="number">0</span>; vc.<span class="built_in">push_back</span>(t);</span><br><span class="line">t.c[<span class="number">0</span>] = &#123;x-d+<span class="number">1</span>, y+<span class="number">1</span>&#125;; t.c[<span class="number">1</span>] = &#123;x, y+d&#125;; t.dir = <span class="number">1</span>; vc.<span class="built_in">push_back</span>(t);</span><br><span class="line">t.c[<span class="number">0</span>] = &#123;x<span class="number">-1</span>, y-d+<span class="number">1</span>&#125;; t.c[<span class="number">1</span>] = &#123;x-d, y&#125;; t.dir = <span class="number">0</span>; vc.<span class="built_in">push_back</span>(t);</span><br><span class="line"><span class="keyword">return</span> vc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">merge</span><span class="params">(node t1, node t2)</span></span>&#123;</span><br><span class="line">node t; t.dir = t1.dir;</span><br><span class="line"><span class="keyword">if</span>(t1.c[<span class="number">0</span>].y &gt; t2.c[<span class="number">0</span>].y) t.c[<span class="number">0</span>] = t1.c[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> t.c[<span class="number">0</span>] = t2.c[<span class="number">0</span>]; </span><br><span class="line"><span class="keyword">if</span>(t1.c[<span class="number">1</span>].y &lt; t2.c[<span class="number">1</span>].y) t.c[<span class="number">1</span>] = t1.c[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">else</span> t.c[<span class="number">1</span>] = t2.c[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(node t, vector&lt;node &gt; vc)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc)&#123;</span><br><span class="line"><span class="keyword">if</span>(v.dir == t.dir)&#123;</span><br><span class="line"><span class="keyword">if</span>((t.dir == <span class="number">1</span> &amp;&amp; t.c[<span class="number">0</span>].x-t.c[<span class="number">0</span>].y == v.c[<span class="number">0</span>].x-v.c[<span class="number">0</span>].y)</span><br><span class="line">|| (t.dir == <span class="number">0</span> &amp;&amp; t.c[<span class="number">0</span>].x+t.c[<span class="number">0</span>].y == v.c[<span class="number">0</span>].x+v.c[<span class="number">0</span>].y))&#123;</span><br><span class="line">node cc = <span class="built_in">merge</span>(t, v);</span><br><span class="line"><span class="keyword">if</span>(cc.c[<span class="number">1</span>].y &gt;= cc.c[<span class="number">0</span>].y)&#123;</span><br><span class="line">Q.<span class="built_in">push_back</span>(cc);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t.dir == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> cy, cx = t.c[<span class="number">0</span>].x+v.c[<span class="number">0</span>].x+v.c[<span class="number">0</span>].y-t.c[<span class="number">0</span>].y;</span><br><span class="line"><span class="keyword">if</span>(!(cx&amp;<span class="number">1</span>))&#123;</span><br><span class="line">cx /= <span class="number">2</span>;</span><br><span class="line">cy = cx-t.c[<span class="number">0</span>].x+t.c[<span class="number">0</span>].y;</span><br><span class="line"><span class="keyword">if</span>(t.c[<span class="number">0</span>].y &lt;= cy &amp;&amp; cy &lt;= t.c[<span class="number">1</span>].y</span><br><span class="line">&amp;&amp; v.c[<span class="number">0</span>].y &lt;= cy &amp;&amp; cy &lt;= v.c[<span class="number">1</span>].y)&#123;</span><br><span class="line">node cc;</span><br><span class="line">cc.c[<span class="number">0</span>] = cc.c[<span class="number">1</span>] = &#123;cx, cy&#125;;</span><br><span class="line">cc.dir = <span class="number">1</span>;</span><br><span class="line">Q.<span class="built_in">push_back</span>(cc);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> cy, cx = t.c[<span class="number">0</span>].x+v.c[<span class="number">0</span>].x-v.c[<span class="number">0</span>].y+t.c[<span class="number">0</span>].y;</span><br><span class="line"><span class="keyword">if</span>(!(cx&amp;<span class="number">1</span>))&#123;</span><br><span class="line">cx /= <span class="number">2</span>;</span><br><span class="line">cy = -cx+t.c[<span class="number">0</span>].x+t.c[<span class="number">0</span>].y;</span><br><span class="line"><span class="keyword">if</span>(t.c[<span class="number">0</span>].y &lt;= cy &amp;&amp; cy &lt;= t.c[<span class="number">1</span>].y</span><br><span class="line">&amp;&amp; v.c[<span class="number">0</span>].y &lt;= cy &amp;&amp; cy &lt;= v.c[<span class="number">1</span>].y)&#123;</span><br><span class="line">node cc;</span><br><span class="line">cc.c[<span class="number">0</span>] = cc.c[<span class="number">1</span>] = &#123;cx, cy&#125;;</span><br><span class="line">cc.dir = <span class="number">1</span>;</span><br><span class="line">Q.<span class="built_in">push_back</span>(cc);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jdg</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(Q.<span class="built_in">empty</span>()) cout &lt;&lt; <span class="string">&quot;impossible\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>((<span class="keyword">int</span>)Q.<span class="built_in">size</span>() &gt; <span class="number">1</span>) cout &lt;&lt; <span class="string">&quot;uncertain\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">node t = Q.<span class="built_in">front</span>(); Q.<span class="built_in">pop_front</span>();</span><br><span class="line"><span class="keyword">if</span>(t.c[<span class="number">0</span>].x != t.c[<span class="number">1</span>].x) cout &lt;&lt; <span class="string">&quot;uncertain\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; t.c[<span class="number">0</span>].x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; t.c[<span class="number">0</span>].y &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">vector&lt;node &gt; vc;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; d;</span><br><span class="line">vc = <span class="built_in">divide</span>(x,y,d);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc) </span><br><span class="line">Q.<span class="built_in">push_back</span>(v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n; <span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; d;</span><br><span class="line">vector&lt;node &gt; vc = <span class="built_in">divide</span>(x,y,d);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> cnt = Q.<span class="built_in">size</span>(); cnt; cnt--)&#123;</span><br><span class="line">node t = Q.<span class="built_in">front</span>(); Q.<span class="built_in">pop_front</span>();</span><br><span class="line"><span class="built_in">cal</span>(t, vc);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">jdg</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>(); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【思维】Codeforces Global Round 16 E. Buds Re-hanging</title>
      <link href="/2021/09/17/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%91Codeforces%20Global%20Round%2016%20E.%20Buds%20Re-hanging/"/>
      <url>/2021/09/17/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%91Codeforces%20Global%20Round%2016%20E.%20Buds%20Re-hanging/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.ml/contest/1566/problem/E">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>给定 $n$ 个节点的树，定义 <strong>芽</strong> 为：<br>&emsp; $1.$ 芽不是根节点<br>&emsp; $2.$ 至少有一个孩子节点<br>&emsp; $3.$ 所有孩子节点都是叶节点   </p><p>一次操作被定义为：将一个 <strong>芽</strong> 取出（包括它的所有孩子节点），连接到不包括被取出的点的任意点上，并作为被连接点的孩子；  </p><p>可以执行任意多次操作，最终使得整个树的叶子数量最少；  </p><p>假设芽的数量为 $k$，那么叶子的数量就是 $n-1-k$，一次操作可以将一个芽挂在一个叶子下，那么可以将叶子的数量减少 $1$，于是叶子最少的数量就是 $n-1-k-k = n-1-2k$；  </p><p>如果根节点没有叶子节点，那么可移动芽的数量就变为 $k-1$，也就是只能减少 $k-1$ 个叶子，所以叶子最少的数量就是 $n-1-k-(k-1) = n-2k$；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M1 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M2 1000000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 200009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> p[MS];</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">p[u] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> cc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f)&#123;</span><br><span class="line"><span class="built_in">dfs1</span>(v,u);</span><br><span class="line">cc |= p[v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cc) p[u] = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">else</span> p[u] = <span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f)&#123;</span><br><span class="line">cnt += !p[v];</span><br><span class="line"><span class="built_in">dfs2</span>(v,u);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) vc[i].<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v; cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs1</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[<span class="number">1</span>])&#123;</span><br><span class="line"><span class="keyword">if</span>(p[v])&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">dfs2</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;cnt = &quot; &lt;&lt; cnt &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;flag = &quot; &lt;&lt; flag &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">cout &lt;&lt; n-cnt*<span class="number">2</span>-flag &lt;&lt; <span class="string">&quot;\n&quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; ce;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>(); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【DP bitset优化】2021牛客暑期多校训练营8 F Robots</title>
      <link href="/2021/09/11/ACM/%E3%80%90DP%20bitset%E4%BC%98%E5%8C%96%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A58%20F%20Robots/"/>
      <url>/2021/09/11/ACM/%E3%80%90DP%20bitset%E4%BC%98%E5%8C%96%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A58%20F%20Robots/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/11259">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>有三种机器人：<br>&emsp; $1.$ 只能往右走；<br>&emsp; $2.$ 只能往下走；<br>&emsp; $3.$ 既能往右也能往下走；<br>给定 $n \times m$ 的 $01$ 矩阵，以及 $q$ 个机器人的种类，起点和终点，求每个机器人是否可达；<br>机器人只能走 $0$，不能走 $1$；  </p><p>设 $dp[i][j]$ 表示从 $(i,j)$ 点能到达的点，可以用 $lowbit$ 优化空间，并设 $dp[i][j][x*m+y] = 1$ 表示从 $(i,j)$ 点可达 $(x,y)$ 点；  </p><p>那么可以写下转移公式：  </p><p>$$<br>dp[i][j] =<br>\begin {cases}<br>0, &amp; \text {mp[i][j]=1} \<br>dp[i+1][j] \mid dp[i][j+1], &amp; \text {mp[i][j]=0}<br>\end {cases}<br>$$</p><p>发现 $dp$ 中 $i$ 只由 $i+1$ 而来，所以优化一下空间：  </p><p>$$<br>dp[j] =<br>\begin {cases}<br>0, &amp; \text {mp[i][j]=1} \<br>dp[j] \mid dp[j+1], &amp; \text {mp[i][j]=0}<br>\end {cases}<br>$$</p><p>将询问离线，边 $dp$ 边查询询问，记录答案；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">char</span> s[MS][MS];</span><br><span class="line">bitset&lt;MS*MS &gt; p[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> type;</span><br><span class="line"><span class="keyword">int</span> sx,sy;</span><br><span class="line"><span class="keyword">int</span> ex,ey;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node &gt; vc[MS][MS];</span><br><span class="line"><span class="keyword">bool</span> ac[<span class="number">500005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; s[i]+<span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> type,sx,sy,ex,ey;</span><br><span class="line">cin &gt;&gt; type &gt;&gt; sx &gt;&gt; sy &gt;&gt; ex &gt;&gt; ey;</span><br><span class="line">vc[sx][sy].<span class="built_in">push_back</span>(&#123;type,sx,sy,ex,ey,i&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=m;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line"><span class="comment">// ***************************** </span></span><br><span class="line"><span class="keyword">if</span>(s[i][j] == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">p[j] |= p[j+<span class="number">1</span>];</span><br><span class="line">p[j][i*m+j] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> p[j].<span class="built_in">reset</span>();</span><br><span class="line"><span class="comment">// *****************************</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[i][j])&#123;</span><br><span class="line"><span class="keyword">if</span>(v.type == <span class="number">1</span> &amp;&amp; v.sy == v.ey &amp;&amp; p[j][v.ex*m+v.ey]) ac[v.id] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(v.type == <span class="number">2</span> &amp;&amp; v.sx == v.ex &amp;&amp; p[j][v.ex*m+v.ey]) ac[v.id] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(v.type == <span class="number">3</span> &amp;&amp; p[j][v.ex*m+v.ey]) ac[v.id] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(ac[i]) cout &lt;&lt; <span class="string">&quot;yes\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;no\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> bitset优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】2021牛客暑期多校训练营7 B xay loves monotonicity</title>
      <link href="/2021/09/11/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A57%20B%20xay%20loves%20monotonicity/"/>
      <url>/2021/09/11/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A57%20B%20xay%20loves%20monotonicity/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/11258">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>题意包含三种操作：<br>&emsp; $1.$ 将 $a_{pos}$ 改为 $val$；<br>&emsp; $2.$ 将 $b_l$ 到 $b_r$ 都异或上 $1$；<br>&emsp; $3.$ 求 $f(l,r)$；<br>定义 $f(l,r)$ 为：<br>&emsp; $1.$ 将 $l$ 加入集合 $S$；<br>&emsp; $2.$ 设 $S$ 末尾值为 $t$，找到最小的 $i$，满足 $i&gt;t$ 并且 $a_i \geq a_t$；<br>&emsp; $3.$ 如果找不到满足条件的 $i$ 则跳至第 $4$ 步，否则将 $i$ 加入到 $S$ 中，跳至第 $2$ 步；<br>&emsp; $4.$ 令 $p_1,p_2, \dots ,p_k$ 为 $S$ 经过排序后的递增序列，$f(l,r)$ 为有多少个 $i \in [l,r)$，满足 $b_{p_i} \neq b_{p_{i+1}}$；  </p><p>线段树维护节点信息有:{<br>&emsp; $a$ 数组下的区间最大值 $mx$ ；<br>&emsp; 最大值对应的 $b$ 数组下的值 $mb$，(如果多个最大值则取最右边的)；<br>&emsp; 区间答案 $val$ (也就是 $f(l,r)$ )；<br>&emsp; 懒惰标记 $la$ (因为涉及到 $b$ 数组的区间修改)；<br>}</p><p>前两种操作是基本修改操作；<br>线段树节点信息的 $mx,mb$ 很好维护，难的是如何维护区间答案 $val$ ：  </p><p>假设维护好了 $ls,rs$ 的节点信息，考虑如何得到 $rt$ 的节点信息：<br>&emsp; $ls.val$ 一定是 $rt.val$ 的组成部分，现在手握着 $ls.mx,ls,mb$ 如何得到 $rs$ 部分的贡献呢？  </p><p>定义一个函数 $cal(rt,l,r,mx,mb)$ 表示通过现在手握着的 $mx,mb$ 得到在 $[l,r]$ 这个区间内的贡献：<br>&emsp; 如果 $ls.mx &lt; mx$，那么 $ls$ 就没有贡献，只需要计算 $cal(rs,m+1,r,mx,mb)$；<br>&emsp; 否则可以快速计算出 $rs$ 的贡献 $=rt.val-ls.val$，再加上 $cal(ls,l,m,mx,mb)$；  </p><p>于是 $rt.val = ls.val + cal(rs,m+1,r,ls.mx,ls.mb)$ 就合并好了两个节点信息； </p><p>既然能合并两个节点信息了，就能维护好线段树了，那么对于询问相当于就合并多个节点信息；<br>至此第 $3$ 中操作也完成了；  </p><p>复杂度 $O(nlognlogn)$；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M1 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M2 122777</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 2000005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> a[MS], b[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> mx;</span><br><span class="line"><span class="keyword">int</span> mb;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"><span class="keyword">int</span> la;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">node ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].la)&#123;</span><br><span class="line">p[ls].mb ^= <span class="number">1</span>; </span><br><span class="line">p[rs].mb ^= <span class="number">1</span>;</span><br><span class="line">p[ls].la ^= <span class="number">1</span>;</span><br><span class="line">p[rs].la ^= <span class="number">1</span>;</span><br><span class="line">p[rt].la = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> mx,<span class="keyword">int</span> mb)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> p[rt].mx &gt;= mx? (mb^p[rt].mb):<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(p[ls].mx &lt; mx) <span class="keyword">return</span> <span class="built_in">cal</span>(rs,m+<span class="number">1</span>,r,mx,mb);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> p[rt].val - p[ls].val + <span class="built_in">cal</span>(ls,l,m,mx,mb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[rt].val = p[ls].val + <span class="built_in">cal</span>(rs,m+<span class="number">1</span>,r,p[ls].mx,p[ls].mb);</span><br><span class="line"><span class="keyword">if</span>(p[ls].mx &lt;= p[rs].mx) p[rt].mx = p[rs].mx, p[rt].mb = p[rs].mb;</span><br><span class="line"><span class="keyword">else</span> p[rt].mx = p[ls].mx, p[rt].mb = p[ls].mb;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt] = &#123;a[l],b[l],<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls); <span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify_a</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].mx = val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">modify_a</span>(pos,l,m,ls,val);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">modify_a</span>(pos,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify_b</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt].mb ^= <span class="number">1</span>;</span><br><span class="line">p[rt].la ^= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify_b</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify_b</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">get_fst</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> p[rt];</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="keyword">return</span> <span class="built_in">get_fst</span>(pos,l,m,ls);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">get_fst</span>(pos,m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(node &amp;t, <span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">t.val += <span class="built_in">cal</span>(rt,l,r,t.mx,t.mb);</span><br><span class="line"><span class="keyword">if</span>(t.mx &lt;= p[rt].mx) t.mx = p[rt].mx, t.mb = p[rt].mb;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(node &amp;ans,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="built_in">merge</span>(ans,rt,l,r);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">query</span>(ans,L,R,l,m,ls);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">query</span>(ans,L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; b[i];</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">cin &gt;&gt; m; </span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> op; cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> pos,val; cin &gt;&gt; pos &gt;&gt; val;</span><br><span class="line"><span class="built_in">modify_a</span>(pos,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r; cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="built_in">modify_b</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> l,r; cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">ans = <span class="built_in">get_fst</span>(l,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">query</span>(ans,l,r,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">cout &lt;&lt; ans.val &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护矩阵】The 2021 Shanghai Collegiate Programming Contest I. 对线</title>
      <link href="/2021/09/09/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E7%9F%A9%E9%98%B5%E3%80%91The%202021%20Shanghai%20Collegiate%20Programming%20Contest%20I.%20%E5%AF%B9%E7%BA%BF/"/>
      <url>/2021/09/09/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E7%9F%A9%E9%98%B5%E3%80%91The%202021%20Shanghai%20Collegiate%20Programming%20Contest%20I.%20%E5%AF%B9%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p><a href="http://codeforces.com/gym/103186/problem/I">题链</a></p><h1 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h1><p>三排士兵，四种操作：<br>&emsp; $1.$ 求第 $x$ 排区间 $[L,R]$ 的士兵数量；<br>&emsp; $2.$ 往第 $x$ 排区间 $[L,R]$ 增加 $y$ 名士兵；<br>&emsp; $3.$ 将第 $x$ 排与 $y$ 排区间 $[L,R]$ 同位置的士兵交换位置；<br>&emsp; $4.$ 第 $x$ 排的区间 $[L,R]$ 的士兵引导分身术，将分身派往第 $y$ 排对应位置；  </p><p>线段树维护一个 $1 \times 3$ 的矩阵，$2$ 操作就是区间加一个 $1 \times 3$ 的矩阵， $3$ 与 $4$ 操作就是区间乘一个 $3 \times 3$ 的矩阵，$lazy$ 标记先乘后加；  </p><p>如果使用 $long$ $long$，交 $c++17(64bit)$ 能省 $10s$ …；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 300009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> row,col;</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>],la_mul[MS&lt;&lt;<span class="number">2</span>],la_add[MS&lt;&lt;<span class="number">2</span>],I,O,E;</span><br><span class="line"><span class="keyword">bool</span> la_ok[MS&lt;&lt;<span class="number">2</span>]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">I = &#123;<span class="number">3</span>,<span class="number">3</span>&#125;; <span class="built_in">memset</span>(I.cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> I.cnt);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++) I.cnt[i][i] = <span class="number">1</span>;</span><br><span class="line">O = &#123;<span class="number">1</span>,<span class="number">3</span>&#125;; <span class="built_in">memset</span>(O.cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> O.cnt);</span><br><span class="line">E = &#123;<span class="number">3</span>,<span class="number">3</span>&#125;; <span class="built_in">memset</span>(E.cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> E.cnt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">node <span class="keyword">operator</span> + (node t1, node t2)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t1.row;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;t1.col;j++)</span><br><span class="line">t1.cnt[i][j] = (<span class="number">1LL</span>*t1.cnt[i][j] + t2.cnt[i][j])%mod;</span><br><span class="line"><span class="keyword">return</span> t1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">node <span class="keyword">operator</span> * (node t1, node t2)&#123;</span><br><span class="line">node t; t = &#123;t1.row,t2.col&#125;;</span><br><span class="line"><span class="built_in">memset</span>(t.cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> t.cnt);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t.row;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;t.col;j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;t1.col;k++)</span><br><span class="line">t.cnt[i][j] = (<span class="number">1LL</span>*t.cnt[i][j] + <span class="number">1LL</span>*t1.cnt[i][k]*t2.cnt[k][j])%mod; </span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">node <span class="keyword">operator</span> * (node t, LL x)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t.row;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;t.col;j++)</span><br><span class="line">t.cnt[i][j] = (<span class="number">1LL</span> * t.cnt[i][j] * x)%mod;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_mul</span><span class="params">(<span class="keyword">int</span> rt,node C)</span></span>&#123;</span><br><span class="line">p[rt] = p[rt] * C;</span><br><span class="line">la_mul[rt] = la_mul[rt] * C;</span><br><span class="line">la_add[rt] = la_add[rt] * C;</span><br><span class="line">la_ok[rt] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_add</span><span class="params">(<span class="keyword">int</span> rt,node C,LL len)</span></span>&#123;</span><br><span class="line">p[rt] = p[rt] + C*len;</span><br><span class="line">la_add[rt] = la_add[rt] + C;</span><br><span class="line">la_ok[rt] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = p[ls] + p[rs];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(la_ok[rt])&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">update_mul</span>(ls,la_mul[rt]);</span><br><span class="line"><span class="built_in">update_add</span>(ls,la_add[rt],m-l+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">update_mul</span>(rs,la_mul[rt]);</span><br><span class="line"><span class="built_in">update_add</span>(rs,la_add[rt],r-m);</span><br><span class="line">la_mul[rt] = I;</span><br><span class="line">la_add[rt] = O;</span><br><span class="line">la_ok[rt] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">la_mul[rt] = I;</span><br><span class="line">la_add[rt] = O;</span><br><span class="line">p[rt] = O;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify_add</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,node C)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="built_in">update_add</span>(rt,C,r-l+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify_add</span>(L,R,l,m,ls,C);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify_add</span>(L,R,m+<span class="number">1</span>,r,rs,C);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify_mul</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,node C)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="built_in">update_mul</span>(rt,C);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify_mul</span>(L,R,l,m,ls,C);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify_mul</span>(L,R,m+<span class="number">1</span>,r,rs,C);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt].cnt[<span class="number">0</span>][t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = (ans + <span class="built_in">query</span>(L,R,l,m,ls,t)  )%mod;</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = (ans + <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs,t))%mod;</span><br><span class="line"><span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> op;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> x,l,r; cin &gt;&gt; x &gt;&gt; l &gt;&gt; r; x--;</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,x) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> x,l,r,y; cin &gt;&gt; x &gt;&gt; l &gt;&gt; r &gt;&gt; y; x--;</span><br><span class="line">node C = O;</span><br><span class="line">C.cnt[<span class="number">0</span>][x] = y;</span><br><span class="line"><span class="built_in">modify_add</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,C);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> x,y,l,r; cin &gt;&gt; x &gt;&gt; y &gt;&gt; l &gt;&gt; r; x--; y--;</span><br><span class="line">node C = I;</span><br><span class="line"><span class="built_in">swap</span>(C.cnt[x][x],C.cnt[y][x]);</span><br><span class="line"><span class="built_in">swap</span>(C.cnt[y][y],C.cnt[x][y]);</span><br><span class="line"><span class="built_in">modify_mul</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,C);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> x,y,l,r; cin &gt;&gt; x &gt;&gt; y &gt;&gt; l &gt;&gt; r; x--; y--;</span><br><span class="line">node C = I;</span><br><span class="line">C.cnt[x][y]++;</span><br><span class="line"><span class="built_in">modify_mul</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,C);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树 扫描线】2021牛客暑期多校训练营6 H Hopping Rabbit</title>
      <link href="/2021/09/07/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E6%89%AB%E6%8F%8F%E7%BA%BF%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A56%20H%20Hopping%20Rabbit/"/>
      <url>/2021/09/07/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E6%89%AB%E6%8F%8F%E7%BA%BF%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A56%20H%20Hopping%20Rabbit/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/11257">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>由于兔子一跳能跳 $m$ 个单位，可以将所有陷阱映射到 $[0,m-1]$ 的矩阵内，当然映射很麻烦，补过的题现在看代码已经看不懂怎么映射的了…   </p><p>映射完后对以扫描线的形式遍历每一个 $y$ 值，如果这个 $y$ 值某处的 $x$ 点未被覆盖，那么这个点就是答案；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 200005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> la;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">seg</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> xl,xr,w;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;seg &gt; vc[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> ansx,ansy;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].cnt = <span class="built_in">min</span>(p[ls].cnt, p[rs].cnt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].la)&#123;</span><br><span class="line"><span class="keyword">int</span> t = p[rt].la;</span><br><span class="line">p[ls].cnt += t; p[rs].cnt += t;</span><br><span class="line">p[ls].la += t; p[rs].la += t;</span><br><span class="line">p[rt].la = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt].cnt += val;</span><br><span class="line">p[rt].la += val;</span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> l;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(p[ls].cnt == <span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">get</span>(l,m,ls);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(p[rs].cnt == <span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">get</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> y1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y2)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> lenx = <span class="built_in">max</span>(<span class="built_in">abs</span>(x2<span class="number">-0</span>), <span class="built_in">abs</span>(m-x1));</span><br><span class="line"><span class="keyword">int</span> leny = <span class="built_in">max</span>(<span class="built_in">abs</span>(y2<span class="number">-0</span>), <span class="built_in">abs</span>(m-y1));</span><br><span class="line"><span class="keyword">if</span>(lenx &gt;= x2-x1+m || leny &gt;= y2-y1+m) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cx = <span class="built_in">max</span>(x1, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> cy = <span class="built_in">max</span>(y1, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> dx = <span class="built_in">min</span>(x2, m);</span><br><span class="line"><span class="keyword">int</span> dy = <span class="built_in">min</span>(y2, m);</span><br><span class="line">dx-- ,dy--;</span><br><span class="line"></span><br><span class="line">vc[cy].<span class="built_in">push_back</span>(&#123;cx, dx, <span class="number">1</span>&#125;);</span><br><span class="line">vc[dy+<span class="number">1</span>].<span class="built_in">push_back</span>(&#123;cx, dx, <span class="number">-1</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> y1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y2)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> w = x2-x1, h = y2-y1;</span><br><span class="line"><span class="keyword">int</span> x = (x1%m+m)%m;</span><br><span class="line"><span class="keyword">int</span> y = (y1%m+m)%m;</span><br><span class="line"><span class="built_in">cal</span>(x, y, x+w, y+h);</span><br><span class="line"><span class="built_in">cal</span>(x-m, y, x+w-m, y+h);</span><br><span class="line"><span class="built_in">cal</span>(x, y-m, x+w, y+h-m);</span><br><span class="line"><span class="built_in">cal</span>(x-m, y-m, x+w-m, y+h-m);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x1,y1,x2,y2;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line"><span class="built_in">calc</span>(x1, y1, x2, y2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> t:vc[i])&#123;</span><br><span class="line"><span class="built_in">update</span>(t.xl, t.xr, <span class="number">0</span>, m<span class="number">-1</span>, <span class="number">1</span>, t.w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p[<span class="number">1</span>].cnt == <span class="number">0</span>)&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">ansx = <span class="built_in">get</span>(<span class="number">0</span>,m<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">ansy = i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; ansx &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ansy &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【三分 计算几何】2021牛客暑期多校训练营5 F Finding Points</title>
      <link href="/2021/09/07/ACM/%E3%80%90%E4%B8%89%E5%88%86%20%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A55%20F%20Finding%20Points/"/>
      <url>/2021/09/07/ACM/%E3%80%90%E4%B8%89%E5%88%86%20%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A55%20F%20Finding%20Points/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/11256">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>三分套三分，代码中先对 $x$ 三分再对 $y$ 三分，竟然是个二次函数…  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M_PI acos(-1.0)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">&#125;p[MS];</span><br><span class="line"><span class="keyword">double</span> lx,rx,ly,ry;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get_angle</span><span class="params">(<span class="keyword">double</span> x1, <span class="keyword">double</span> y1, <span class="keyword">double</span> x2, <span class="keyword">double</span> y2, <span class="keyword">double</span> x3, <span class="keyword">double</span> y3)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> theta = <span class="built_in">atan2</span>(x1 - x3, y1 - y3) - <span class="built_in">atan2</span>(x2 - x3, y2 - y3);</span><br><span class="line"><span class="keyword">if</span> (theta &gt; M_PI)</span><br><span class="line">theta -= M_PI*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (theta &lt; -M_PI)</span><br><span class="line">theta += M_PI*<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">theta = <span class="built_in">abs</span>(theta * <span class="number">180.0</span> / M_PI);</span><br><span class="line"><span class="keyword">return</span> theta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calxy</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> minn = <span class="number">180.0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> t1 = i;</span><br><span class="line"><span class="keyword">int</span> t2 = (i==n)? <span class="number">1</span>:i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">double</span> cc = <span class="built_in">get_angle</span>(p[t1].x,p[t1].y,p[t2].x,p[t2].y,x,y);</span><br><span class="line">minn = <span class="built_in">min</span>(cc,minn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> minn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cal</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> L = ly, R = ry;</span><br><span class="line"><span class="keyword">while</span>(R-L&gt;eps)&#123;</span><br><span class="line"><span class="keyword">double</span> M1 = (L*<span class="number">2</span>+R)/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">double</span> M2 = (L+R*<span class="number">2</span>)/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">double</span> T1 = <span class="built_in">calxy</span>(x,M1);</span><br><span class="line"><span class="keyword">double</span> T2 = <span class="built_in">calxy</span>(x,M2);</span><br><span class="line"><span class="keyword">if</span>(T1 &lt; T2) L = M1;</span><br><span class="line"><span class="keyword">else</span> R = M2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">calxy</span>(x,R);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">lx = ly =  MAXN;</span><br><span class="line">rx = ry = -MAXN;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">p[i] = &#123;x,y&#125;;</span><br><span class="line">lx = <span class="built_in">min</span>(lx,x); rx = <span class="built_in">max</span>(rx,x);</span><br><span class="line">ly = <span class="built_in">min</span>(ly,y); ry = <span class="built_in">max</span>(ry,y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> l = lx,r = rx;</span><br><span class="line"><span class="keyword">while</span>(r-l&gt;eps)&#123;</span><br><span class="line"><span class="keyword">double</span> m1 = (l*<span class="number">2</span>+r)/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">double</span> m2 = (l+r*<span class="number">2</span>)/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">double</span> t1 = <span class="built_in">cal</span>(m1);</span><br><span class="line"><span class="keyword">double</span> t2 = <span class="built_in">cal</span>(m2);</span><br><span class="line"><span class="keyword">if</span>(t1 &lt; t2) l = m1;</span><br><span class="line"><span class="keyword">else</span> r = m2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="built_in">cal</span>(r);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.10lf\n&quot;</span>,ans);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
            <tag> 三分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【思维】2021牛客暑期多校训练营5 C Cheating and Stealing</title>
      <link href="/2021/09/07/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A55%20C%20Cheating%20and%20Stealing/"/>
      <url>/2021/09/07/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A55%20C%20Cheating%20and%20Stealing/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/11256">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>当局分为 $i$，局数是 $O(n/i)$ 的，如果可以 $O(1)$ 地处理每一局，那么复杂度是 $O(nlogn)$ 的；  </p><p>具体思路为记录前缀数组：<br>&emsp; $qz[1][i]$ 表示 $W$ 的前缀和；<br>&emsp; $qz[0][i]$ 表示 $L$ 的前缀和；<br>记录位置数组：<br>&emsp; $pos[1][i]$ 表示第 $i$ 个 $W$ 所在位置；<br>&emsp; $pos[0][i]$ 表示第 $i$ 个 $L$ 所在位置；<br>那么就可以 $O(1)$ 地找到某个位置后面第 $k$ 个 $W$ 或 $L$ 的位置；<br>&emsp; $pos[sum[i-1] + k]$</p><p>如果出现平分也就是 $\vert cntW-cntL \vert &lt;= 1$ 的情况，就是需要知道从第 $i$ 轮开始，到第几轮才会打破平均；<br>&emsp; $p[i]$ 表示从第 $i$ 局开始什么时候打破平局；<br>&emsp; $p[i] = (s[i] == s[i+1])?i+1:p[i+2]$；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line"><span class="keyword">int</span> qz[<span class="number">2</span>][MS];</span><br><span class="line"><span class="keyword">int</span> pos[<span class="number">2</span>][MS], cnt[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[MS];</span><br><span class="line"><span class="keyword">int</span> f[MS];</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">a[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">a[i] = (LL)a[i<span class="number">-1</span>]*(LL)(n+<span class="number">1</span>)%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">jdg</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r1 = n+<span class="number">1</span>, r2 = n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(qz[<span class="number">1</span>][n] - qz[<span class="number">1</span>][l<span class="number">-1</span>] &gt;= x)&#123;</span><br><span class="line">r1 = pos[<span class="number">1</span>][ qz[<span class="number">1</span>][l<span class="number">-1</span>] + x ];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(qz[<span class="number">0</span>][n] - qz[<span class="number">0</span>][l<span class="number">-1</span>] &gt;= x)&#123;</span><br><span class="line">r2 = pos[<span class="number">0</span>][ qz[<span class="number">0</span>][l<span class="number">-1</span>] + x ];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> r = <span class="built_in">min</span>(r1, r2);</span><br><span class="line"><span class="keyword">if</span>(r &gt; n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cnt1 = qz[<span class="number">1</span>][r] - qz[<span class="number">1</span>][l<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">int</span> cnt2 = qz[<span class="number">0</span>][r] - qz[<span class="number">0</span>][l<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(cnt1-cnt2) &gt;= <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt1 &gt; cnt2) f[x]++;</span><br><span class="line"><span class="keyword">return</span> r+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt1 == cnt2) r = p[r+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">else</span> r = p[r];</span><br><span class="line"><span class="keyword">if</span>(r == <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cnt1 = qz[<span class="number">1</span>][r] - qz[<span class="number">1</span>][l<span class="number">-1</span>];</span><br><span class="line">cnt2 = qz[<span class="number">0</span>][r] - qz[<span class="number">0</span>][l<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(cnt1 &gt; cnt2) f[x]++;</span><br><span class="line"><span class="keyword">return</span> r+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l &lt; n &amp;&amp; l)&#123;</span><br><span class="line">l = <span class="built_in">jdg</span>(l,x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n; <span class="built_in">init</span>();</span><br><span class="line">cin &gt;&gt; s+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="string">&#x27;W&#x27;</span>)&#123;</span><br><span class="line">qz[<span class="number">1</span>][i] = qz[<span class="number">1</span>][i<span class="number">-1</span>] + <span class="number">1</span>;</span><br><span class="line">qz[<span class="number">0</span>][i] = qz[<span class="number">0</span>][i<span class="number">-1</span>];</span><br><span class="line">pos[<span class="number">1</span>][++cnt[<span class="number">1</span>]] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;L&#x27;</span>)&#123;</span><br><span class="line">qz[<span class="number">0</span>][i] = qz[<span class="number">0</span>][i<span class="number">-1</span>] + <span class="number">1</span>;</span><br><span class="line">qz[<span class="number">1</span>][i] = qz[<span class="number">1</span>][i<span class="number">-1</span>];</span><br><span class="line">pos[<span class="number">0</span>][++cnt[<span class="number">0</span>]] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p[n] = p[n+<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] == s[i+<span class="number">1</span>]) p[i] = i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> p[i] = p[i+<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cal</span>(i);</span><br><span class="line"><span class="comment">//cout &lt;&lt; f[i] &lt;&lt; &quot; &quot;;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">ans += (LL)f[i]*(LL)a[i]%mod;</span><br><span class="line">ans %= mod;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans%mod &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】HDU 7116 Lowbit</title>
      <link href="/2021/09/07/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91HDU%207116%20Lowbit/"/>
      <url>/2021/09/07/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91HDU%207116%20Lowbit/</url>
      
        <content type="html"><![CDATA[<p><a href="https://acm.hdu.edu.cn/showproblem.php?pid=7116">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>区间对每个数加 $lowbit(a_i)$ ，区间求和；  </p><p>由于对每个数加 $lowbit$ 的操作能很快使得一个数字在二进制下只剩最高位的 $1$，所以区间加 $lowbit$ 的操作做不了多少次，于是将每个数分为二进制下最高位的 $1$，以及其他位和；  </p><p>对于区间加 $lowbit$ 操作暴力处理即可；  </p><p>线段树维护节点信息：{<br>&emsp; 区间最高位和；<br>&emsp; 区间除最高位的和；<br>&emsp; 区间除最高位剩下的和是否为 $0$；<br>}  </p><p>如果区间除最高位剩下的和为 $0$，那么 $lowbit$ 操作时对于这个区间直接对最高位和 $*2$ 就可以了，否则递归到叶子节点将其暴力修改；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// f[n] = 276601605(691504013^n - 308495997^n) (mod 1e9+9)</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    LL high;</span><br><span class="line">    LL low;</span><br><span class="line">    LL la;</span><br><span class="line">    LL ok;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">lowbit</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    p[rt].high = (p[ls].high + p[rs].high)%mod;</span><br><span class="line">    p[rt].low  = (p[ls].low  + p[rs].low )%mod;</span><br><span class="line">    p[rt].ok = p[ls].ok &amp; p[rs].ok;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[rt].la != <span class="number">1</span>)&#123;</span><br><span class="line">        p[ls].high *= p[rt].la;  p[ls].high %= mod;</span><br><span class="line">        p[rs].high *= p[rt].la;  p[rs].high %= mod;</span><br><span class="line">        p[ls].la   *= p[rt].la;  p[ls].la   %= mod;</span><br><span class="line">        p[rs].la   *= p[rt].la;  p[rs].la   %= mod;</span><br><span class="line">        p[rt].la = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    p[rt] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">        LL x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="keyword">while</span>(x - <span class="built_in">lowbit</span>(x))&#123;</span><br><span class="line">            p[rt].low += <span class="built_in">lowbit</span>(x);</span><br><span class="line">            x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!p[rt].low) p[rt].ok = <span class="number">1</span>;</span><br><span class="line">        p[rt].high = x;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(l,m,ls);</span><br><span class="line">    <span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[rt].ok &amp;&amp; L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">        p[rt].high &lt;&lt;= <span class="number">1</span>;     p[rt].high %= mod;</span><br><span class="line">        p[rt].la   &lt;&lt;= <span class="number">1</span>;     p[rt].la   %= mod;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">        <span class="keyword">if</span>( p[rt].low + <span class="built_in">lowbit</span>(p[rt].low) == p[rt].high )&#123;</span><br><span class="line">            p[rt].ok = <span class="number">1</span>;</span><br><span class="line">            p[rt].low = <span class="number">0</span>;</span><br><span class="line">            p[rt].high &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">            p[rt].high %= mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            p[rt].low += <span class="built_in">lowbit</span>(p[rt].low);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">push_down</span>(rt);</span><br><span class="line">    <span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls);</span><br><span class="line">    <span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line">    <span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">        <span class="keyword">return</span> (p[rt].high + p[rt].low)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">push_down</span>(rt);</span><br><span class="line">    LL ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(m &gt;= L) ans = (ans + <span class="built_in">query</span>(L,R,l,m,ls))%mod;</span><br><span class="line">    <span class="keyword">if</span>(m &lt;  R) ans = (ans + <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs))%mod;</span><br><span class="line">    <span class="keyword">return</span> ans%mod; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="keyword">int</span> op,l,r;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">update</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line"><span class="comment">//            cout &lt;&lt; i &lt;&lt; &quot; : &quot; &lt;&lt; query(i,i,1,n,1) &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        cout &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//    srand(time(0));</span></span><br><span class="line">    LL ce = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; ce;</span><br><span class="line"><span class="comment">//    scanf(&quot;%lld&quot;,&amp;ce);</span></span><br><span class="line">    <span class="keyword">while</span>(ce--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】HDU 5818 Joint Stacks</title>
      <link href="/2021/09/07/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91HDU%205818%20Joint%20Stacks/"/>
      <url>/2021/09/07/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91HDU%205818%20Joint%20Stacks/</url>
      
        <content type="html"><![CDATA[<p><a href="https://acm.hdu.edu.cn/showproblem.php?pid=5818">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>由于合并的方式是按照 $push$ 的顺序构成的，所以用线段树维护一个序列，每次 $push$ 操作新增一个值并标记这个值是 $A$ 还是 $B$ 栈的，$pop$ 操作就在序列上找到对应栈的最新的一个值并删除，可以通过二分解决，$merge$ 操作就是将现有的所有值都标记为 $A$ 或者 $B$ 栈的，是区间覆盖操作；  </p><p>线段树维护的节点信息有：{<br>&emsp; 区间是 $A$ 栈和 $B$ 栈的值的个数；<br>&emsp; 叶节点的值；<br>&emsp; 懒惰标记；<br>}</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000005</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// f[n] = 276601605(691504013^n - 308495997^n) (mod 1e9+9)</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL ca;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL cnt[<span class="number">2</span>];</span><br><span class="line">LL val;</span><br><span class="line">LL la;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].cnt[<span class="number">0</span>] = p[rt].cnt[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">p[rt].val = <span class="number">0</span>; p[rt].la = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls); <span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++) </span><br><span class="line">p[rt].cnt[i] = p[ls].cnt[i] + p[rs].cnt[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].la != <span class="number">-1</span>)&#123;</span><br><span class="line">LL t = p[rt].la;</span><br><span class="line">LL sum;</span><br><span class="line">sum = p[ls].cnt[<span class="number">0</span>] + p[ls].cnt[<span class="number">1</span>];</span><br><span class="line">p[ls].cnt[<span class="number">0</span>] = p[ls].cnt[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">p[ls].cnt[t] = sum;</span><br><span class="line"></span><br><span class="line">sum = p[rs].cnt[<span class="number">0</span>] + p[rs].cnt[<span class="number">1</span>];</span><br><span class="line">p[rs].cnt[<span class="number">0</span>] = p[rs].cnt[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">p[rs].cnt[t] = sum;</span><br><span class="line"></span><br><span class="line">p[ls].la = p[rs].la = t;</span><br><span class="line">p[rt].la = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].val = val, p[rt].cnt[t] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">modify</span>(pos,l,m,ls,val,t);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">modify</span>(pos,m+<span class="number">1</span>,r,rs,val,t);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R) <span class="keyword">return</span> p[rt].cnt[t];</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">query</span>(L,R,l,m,ls,t);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs,t);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">remove</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].cnt[<span class="number">0</span>] = p[rt].cnt[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> p[rt].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line">LL ans;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) ans = <span class="built_in">remove</span>(pos,l,m,ls);</span><br><span class="line"><span class="keyword">else</span> ans = <span class="built_in">remove</span>(pos,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line"><span class="keyword">return</span> ans; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cover</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">LL sum = p[rt].cnt[<span class="number">0</span>] + p[rt].cnt[<span class="number">1</span>];</span><br><span class="line">p[rt].cnt[<span class="number">0</span>] = p[rt].cnt[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">p[rt].cnt[t] = sum;</span><br><span class="line">p[rt].la = t;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">cover</span>(L,R,l,m,ls,t);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">cover</span>(L,R,m+<span class="number">1</span>,r,rs,t);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; ++ca &lt;&lt; <span class="string">&quot;:\n&quot;</span>;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>); tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">char</span> op[<span class="number">9</span>], c, d; cin &gt;&gt; op+<span class="number">1</span> &gt;&gt; c;</span><br><span class="line"><span class="keyword">int</span> t = c==<span class="string">&#x27;A&#x27;</span>?<span class="number">0</span>:<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(op[<span class="number">2</span>] == <span class="string">&#x27;u&#x27;</span>)&#123;</span><br><span class="line">LL val; cin &gt;&gt; val;</span><br><span class="line">tot++;</span><br><span class="line"><span class="built_in">modify</span>(tot,<span class="number">1</span>,n,<span class="number">1</span>,val,t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op[<span class="number">2</span>] == <span class="string">&#x27;o&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = tot;</span><br><span class="line"><span class="keyword">int</span> ans = l;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line"><span class="keyword">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">query</span>(mid,tot,<span class="number">1</span>,n,<span class="number">1</span>,t) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">ans = mid;</span><br><span class="line">l = mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> r = mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">remove</span>(ans,<span class="number">1</span>,n,<span class="number">1</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op[<span class="number">2</span>] == <span class="string">&#x27;e&#x27;</span>)&#123;</span><br><span class="line">cin &gt;&gt; d;</span><br><span class="line"><span class="keyword">if</span>(tot &gt;= <span class="number">1</span>) <span class="built_in">cover</span>(<span class="number">1</span>,tot,<span class="number">1</span>,n,<span class="number">1</span>,t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//srand(time(0));</span></span><br><span class="line">LL ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%lld&quot;,&amp;ce);</span></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Manacher 主席树】2017中国大学生程序设计竞赛 哈尔滨站 A Palindrome</title>
      <link href="/2021/09/03/ACM/%E3%80%90Manacher%20%E4%B8%BB%E5%B8%AD%E6%A0%91%E3%80%912017%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AB%9E%E8%B5%9B%20%E5%93%88%E5%B0%94%E6%BB%A8%E7%AB%99%20A%20Palindrome/"/>
      <url>/2021/09/03/ACM/%E3%80%90Manacher%20%E4%B8%BB%E5%B8%AD%E6%A0%91%E3%80%912017%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AB%9E%E8%B5%9B%20%E5%93%88%E5%B0%94%E6%BB%A8%E7%AB%99%20A%20Palindrome/</url>
      
        <content type="html"><![CDATA[<p><a href="https://acm.hdu.edu.cn/showproblem.php?pid=6230">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>由题意寻找长度为  $3n-2$ 且满足 $s_i = s_{2n-i} = s_{2n+i-2}$ 的字串个数；   </p><p>通过手写上述公式，可以发现是两个回文子串叠在一起了，即以位置 $n$ 为中心，区间 $[1,2n-1]$ 为回文串，位置 $2n-1$ 为中心，区间 $[n,3n-2]$ 为回文串；  </p><p>通过 $Manacher$ 算法可以求得以 $s_i$ 为中心，最大回文串的半径长度 $d_i$ ；    </p><p>如果 $s_i$ 为中心的半径内，有一个位置 $s_j$，且以 $s_j$ 为中心的回文串半径长度包含到了 $s_i$ 的位置，那么以 $s_i$ 和 $s_j$ 为中心组成的字串，就是满足条件的字串；   </p><p>枚举位置 $i$，即以 $s_i$ 为中心，寻找以 $s_i$ 为中心的半径内的 $j$ ($i&lt;j&lt;i+d_i$)，满足 $d_j&gt;j-i$ 的个数，$d_j&gt;j-i$ 可以变为 $i&gt;j-d_j$；  </p><p>于是问题转化为在区间$(i,i+d_i)$查找小于 $i$ 的数的个数，这里使用的是主席树；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tm first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> val second</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// f[n] = 276601605(691504013^n - 308495997^n) (mod 1e9+9)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line"><span class="keyword">int</span> d1[MS];</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">LL cnt;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> rtpos[MS], tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">manacher</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// C++ Version</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, l = <span class="number">0</span>, r = <span class="number">-1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> k = (i &gt; r) ? <span class="number">1</span> : <span class="built_in">min</span>(d1[l + r - i], r - i + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">0</span> &lt;= i - k &amp;&amp; i + k &lt; n &amp;&amp; s[i - k] == s[i + k]) &#123;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line">d1[i] = k--;</span><br><span class="line"><span class="keyword">if</span> (i + k &gt; r) &#123;</span><br><span class="line">l = i - k;</span><br><span class="line">r = i + k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> lart,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line">p[rt] = p[lart];</span><br><span class="line">p[rt].cnt++;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> rt;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) p[rt].l = <span class="built_in">update</span>(p[lart].l,l,m,pos);</span><br><span class="line"><span class="keyword">else</span> p[rt].r = <span class="built_in">update</span>(p[lart].r,m+<span class="number">1</span>,r,pos);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line"><span class="keyword">if</span>(l &lt;= val) <span class="keyword">return</span> p[R].cnt - p[L].cnt;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= val) <span class="keyword">return</span> <span class="built_in">query</span>(p[L].l,p[R].l,l,m,val);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(p[L].r,p[R].r,m+<span class="number">1</span>,r,val) + p[p[R].l].cnt - p[p[L].l].cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line">tot = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">n = <span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="built_in">manacher</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--) d1[i] = d1[i<span class="number">-1</span>];</span><br><span class="line"><span class="comment">//for(int i=1;i&lt;=n;i++) cout &lt;&lt; d1[i] &lt;&lt; &quot; &quot;; cout &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">a[i] = i-d1[i]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">rtpos[i] = <span class="built_in">update</span>(rtpos[i<span class="number">-1</span>],<span class="number">1</span>,n,a[i]);</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l = i+<span class="number">1</span>, r = i+d1[i]<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(l &gt; r) <span class="keyword">continue</span>;</span><br><span class="line">ans += <span class="built_in">query</span>(rtpos[l<span class="number">-1</span>],rtpos[r],<span class="number">1</span>,n,i);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">LL ce = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; ce;</span><br><span class="line"><span class="comment">//scanf(&quot;%lld&quot;,&amp;ce);</span></span><br><span class="line"><span class="keyword">while</span>(ce--) &#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 主席树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【单调队列】2021牛客暑期多校训练营5 K King of Range</title>
      <link href="/2021/08/29/ACM/%E3%80%90%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A55%20K%20King%20of%20Range/"/>
      <url>/2021/08/29/ACM/%E3%80%90%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A55%20K%20King%20of%20Range/</url>
      
        <content type="html"><![CDATA[<h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>给定数列，求有多少个子区间最大值减最小值 $&lt;=k$；<br>单调队列维护区间最大值和最小值，维护双指针即可；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">deque&lt;LL &gt; mx,mn;</span><br><span class="line">LL a[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (m--)&#123;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line">LL ans = (n+<span class="number">1</span>)*n/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (!mx.<span class="built_in">empty</span>()) mx.<span class="built_in">pop_back</span>();</span><br><span class="line"><span class="keyword">while</span> (!mn.<span class="built_in">empty</span>()) mn.<span class="built_in">pop_back</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">while</span> (!mx.<span class="built_in">empty</span>() &amp;&amp; a[ mx.<span class="built_in">back</span>() ] &lt; a[i]) mx.<span class="built_in">pop_back</span>();</span><br><span class="line"><span class="keyword">while</span> (!mn.<span class="built_in">empty</span>() &amp;&amp; a[ mn.<span class="built_in">back</span>() ] &gt; a[i]) mn.<span class="built_in">pop_back</span>();</span><br><span class="line">mx.<span class="built_in">push_back</span>(i);</span><br><span class="line">mn.<span class="built_in">push_back</span>(i);</span><br><span class="line"><span class="keyword">while</span> (a[mx.<span class="built_in">front</span>()] - a[mn.<span class="built_in">front</span>()] &gt; k)&#123;</span><br><span class="line">l++;</span><br><span class="line"><span class="keyword">while</span> (mx.<span class="built_in">front</span>() &lt; l) mx.<span class="built_in">pop_front</span>();</span><br><span class="line"><span class="keyword">while</span> (mn.<span class="built_in">front</span>() &lt; l) mn.<span class="built_in">pop_front</span>();</span><br><span class="line">&#125;</span><br><span class="line">ans -= (i-l+<span class="number">1</span>);</span><br><span class="line">     &#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单调队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护区间覆盖】2021牛客暑期多校训练营4 E Tree Xor</title>
      <link href="/2021/08/27/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E8%A6%86%E7%9B%96%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A54%20E%20Tree%20Xor/"/>
      <url>/2021/08/27/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E8%A6%86%E7%9B%96%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A54%20E%20Tree%20Xor/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/11255">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>给定 $n$ 个节点的树，每个节点有取值区间 $[L,R]$，每条边都有一个权值 $w$，表示 $u,v$ 异或值为 $w$，询问有多少种构造方式；  </p><p>首先确定了一个点的值，那么整棵树的各个点的权值就确定了，不妨以 $1$ 号点为根，计算出根节点到其他点路径异或和 $d_i$，如果根节点取 $a$，那么其他点的值 $d_i$ 都要异或上 $a$；  </p><p>问题变为求合法 $a$ 的数量；  </p><p>一个区间的值都异或上同一个值，会得到若干个连续区间，可以通过每个点的取值区间异或上 $d_i$ 得到对根节点的种种约束条件，那么可以用线段树的递归结构 (在 $[0,2^{30}-1]$ 上划分) 将点 $i$ 的取值区间划分为若干个小区间，这样若干个小区间异或上同一值都能得到一个个连续的区间，这些就是对根节点的约束条件，在权值线段树上做覆盖，最后查找被覆盖 $n$ 次的有多少个值就是答案了；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN (1&lt;&lt;30)-1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span><span class="comment">//</span></span><br><span class="line"><span class="keyword">int</span> l,r;<span class="comment">// </span></span><br><span class="line">&#125;c[MS]; <span class="comment">// 每个节点的取值区间 </span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span><span class="comment">//</span></span><br><span class="line"><span class="keyword">int</span> poi,val;<span class="comment">//</span></span><br><span class="line">&#125;;<span class="comment">//</span></span><br><span class="line">vector&lt;nod &gt; vc[MS];<span class="comment">// 存图以及边权val </span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tree</span>&#123;</span><span class="comment">// 权值线段树 </span></span><br><span class="line"><span class="keyword">int</span> l,r,val;<span class="comment">//</span></span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">6</span>];<span class="comment">//</span></span><br><span class="line"><span class="keyword">int</span> tot;<span class="comment">// tot  用于动态开点 </span></span><br><span class="line"><span class="keyword">int</span> root;<span class="comment">// root 根节点 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> d[MS]; <span class="comment">// 点 1=&gt;i 的路径异或和 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// bfs =&gt; d[]: bfs 得到 d[] 数组 </span></span><br><span class="line"><span class="comment">// vis 表示点 i 是否被访问 </span></span><br><span class="line"><span class="keyword">int</span> vis[MS];</span><br><span class="line">queue&lt;nod &gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">Q.<span class="built_in">push</span>(&#123;<span class="number">1</span>,<span class="number">0</span>&#125;);</span><br><span class="line">vis[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">nod t = Q.<span class="built_in">front</span>();</span><br><span class="line">Q.<span class="built_in">pop</span>();</span><br><span class="line">d[t.poi] = t.val;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> nb:vc[t.poi])&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[nb.poi])&#123;</span><br><span class="line">vis[nb.poi] = <span class="number">1</span>;</span><br><span class="line">Q.<span class="built_in">push</span>(&#123;nb.poi, t.val^nb.val&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间覆盖 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> &amp;rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt) rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt].val++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify</span>(L,R,l,m,p[rt].l);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify</span>(L,R,m+<span class="number">1</span>,r,p[rt].r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找权值线段树, 寻找覆盖次数为 n 的区间 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> cnt)</span></span>&#123;</span><br><span class="line">cnt += p[rt].val;</span><br><span class="line"><span class="keyword">if</span>(cnt == n)&#123;</span><br><span class="line"><span class="keyword">return</span> (r-l+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(p[rt].l) ans += <span class="built_in">get_sum</span>(l,m,p[rt].l,cnt);</span><br><span class="line"><span class="keyword">if</span>(p[rt].r) ans += <span class="built_in">get_sum</span>(m+<span class="number">1</span>,r,p[rt].r,cnt);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将区间 [l,r] ^ val =&gt; [L,R]; </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="comment">/*方式: </span></span><br><span class="line"><span class="comment"> 1.在区间[l,r]中寻找一个值, 使得 num^val 最小</span></span><br><span class="line"><span class="comment">2.按位分类讨论, 枚举第i位:</span></span><br><span class="line"><span class="comment">如果l的第i位 和 R的第i位相同, 则num的第i位只能与lr的相同</span></span><br><span class="line"><span class="comment">否则就到了第i位可以0/1任选的地方了, 往后与val的第i位相同即可</span></span><br><span class="line"><span class="comment">3.[L,R]的区间长度与[l,r]相同, L = num^val </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t = ( ~(l^r) ) &amp; ( (<span class="number">1ll</span>&lt;&lt;<span class="number">31</span>)<span class="number">-1</span> ); </span><br><span class="line"><span class="keyword">int</span> L = l ^ (t&amp;val);</span><br><span class="line"><span class="keyword">int</span> R = L + (r-l);</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;[&quot; &lt;&lt; L &lt;&lt; &quot;,&quot; &lt;&lt; R &lt;&lt; &quot;] &quot;;</span></span><br><span class="line"><span class="comment">// 在权值线段树上覆盖[L,R]区间 </span></span><br><span class="line"><span class="built_in">modify</span>(L,R,<span class="number">0</span>,MAXN,root);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将[L,R]划分为多个连续的区间 [l1,r1],[l2,r2]...[ln,rn]; </span></span><br><span class="line"><span class="comment">// 使得 [li,ri]^val 都能得到一段连续的区间 </span></span><br><span class="line"><span class="comment">// [l,r] 有这样的性质:</span></span><br><span class="line"><span class="comment">// l的前 k位与r相同, 后 31-k 位取值范围为 00..0 ~ 11..1 </span></span><br><span class="line"><span class="comment">// 线段树的划分方式很合适 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;[&quot; &lt;&lt; l &lt;&lt; &quot;,&quot; &lt;&lt; r &lt;&lt; &quot;] ^ &quot; &lt;&lt; val &lt;&lt; &quot; = &quot;;</span></span><br><span class="line"><span class="built_in">cal</span>(l, r, val);</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">divide</span>(L,R,l,m,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">divide</span>(L,R,m+<span class="number">1</span>,r,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">c[i] = &#123;l,r&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v,val;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v &gt;&gt; val;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(&#123;v,val&#125;);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(&#123;u,val&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">bfs</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; d[i] &lt;&lt; &quot; &quot;;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;poi = &quot; &lt;&lt; i &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;[&quot; &lt;&lt; c[i].l &lt;&lt; &quot;,&quot; &lt;&lt; c[i].r &lt;&lt; &quot;] : \n&quot;;</span></span><br><span class="line"><span class="built_in">divide</span>(c[i].l, c[i].r, <span class="number">0</span>, MAXN, d[i]);</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;\n\n&quot;;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="built_in">get_sum</span>(<span class="number">0</span>, MAXN,root, <span class="number">0</span>);</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树 单调栈】2021牛客暑期多校训练营2 A Arithmetic Progression</title>
      <link href="/2021/08/27/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E5%8D%95%E8%B0%83%E6%A0%88%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A52%20A%20Arithmetic%20Progression/"/>
      <url>/2021/08/27/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E5%8D%95%E8%B0%83%E6%A0%88%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A52%20A%20Arithmetic%20Progression/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/11253">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>给定长度为 $n$ 的数组，问有多少个子区间排序后是等差数列，即条件 $\forall i \in (1,n),2a_i=a_{i-1}+a_{i+1},$ 为真 ；   </p><p>对于序列 $b_i$，若其排序后是等差数列，则必有公差 $d = gcd(b_2-b_1,b_3-b_2,\dots )$；   </p><p>于是问题转化为统计区间 $[L,R]$ 满足：<br>$$max(a[L\dots R]) - min(a[L\dots R]) = (r-l)*\vert gcd(\dots )\vert$$<br>枚举 $R$，结合单调栈维护 $max$ 以及 $min$，做区间修改；<br>对于不同的 $L$，$gcd$ 不同的分段只有 $log$ 段，在 $L$ 每次 $gcd$ 改变时做单点修改；<br>又<br>$$max(l,r) - min(l,r) - (r-l)*\vert gcd(\dots )\vert &gt;= 0$$<br>于是统计线段树上的最小值以及出现的次数，就能得到枚举的这个 $R$ 下，满足条件的区间个数；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL mn;</span><br><span class="line">LL cnt;</span><br><span class="line">LL gcd;</span><br><span class="line">LL la;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL sta[<span class="number">2</span>][MS], tp[<span class="number">2</span>];</span><br><span class="line">LL ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(LL rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p[ls].mn &lt; p[rs].mn) p[rt].mn = p[ls].mn, p[rt].cnt = p[ls].cnt;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(p[ls].mn &gt; p[rs].mn) p[rt].mn = p[rs].mn, p[rt].cnt = p[rs].cnt;</span><br><span class="line"><span class="keyword">else</span> p[rt].mn = p[ls].mn, p[rt].cnt = p[ls].cnt + p[rs].cnt;</span><br><span class="line"><span class="keyword">if</span>(p[ls].gcd == p[rs].gcd) p[rt].gcd = p[ls].gcd;</span><br><span class="line"><span class="keyword">else</span> p[rt].gcd = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(LL rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].la)&#123;</span><br><span class="line">p[ls].mn += p[rt].la; p[rs].mn += p[rt].la;</span><br><span class="line">p[ls].la += p[rt].la; p[rs].la += p[rt].la;</span><br><span class="line">p[rt].la = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(LL l,LL r,LL rt)</span></span>&#123;</span><br><span class="line">p[rt] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">LL m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify_add</span><span class="params">(LL L,LL R,LL l,LL r,LL rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt].mn += val;</span><br><span class="line">p[rt].la += val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">LL m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify_add</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify_add</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify_gcd</span><span class="params">(LL L,LL R,LL l,LL r,LL rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R &amp;&amp; p[rt].gcd &amp;&amp; (val%p[rt].gcd == <span class="number">0</span>))&#123;</span><br><span class="line">p[rt].mn -= p[rt].gcd;</span><br><span class="line">p[rt].la -= p[rt].gcd;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">LL t = p[rt].gcd;</span><br><span class="line">p[rt].gcd = __gcd(t,val);</span><br><span class="line">p[rt].mn += ( t*(R-l) - p[rt].gcd*(R-l+<span class="number">1</span>) );</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">LL m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify_gcd</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify_gcd</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(LL L,LL R,LL l,LL r,LL rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].mn == <span class="number">0</span>) <span class="keyword">return</span> p[rt].cnt;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">LL m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">query</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line">tp[<span class="number">0</span>] = tp[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(LL i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line"><span class="comment">// max </span></span><br><span class="line"><span class="keyword">while</span>(tp[<span class="number">0</span>] &amp;&amp; a[ sta[<span class="number">0</span>][tp[<span class="number">0</span>]] ] &lt;= a[i])&#123;</span><br><span class="line"><span class="built_in">modify_add</span>(sta[<span class="number">0</span>][tp[<span class="number">0</span>]<span class="number">-1</span>]+<span class="number">1</span>,sta[<span class="number">0</span>][tp[<span class="number">0</span>]],<span class="number">1</span>,n,<span class="number">1</span>,-a[ sta[<span class="number">0</span>][tp[<span class="number">0</span>]] ]);</span><br><span class="line">tp[<span class="number">0</span>]--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">modify_add</span>(sta[<span class="number">0</span>][tp[<span class="number">0</span>]]+<span class="number">1</span>,i,<span class="number">1</span>,n,<span class="number">1</span>, a[i]);</span><br><span class="line">sta[<span class="number">0</span>][++tp[<span class="number">0</span>]] = i;</span><br><span class="line"><span class="comment">// min</span></span><br><span class="line"><span class="keyword">while</span>(tp[<span class="number">1</span>] &amp;&amp; a[ sta[<span class="number">1</span>][tp[<span class="number">1</span>]] ] &gt;= a[i])&#123;</span><br><span class="line"><span class="built_in">modify_add</span>(sta[<span class="number">1</span>][tp[<span class="number">1</span>]<span class="number">-1</span>]+<span class="number">1</span>,sta[<span class="number">1</span>][tp[<span class="number">1</span>]],<span class="number">1</span>,n,<span class="number">1</span>, a[ sta[<span class="number">1</span>][tp[<span class="number">1</span>]] ]);</span><br><span class="line">tp[<span class="number">1</span>]--;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">modify_add</span>(sta[<span class="number">1</span>][tp[<span class="number">1</span>]]+<span class="number">1</span>,i,<span class="number">1</span>,n,<span class="number">1</span>,-a[i]);</span><br><span class="line">sta[<span class="number">1</span>][++tp[<span class="number">1</span>]] = i;</span><br><span class="line"><span class="comment">// gcd</span></span><br><span class="line"><span class="keyword">if</span>(i &gt; <span class="number">1</span>) <span class="built_in">modify_gcd</span>(<span class="number">1</span>,i<span class="number">-1</span>,<span class="number">1</span>,n,<span class="number">1</span>,<span class="built_in">abs</span>(a[i]-a[i<span class="number">-1</span>]));</span><br><span class="line">ans += <span class="built_in">query</span>(<span class="number">1</span>,i,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="built_in">clear</span>();</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">LL ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; ce;</span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单调栈 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【分块】2021牛客暑期多校训练营2 L WeChat Walk</title>
      <link href="/2021/08/27/ACM/%E3%80%90%E5%88%86%E5%9D%97%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A52%20L%20WeChat%20Walk/"/>
      <url>/2021/08/27/ACM/%E3%80%90%E5%88%86%E5%9D%97%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A52%20L%20WeChat%20Walk/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/11253">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>给定人数 $n$，关系数 $m$，操作数 $q$，每个人都有自己的微信步数榜单，其中只会显示和自己有关系的人，$q$ 步操作表示第 $i$ 个时间单元，第 $u_i$ 人上传 $w_i$ 步到微信运动上，累加到以往的步数上，输出每个人有几个时间单元时冠军(只有自己的步数严格大于和自己有关系的人的步数才算冠军)；  </p><p>暴力分块： 将所有的点分为小点 $(deg &lt;= \sqrt n)$ 和大点；<br>维护所有的点的 $w[x]$，表示 $x$ 点的步数；<br>维护大点的 $mx[x]$，表示大点周围的最大值；<br>维护大点的 $C[x][val]$，表示大点 $x$ 的权值 $val$ 下有哪些小点；<br>维护所有点的 $last[x]$，表示 $x$ 点上一次取得冠军的时间；<br>主要维护好 $last[]$ 的信息；  </p><p>对于小点暴力处理周围的点的信息，如果是冠军，则将自身加入到周围大点的 $C[][ w[x] ]$；<br>对于大点：<br>&emsp; 对周围的大点直接更新；<br>&emsp; 对周围的小点直接查找 $C[x][L…R]$，其中 $L$ 是 $w[x]$，$R$ 是 $w[x]+val$；   </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 10009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 200009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sqMS 500</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; bg[MS];</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; C[sqMS][MAXN];</span><br><span class="line"><span class="keyword">int</span> id[MS] ,cnt;</span><br><span class="line"><span class="keyword">int</span> sizee;</span><br><span class="line"><span class="keyword">int</span> w[MS];</span><br><span class="line"><span class="keyword">int</span> mx[MS];</span><br><span class="line"><span class="keyword">int</span> last[MS];</span><br><span class="line"><span class="keyword">int</span> ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">sizee = <span class="built_in">sqrt</span>(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">int</span>)vc[i].<span class="built_in">size</span>() &gt; sizee)&#123;</span><br><span class="line">id[i] = ++cnt;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[i])&#123;</span><br><span class="line">bg[v].<span class="built_in">push_back</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x,val;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; val;</span><br><span class="line">w[x] += val;</span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">int</span>)vc[x].<span class="built_in">size</span>() &lt;= sizee)&#123; <span class="comment">// 是小点 </span></span><br><span class="line"><span class="keyword">int</span> ischamp = <span class="number">1</span>; <span class="comment">// ischamp只对大点有效，小点无效 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[x])&#123; <span class="comment">// 对于周围的点暴力更新 </span></span><br><span class="line"><span class="keyword">if</span>(w[x] &gt;= w[v] &amp;&amp; last[v])&#123;</span><br><span class="line">ac[v] += i-last[v];</span><br><span class="line">last[v] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">mx[v] = <span class="built_in">max</span>(mx[v],w[x]);</span><br><span class="line"><span class="keyword">if</span>(w[x] &lt;= w[v]) ischamp = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ischamp)&#123; <span class="comment">// 是冠军，更新周围大点信息 </span></span><br><span class="line"><span class="keyword">if</span>(!last[x]) last[x] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:bg[x])&#123;</span><br><span class="line">C[id[v]][w[x]].<span class="built_in">push_back</span>(x); <span class="comment">// 在大点的该权值下存放点 x </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(last[x]) ac[x] += i-last[x] ,last[x] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123; <span class="comment">// 是大点 </span></span><br><span class="line"><span class="keyword">int</span> ischamp = w[x] &gt; mx[x]; <span class="comment">// ischamp只对大点有效，小点无效 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:bg[x])&#123; <span class="comment">// 对周围的大点更新 </span></span><br><span class="line"><span class="keyword">if</span>(w[x] &gt;= w[v] &amp;&amp; last[v])&#123;</span><br><span class="line">ac[v] += i-last[v];</span><br><span class="line">last[v] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">mx[v] = <span class="built_in">max</span>(mx[v],w[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=w[x]-val+<span class="number">1</span>;j&lt;=w[x];j++)&#123; <span class="comment">// 扫描权值包含的小点信息，有些小点不在权值范围内，所以小点的mx没有维护 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:C[id[x]][j])&#123;</span><br><span class="line"><span class="keyword">if</span>(w[x] &gt;= w[v] &amp;&amp; last[v])&#123;</span><br><span class="line">ac[v] += i-last[v];</span><br><span class="line">last[v] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ischamp &amp;&amp; !last[x]) last[x] = i;</span><br><span class="line"><span class="keyword">if</span>(!ischamp &amp;&amp; last[x]) ac[x] += i-last[x] ,last[x] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(last[i])&#123;</span><br><span class="line">ac[i] += n-last[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】2021牛客暑期多校训练营1 J Journey among Railway Stations</title>
      <link href="/2021/08/27/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A51%20J%20Journey%20among%20Railway%20Stations/"/>
      <url>/2021/08/27/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A51%20J%20Journey%20among%20Railway%20Stations/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/11166">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>给定每个车站的停车时间区间以及相邻车站之间的路程花费时间，包含三个操作：<br>&emsp; $1.$ $0$ $L$ $R$ 表示车从 $L$ 出发能否在 $[L,R]$ 所有车站都停留；<br>&emsp; $2.$ $1$ $i$ $w$ 表示将第 $i$ 段路的时间花费改为 $w$；<br>&emsp; $3.$ $2$ $i$ $p$ $q$ 表示将第 $i$ 个车站的停车时间区间改为 $[p,q]$；  </p><p>线段树维护区间问题；  </p><p>定义车站区间： $L$ 到 $R$ 的车站集合；<br>定义节点信息：{<br>&emsp; 最早出发时间 $op$ ；<br>&emsp; 最晚到达时间 $ed$ ；<br>&emsp; 该车站区间前一段路的花费 $precost$ ；<br>&emsp; 该车站区间总路程花费 $sumcost$ ；<br>&emsp; 该车站区间 $L$ 到 $R$ 是否可达 $ok$ ；<br>}  </p><p>对于两个节点的合并：<br>&emsp; 有相邻两车站区间 $t1,t2$，$t2$ 在 $t1$ 之后，设合并结果为 $t$，因为 $t1$ 到 $t2$ 有一段中间路程 $cost$，也就是 $t2$ 的 $precost$，则设 $t2’$ 为 $t2$ 的 $op,ed$ 都减去 ( $t2.precost + t1.sumcost$ )，那么：<br>&emsp;&emsp; $t.op = max(t1.op,t2’.op)$;<br>&emsp;&emsp; $t.ed = min(t1.ed,t2’.ed)$;<br>&emsp;&emsp; $t.precost = t1.precost$;<br>&emsp;&emsp; $t.sumcost = t1.sumcost + t2’.sumcost + t2’.precost$;<br>&emsp;&emsp; $t.ok = t1.ok$ &amp;&amp; $t2.ok$ &amp;&amp; $(t1.op &lt;= t2.op)$;  </p><p>两个修改就直接修改节点对应信息，查询就合并后查 $ok$ 的值；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL op,ed;</span><br><span class="line">LL precost;</span><br><span class="line">LL sumcost;</span><br><span class="line">LL ok;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL u[MS],v[MS];</span><br><span class="line">LL cost[MS];</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">cross</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line">node t;</span><br><span class="line">t.op = <span class="built_in">max</span>( t1.op ,t2.op );</span><br><span class="line">t.ed = <span class="built_in">min</span>( t1.ed ,t2.ed );</span><br><span class="line">t.precost = t1.precost;</span><br><span class="line">t.sumcost = t1.sumcost + t2.sumcost + t2.precost;</span><br><span class="line">t.ok = ( t1.op &lt;= t2.ed &amp;&amp; t1.ok &amp;&amp; t2.ok)? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">node t1 = p[ls];</span><br><span class="line">node t2 = p[rs];</span><br><span class="line">t2.op -= ( t2.precost + t1.sumcost );</span><br><span class="line">t2.ed -= ( t2.precost + t1.sumcost );</span><br><span class="line">p[rt] = <span class="built_in">cross</span>(t1,t2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt] = &#123;u[l],v[l],cost[l],<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt] = &#123;u[l],v[l],cost[l],<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">update</span>(pos,l,m,ls);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(pos,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">get_ans</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &lt; L) <span class="keyword">return</span> <span class="built_in">get_ans</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(m &gt;= R) <span class="keyword">return</span> <span class="built_in">get_ans</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">node t1 = <span class="built_in">get_ans</span>(L,R,l,m,ls);</span><br><span class="line">node t2 = <span class="built_in">get_ans</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line">t2.op -= ( t2.precost + t1.sumcost );</span><br><span class="line">t2.ed -= ( t2.precost + t1.sumcost );</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">cross</span>(t1,t2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; u[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; v[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++) cin &gt;&gt; cost[i];</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL op,x,y,z;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">0</span>)&#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">node ans = <span class="built_in">get_ans</span>(x,y,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(ans.ok) cout &lt;&lt; <span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">cin &gt;&gt; cost[x+<span class="number">1</span>];</span><br><span class="line"><span class="built_in">update</span>(x+<span class="number">1</span>,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">cin &gt;&gt; z;</span><br><span class="line">cin &gt;&gt; u[z] &gt;&gt; v[z];</span><br><span class="line"><span class="built_in">update</span>(z,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">cin &gt;&gt; ce;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【思维】2021牛客暑期多校训练营1 K Knowledge Test about Match</title>
      <link href="/2021/08/27/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A51%20K%20Knowledge%20Test%20about%20Match/"/>
      <url>/2021/08/27/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%912021%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A51%20K%20Knowledge%20Test%20about%20Match/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/11166">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>因为要使权值最小，冒泡排序根据交换 $i,j$ 位置的值能否使整体更小来排序。<br>其中权值的计算一定要加上根号（如果不加就是直接递增排序一次冒泡后数组就不改变了，加根号后第二次冒泡排序时数组可能还会改变）。<br>跑 $3-5$ 次冒泡就能跑出来。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS];</span><br><span class="line"><span class="keyword">double</span> val[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">10000</span>;i++) val[i] = <span class="built_in">sqrt</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Bubble_sort</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(val[<span class="built_in">abs</span>(p[i]-i)]+val[<span class="built_in">abs</span>(p[j]-j)] &gt; val[<span class="built_in">abs</span>(p[i]-j)]+val[<span class="built_in">abs</span>(p[j]-i)])&#123;</span><br><span class="line"><span class="built_in">swap</span>(p[i],p[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">cin &gt;&gt; ce;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">random_shuffle</span>(p,p+n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line"><span class="built_in">Bubble_sort</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">cout &lt;&lt; p[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组】2018 ICPC Asia Jakarta Regional Contest H. Lexical Sign Sequence</title>
      <link href="/2021/08/25/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%912018%20ICPC%20Asia%20Jakarta%20Regional%20Contest%20H.%20Lexical%20Sign%20Sequence/"/>
      <url>/2021/08/25/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%912018%20ICPC%20Asia%20Jakarta%20Regional%20Contest%20H.%20Lexical%20Sign%20Sequence/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/gym/102001/problem/H">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>贪心，先将所有的 $0$ 位置都填上 $-1$，对于每一个约束区间 $[L,R]$ 来说，最好先更改靠近 $R$ 的位置，将 $-1$ 变为 $1$ 知道满足约束条件即可；<br>所以可以先对所有约束条件按照 $R$ 从小到大以及 $L$ 从小到大排序，通过树状数组维护区间和解决；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> eps 1e-13</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> mod 1000000009</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MAXN 50001</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// f[n] = 276601605(691504013^n - 308495997^n) (mod 1e9+9)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> p[MS];</span><br><span class="line"><span class="keyword">int</span> v[MS]; </span><br><span class="line"><span class="keyword">int</span> tr[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,c;</span><br><span class="line">&#125;a[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t1.r == t2.r) <span class="keyword">return</span> t1.l &lt; t2.l;</span><br><span class="line"><span class="keyword">return</span> t1.r &lt; t2.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=n;pos+=<span class="built_in">lowbit</span>(pos)) tr[pos] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos)) ans += tr[pos];</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i];</span><br><span class="line"><span class="keyword">if</span>(!p[i])&#123;</span><br><span class="line">p[i] = <span class="number">-1</span>;</span><br><span class="line">v[i] = <span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">add</span>(i,p[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r,c;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r &gt;&gt; c;</span><br><span class="line">a[i] = &#123;l,r,c&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+m+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">node t = a[i];</span><br><span class="line"><span class="keyword">int</span> sum = <span class="built_in">query</span>(t.r) - <span class="built_in">query</span>(t.l<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(sum &gt;= t.c) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> cha = t.c - sum;</span><br><span class="line"><span class="keyword">while</span>(t.r &gt;= t.l &amp;&amp; cha &gt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(v[t.r])&#123;</span><br><span class="line">v[t.r] = <span class="number">0</span>;</span><br><span class="line">p[t.r] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">add</span>(t.r,<span class="number">2</span>);</span><br><span class="line">cha -= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">t.r--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cha &gt; <span class="number">0</span>)&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cout &lt;&lt; p[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;Impossible\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//srand((unsigned)time(0));</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    <span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//    cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//    scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line">    <span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【思维】2018-2019 ICPC Northwestern European Regional Programming Contest (NWERC 2018) A. Access Points</title>
      <link href="/2021/08/24/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%912018-2019%20ICPC%20Northwestern%20European%20Regional%20Programming%20Contest%20(NWERC%202018)%20A.%20Access%20Points/"/>
      <url>/2021/08/24/ACM/%E3%80%90%E6%80%9D%E7%BB%B4%E3%80%912018-2019%20ICPC%20Northwestern%20European%20Regional%20Programming%20Contest%20(NWERC%202018)%20A.%20Access%20Points/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/gym/102483/problem/A">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>题中可将 $x,y$ 轴相互独立出来，则需要解决子问题：<br>给定一个数列 $A$ ，构造一个非递减的序列 $B$，使得 $\sum_{i=1}^{n}(A_i-B_i)^2$ 最小；<br>考虑其中某一段取值为 $a$ 时，总和 $\sum_{i=l}^{r}(A_i-a)^2$ 最小，则 $a=\frac{\sum_{i=l}^{r}A_i}{(r-l+1)}$，也就是这一段的平均值，也就是将 $A$ 分为许多段，每一段取平均；<br>其中如果第 $i$ 段的平均值大于第 $i+1$ 段的平均值，则可以将这两段合并；<br>具体见代码…   </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> eps 1e-13</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> mod 1000000009</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MAXN 50001</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// f[n] = 276601605(691504013^n - 308495997^n) (mod 1e9+9)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">LL x[MS], y[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL sum,cnt;</span><br><span class="line">&#125;;</span><br><span class="line">deque&lt;node &gt; Q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cal</span><span class="params">(LL p[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>()) Q.<span class="built_in">pop_back</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">node t = &#123;p[i],<span class="number">1</span>&#125;; <span class="comment">// 独立作为一段 </span></span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>() &amp;&amp; Q.<span class="built_in">back</span>().sum*t.cnt &gt; t.sum*Q.<span class="built_in">back</span>().cnt)&#123; <span class="comment">// 本段的平均值小于队列尾部那段平均值 </span></span><br><span class="line">t.sum += Q.<span class="built_in">back</span>().sum; <span class="comment">// 合并 </span></span><br><span class="line">t.cnt += Q.<span class="built_in">back</span>().cnt;</span><br><span class="line">Q.<span class="built_in">pop_back</span>();</span><br><span class="line">&#125;</span><br><span class="line">Q.<span class="built_in">push_back</span>(t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 计算结果 </span></span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cc = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">node t = Q.<span class="built_in">front</span>(); Q.<span class="built_in">pop_front</span>();</span><br><span class="line"><span class="keyword">double</span> val = <span class="number">1.0</span>*t.sum/t.cnt;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=cc;i&lt;=cc+t.cnt<span class="number">-1</span>;i++)&#123;</span><br><span class="line">ans += (val-p[i])*(val-p[i]);</span><br><span class="line">&#125;</span><br><span class="line">cc += t.cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; x[i] &gt;&gt; y[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="built_in">cal</span>(x,n) + <span class="built_in">cal</span>(y,n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.9f\n&quot;</span>,ans);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//srand((unsigned)time(0));</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    <span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//    cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//    scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line">    <span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护区间加等比数列】Codeforces Round FF (Div. 2) E. DZY Loves Fibonacci Numbers</title>
      <link href="/2021/08/22/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E5%8A%A0%E7%AD%89%E6%AF%94%E6%95%B0%E5%88%97%E3%80%91/"/>
      <url>/2021/08/22/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E5%8A%A0%E7%AD%89%E6%AF%94%E6%95%B0%E5%88%97%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.ml/problemset/problem/447/E">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>题目需要完成两个操作：<br>&emsp; $1.$ 区间加上一个斐波那契数列；<br>&emsp; $2.$ 查询区间和；  </p><p>由于 $\sqrt{5}$ 在 $mod 1e9+9$ 下是有二次剩余的，所以斐波那契的通项公式：<br>$$F(n) = \frac{\sqrt{5}}{5}[(\frac{1+\sqrt{5}}{2})^n-(\frac{1-\sqrt{5}}{2})^n]$$<br>可以转变为：<br>$$F(n) = 276601605(691504013^n - 308495997^n) (mod 1e9+9)$$  </p><p>于是题目操作变为区间加上两个等比数列，线段树维护；  </p><h1 id="如何维护"><a href="#如何维护" class="headerlink" title="如何维护"></a>如何维护</h1><p>相同公比是有可加性的，例如：  </p><blockquote><p>A = {2,6,18,54}, 首项为 2，公比为 3；<br>B = {1,3,9,27},  首项为 1，公比为 3；<br>将 A 与 B 相加，得到：<br>C = {3,9,27,81}, 首项为 3，公比为 3；  </p></blockquote><p>所以线段树维护节点区间对应的首项值，当然有几个公比就维护几棵线段树；<br>斐波那契通项公式中有两个公比 $Q[2] = {691504013,308495997}$，所以维护两棵线段树；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> eps 1e-13</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> mod 1000000009</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MAXN 50001</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MS 300005</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// f[n] = 276601605(691504013^n - 308495997^n) (mod 1e9+9)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">LL Q[<span class="number">2</span>] = &#123;<span class="number">691504013</span>, <span class="number">308495997</span>&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL S[<span class="number">2</span>];</span><br><span class="line">LL sum;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL inv[<span class="number">2</span>];</span><br><span class="line">LL c[<span class="number">2</span>][MS];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans = ans*a%mod;</span><br><span class="line">a = a*a%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">inv[<span class="number">0</span>] = <span class="built_in">qpow</span>(<span class="number">1LL</span>-Q[<span class="number">0</span>],mod<span class="number">-2</span>);</span><br><span class="line">inv[<span class="number">1</span>] = <span class="built_in">qpow</span>(<span class="number">1LL</span>-Q[<span class="number">1</span>],mod<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++) c[<span class="number">0</span>][i] = <span class="built_in">qpow</span>(Q[<span class="number">0</span>],i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++) c[<span class="number">1</span>][i] = <span class="built_in">qpow</span>(Q[<span class="number">1</span>],i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].sum = (p[ls].sum + p[rs].sum)%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">cin &gt;&gt; p[rt].sum;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls); <span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL valS,<span class="keyword">int</span> Qid)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = r-l+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(Qid == <span class="number">0</span>) p[rt].sum = (p[rt].sum + valS*(<span class="number">1LL</span>-c[Qid][len])%mod *inv[Qid]%mod)%mod;</span><br><span class="line"><span class="keyword">else</span>  p[rt].sum = (p[rt].sum - valS*(<span class="number">1LL</span>-c[Qid][len])%mod *inv[Qid]%mod)%mod;</span><br><span class="line">p[rt].S[Qid] = (p[rt].S[Qid] + valS)%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].S[i])&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">update</span>(ls,l,m,p[rt].S[i],i);</span><br><span class="line">LL S = p[rt].S[i]*c[i][m+<span class="number">1</span>-l]%mod;</span><br><span class="line"><span class="built_in">update</span>(rs,m+<span class="number">1</span>,r,S,i);</span><br><span class="line">p[rt].S[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL valS,<span class="keyword">int</span> Qid)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">LL S = valS*c[Qid][l-L]%mod;</span><br><span class="line"><span class="built_in">update</span>(rt,l,r,S,Qid);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify</span>(L,R,l,m,ls,valS,Qid);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify</span>(L,R,m+<span class="number">1</span>,r,rs,valS,Qid);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> (p[rt].sum%mod+mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = (ans + <span class="built_in">query</span>(L,R,l,m,ls))%mod;</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = (ans + <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs))%mod;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m; <span class="built_in">init</span>(); <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> op,l,r; cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">modify</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">276601605LL</span>*Q[<span class="number">0</span>]%mod,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">modify</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">276601605LL</span>*Q[<span class="number">1</span>]%mod,<span class="number">1</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="built_in">query</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//srand((unsigned)time(0));</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    <span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//    cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//    scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line">    <span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护区间P次方和】HDU 2578 Transformation</title>
      <link href="/2021/08/22/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4P%E6%AC%A1%E6%96%B9%E5%92%8C%E3%80%91HDU%202578%20Transformation/"/>
      <url>/2021/08/22/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4P%E6%AC%A1%E6%96%B9%E5%92%8C%E3%80%91HDU%202578%20Transformation/</url>
      
        <content type="html"><![CDATA[<p><a href="https://acm.hdu.edu.cn/showproblem.php?pid=4578">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>题给操作包括：<br>&emsp; $1.$ 区间每个数 $+c$；<br>&emsp; $2.$ 区间每个数 $*c$；<br>&emsp; $3.$ 区间每个数变为 $c$；<br>&emsp; $4.$ 询问区间每个数的 $p$ 次方和 $(1&lt;=p&lt;=3)$；<br>三种操作都能转化为区间 $*k+b$ 的形式：<br>&emsp; $1.$ 区间每个数 $+c$ =&gt; $*1+c$<br>&emsp; $2.$ 区间每个数 $*c$；=&gt; $*c+0$<br>&emsp; $3.$ 区间每个数变为 $c$；=&gt; $*0+c$  </p><p>考虑如何维护区间 $p$ 次方和；<br>将 $sum1,sum2,sum3$ 表示为区间和，平方和，次方和；<br>对于乘法操作：<br>&emsp; $1.$ $\sum_{i=l}^{r}a_ix = x\sum_{i=l}^{r}a_i$；<br>&emsp; $2.$ $\sum_{i=l}^{r}(a_ix)^2 = x^2\sum_{i=l}^{r}a_i^2$；<br>&emsp; $3.$ $\sum_{i=l}^{r}(a_ix)^3 = x^3\sum_{i=l}^{r}a_i^3$；<br>对于加法操作：<br>&emsp; $1.$ $\sum_{i=l}^{r}(a_i+x) = \sum_{i=l}^{r}a_i+(r-l+1)*x$；<br>&emsp; $2.$ $\sum_{i=l}^{r}(a_i+x)^2 = \sum_{i=l}^{r}a_i^2+2x\sum_{i=l}^{r}a_i+(r-l+1)x^2$；<br>&emsp; $3.$ $\sum_{i=l}^{r}(a_i+x)^3 = \sum_{i=l}^{r}a_i^3+3x\sum_{i=l}^{r}a_i^2+3x^2\sum_{i=l}^{r}a_i+(r-l+1)x^3$；  </p><p>然后上线段树；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> eps 1e-13</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> mod 10007</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MAXN 50001</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL sum1,sum2,sum3;</span><br><span class="line">LL add,mul;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls); <span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].sum1 = (p[ls].sum1 + p[rs].sum1)%mod;</span><br><span class="line">p[rt].sum2 = (p[ls].sum2 + p[rs].sum2)%mod;</span><br><span class="line">p[rt].sum3 = (p[ls].sum3 + p[rs].sum3)%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL k,LL b)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = r-l+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(k != <span class="number">1</span>)&#123;</span><br><span class="line">node t = p[rt];</span><br><span class="line">p[rt].sum3 = t.sum3*k*k*k%mod;</span><br><span class="line">p[rt].sum2 = t.sum2*k*k%mod;</span><br><span class="line">p[rt].sum1 = t.sum1*k%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(b)&#123;</span><br><span class="line">node t = p[rt];</span><br><span class="line">p[rt].sum3 = (t.sum3 + t.sum2*b*<span class="number">3</span> + t.sum1*b*b*<span class="number">3</span> + b*b*b*len)%mod;</span><br><span class="line">p[rt].sum2 = (t.sum2 + t.sum1*b*<span class="number">2</span> + b*b*len)%mod;</span><br><span class="line">p[rt].sum1 = (t.sum1 + b*len)%mod;</span><br><span class="line">&#125;</span><br><span class="line">p[rt].mul = p[rt].mul*k%mod;</span><br><span class="line">p[rt].add = (p[rt].add*k+b)%mod; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">update</span>(ls,l,m,p[rt].mul,p[rt].add);</span><br><span class="line"><span class="built_in">update</span>(rs,m+<span class="number">1</span>,r,p[rt].mul,p[rt].add);</span><br><span class="line">p[rt].mul = <span class="number">1</span>, p[rt].add = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> op,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>) <span class="built_in">update</span>(rt,l,r,<span class="number">1</span>,val);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) <span class="built_in">update</span>(rt,l,r,val,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(rt,l,r,<span class="number">0</span>,val);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify</span>(L,R,l,m,ls,op,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify</span>(L,R,m+<span class="number">1</span>,r,rs,op,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">1</span>) <span class="keyword">return</span> p[rt].sum1;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(k == <span class="number">2</span>) <span class="keyword">return</span> p[rt].sum2;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> p[rt].sum3;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = (ans + <span class="built_in">query</span>(L,R,l,m,ls,k))%mod;</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = (ans + <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs,k))%mod;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> op,l,r,val;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; l &gt;&gt; r &gt;&gt; val;</span><br><span class="line"><span class="keyword">if</span>(op != <span class="number">4</span>) <span class="built_in">modify</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,op,val);</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="built_in">query</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,val) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//srand((unsigned)time(0));</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    <span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//    cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//    scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n &gt;&gt; m &amp;&amp; n &amp;&amp; m) <span class="built_in">solve</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护区间加等差数列】洛谷 P1438 无聊的数列</title>
      <link href="/2021/08/21/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E5%8A%A0%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E3%80%91%E6%B4%9B%E8%B0%B7%20P1438%20%E6%97%A0%E8%81%8A%E7%9A%84%E6%95%B0%E5%88%97/"/>
      <url>/2021/08/21/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E5%8A%A0%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E3%80%91%E6%B4%9B%E8%B0%B7%20P1438%20%E6%97%A0%E8%81%8A%E7%9A%84%E6%95%B0%E5%88%97/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1438">题链</a></p><h1 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h1><p>将原数组差分，区间 $[L,R]$ 加等差数列变为：<br>&emsp; $1.$ 在原数组 $L$ 的位置 $+k$；<br>&emsp; $2.$ 在原数组 $[L+1,R]$ 的位置 $+d$；<br>&emsp; $3.$ 在原数组 $R+1$ 的位置 $-(d*(R-L)+k)$；<br>询问变为：求区间 $[1,pos]$ 的和；<br>线段树区间修改，区间求和；  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> eps 1e-13</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MAXN 50001</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL val;</span><br><span class="line">LL la;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].val = p[ls].val + p[rs].val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].la)&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[ls].val += p[rt].la*(m-l+<span class="number">1</span>);</span><br><span class="line">p[rs].val += p[rt].la*(r-m);</span><br><span class="line">p[ls].la += p[rt].la;</span><br><span class="line">p[rs].la += p[rt].la;</span><br><span class="line">p[rt].la = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].val = a[l] - a[l<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt].val += val*(r-l+<span class="number">1</span>);</span><br><span class="line">p[rt].la += val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">query</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> op;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">LL l,r,k,d;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r &gt;&gt; k &gt;&gt; d;</span><br><span class="line"><span class="built_in">modify</span>(l,l,<span class="number">1</span>,n,<span class="number">1</span>,k);</span><br><span class="line"><span class="keyword">if</span>(l+<span class="number">1</span>&lt;=r) <span class="built_in">modify</span>(l+<span class="number">1</span>,r,<span class="number">1</span>,n,<span class="number">1</span>,d);</span><br><span class="line"><span class="keyword">if</span>(r+<span class="number">1</span>&lt;=n) <span class="built_in">modify</span>(r+<span class="number">1</span>,r+<span class="number">1</span>,<span class="number">1</span>,n,<span class="number">1</span>,-(d*(r-l)+k));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> pos; cin &gt;&gt; pos;</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(<span class="number">1</span>,pos,<span class="number">1</span>,n,<span class="number">1</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//srand((unsigned)time(0));</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    <span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//    cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//    scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line">    <span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h1><p>在线段树上打永久标记，节点有两个信息，节点区间的首项以及公差，修改时维护节点首项公差即可；<br>例如：  </p><blockquote><p>数列：1 2 3 4 5，首项为 1，公差为 1；<br>数列：1 3 5 7 9，首项为 1，公差为 2；<br>将两个数列相加得到：<br>数列 2 5 8 11 14，首项为 2，公差为 3；  </p></blockquote><p>求和的时候带着标记向下求；  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> eps 1e-13</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MAXN 50001</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL S,D;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">cin &gt;&gt; p[rt].S;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL valS,LL valD)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt].S += valS+(l-L)*valD;</span><br><span class="line">p[rt].D += valD;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify</span>(L,R,l,m,ls,valS,valD);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify</span>(L,R,m+<span class="number">1</span>,r,rs,valS,valD);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line">val += p[rt].S+<span class="number">1LL</span>*(pos-l)*p[rt].D;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> val;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="keyword">return</span> <span class="built_in">query</span>(pos,l,m,ls,val);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(pos,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> op;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">LL l,r,k,d;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r &gt;&gt; k &gt;&gt; d;</span><br><span class="line"><span class="built_in">modify</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,k,d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> pos; cin &gt;&gt; pos;</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(pos,<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">0</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//srand((unsigned)time(0));</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    <span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//    cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//    scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line">    <span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【二分 树状数组】North America Championship 2020 G.ICPC Camp</title>
      <link href="/2021/08/20/ACM/%E3%80%90%E4%BA%8C%E5%88%86%20%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91North%20America%20Championship%202020%20G.ICPC%20Camp/"/>
      <url>/2021/08/20/ACM/%E3%80%90%E4%BA%8C%E5%88%86%20%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91North%20America%20Championship%202020%20G.ICPC%20Camp/</url>
      
        <content type="html"><![CDATA[<p><a href="https://vjudge.net/problem/Kattis-icpccamp">题链</a></p><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>设题给的两个数组为 $a,b$，二分答案，相当于对每一个 $a_i$ 能在 $b$ 数组中选择的值加了限制，将 $a,b$ 数组排序之后，对于每一个 $a_i$ 在 $b$ 数组中能选择的范围就是一个区间了；  </p><p>所以解决一个子问题，有 $n$ 个区间 $[l,r]$，每个区间需要选择一个数字，全部选择完后最多能有多少个不重复的数字；  </p><p>对于 $n$ 个区间按照右端点 $r$ 从小到大排序，若相同则对左端点 $l$ 从小到大排序，对于每一个 $r$ 都选择大于等于它对应的 $l$ 的最小的未被选过的值，也就是大于等于 $l$ 的 $mex$，若无法选择则跳过这个区间；</p><p>用二分加树状数组查找大于等于 $l$ 的 $mex$；</p><h1 id="如何查找"><a href="#如何查找" class="headerlink" title="如何查找"></a>如何查找</h1><p>在 $[l,r]$ 中二分一个 $mid$，查找 $[l,mid]$ 中有多少个被选择的值，若小于区间长度则 $mex$ 在 $[l,mid]$ 内；  </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><p>复杂度 $O(nlogmlognlogn)$，$m$ 是值域…竟然跑完了；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> eps 1e-13</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MAXN 2e9</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MS 200005</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">int</span> n,m1,m2,l,r,h;</span><br><span class="line"><span class="keyword">int</span> a[MS], b[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">&#125;p[MS];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line">LL tr[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t1.r == t2.r) <span class="keyword">return</span> t1.l &lt; t2.l;</span><br><span class="line"><span class="keyword">return</span> t1.r &lt; t2.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;MS;pos+=<span class="built_in">lowbit</span>(pos)) tr[pos] += val; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos)) ans += tr[pos];</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m1;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> tl = p[i].l;</span><br><span class="line"><span class="keyword">int</span> tr = p[i].r;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(tl &lt;= tr)&#123;</span><br><span class="line"><span class="keyword">int</span> m = tl+tr&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">query</span>(m) - <span class="built_in">query</span>(p[i].l<span class="number">-1</span>) &lt; m-p[i].l+<span class="number">1</span>)&#123;</span><br><span class="line">t = m;</span><br><span class="line">tr = m<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> tl = m+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t != <span class="number">-1</span>)&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="built_in">add</span>(t,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">jdg</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="comment">// 记录区间 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m1;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(h-a[i] &lt; a[i]-x)&#123;</span><br><span class="line">p[i] = &#123;<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> L = <span class="built_in">min</span>(a[i]-x,h-a[i]);</span><br><span class="line"><span class="keyword">int</span> R = <span class="built_in">min</span>(a[i]+x,h-a[i]);</span><br><span class="line">p[i].l = <span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+m2+<span class="number">1</span>,L) - b;</span><br><span class="line">p[i].r = <span class="built_in">upper_bound</span>(b+<span class="number">1</span>,b+m2+<span class="number">1</span>,R) - b - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(p+<span class="number">1</span>,p+m1+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="built_in">memset</span>(tr,<span class="number">0</span>,<span class="keyword">sizeof</span> tr);</span><br><span class="line"><span class="comment">// 计算能选择的最多不重复数字 </span></span><br><span class="line"><span class="keyword">int</span> cc = <span class="built_in">cal</span>();</span><br><span class="line"><span class="keyword">return</span> cc &gt;= n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m1 &gt;&gt; m2 &gt;&gt; h; r = h;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m1;i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m2;i++) cin &gt;&gt; b[i];</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+m1+<span class="number">1</span>); <span class="built_in">sort</span>(b+<span class="number">1</span>,b+m2+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">jdg</span>(mid))&#123;</span><br><span class="line">    ans = mid;</span><br><span class="line">    r = mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> l = mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//srand((unsigned)time(0));</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">//freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    <span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//    cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//    scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line">    <span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护区间两两乘积和】2021 杭电多校第九场 1006 Guess the weight</title>
      <link href="/2021/08/18/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E4%B8%A4%E4%B8%A4%E4%B9%98%E7%A7%AF%E5%92%8C%E3%80%912021%20%E6%9D%AD%E7%94%B5%E5%A4%9A%E6%A0%A1%E7%AC%AC%E4%B9%9D%E5%9C%BA%201006%20Guess%20the%20weight/"/>
      <url>/2021/08/18/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E4%B8%A4%E4%B8%A4%E4%B9%98%E7%A7%AF%E5%92%8C%E3%80%912021%20%E6%9D%AD%E7%94%B5%E5%A4%9A%E6%A0%A1%E7%AC%AC%E4%B9%9D%E5%9C%BA%201006%20Guess%20the%20weight/</url>
      
        <content type="html"><![CDATA[<p><a href="https://acm.hdu.edu.cn/contests/contest_show.php?cid=991">题链</a></p><h1 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h1><p>假设拿到的第一张牌的费用是 $i$，牌库中费用 $&lt;i$ 的有 $x$ 张，费用 $&gt;i$ 大的有 $y$ 张；<br>如果 $x&lt;=y$，那就需要猜 “$greater$”；<br>如果 $x&gt; y$，那就需要猜 “$smaller$”；  </p><p>开一个<strong>权值线段树</strong>，$a_i$ 表示费用为 $i$ 的有多少张，需要确定一个中值 $mid$，当 $i&lt;=mid$ 时猜 “$greater$”， $i&gt;mid$ 时猜 “$smaller$”；</p><p>考虑抽到第一张牌费用为 $i$ 时，此时抽这张牌的概率 $P = \frac{a_i}{sum}$，$sum$ 为总牌数：<br>&emsp; 当 $i&lt;=mid$ 时，在剩下的牌中选择到费用 $j&gt;i$ 的概率是 $\frac{ \sum_{j&gt;i}a_j }{ sum-1 }$，则 $P = \frac{ a_i\sum_{j&gt;i}a_j }{ sum(sum-1) }$；<br>&emsp; 当 $i&gt;mid$ &emsp;时，在剩下的牌中选择到费用 $j&lt;i$ 的概率是 $\frac{ \sum_{j&lt;i}a_j }{ sum-1 }$，则 $P = \frac{ a_i\sum_{j&lt;i}a_j }{ sum(sum-1) }$； </p><p>那么对于总概率 $P =  [\sum_{i&lt;=mid}a_i\sum_{j&gt;i}a_j + \sum_{i&gt;mid}a_i\sum_{j&lt;i}a_j] / [sum(sum-1)] $；</p><p>对于该公式的 $a_ia_j$并不好维护，所以考虑相反的方式计算 $P$ 值；</p><p>&emsp; 当 $i&lt;=mid$ 时，在剩下的牌中选择费用 $j&lt;=i$；<br>&emsp; 当 $i&gt;mid$ &emsp;时，在剩下的牌中选择费用 $j&gt;=i$；  </p><p>于是计算的总概率 $P = 1 -  [\sum_{i&lt;=mid}a_i[(\sum_{j&lt;=i}a_j)-1] + \sum_{i&gt;mid}a_i[(\sum_{j&gt;=i}a_j)-1]] / [sum(sum-1)] $；<br>(这里的 $-1$ 是指选取第一张牌所以 $-1$ )；</p><p>其中公式化简后有 $\sum_{}a_i\sum_{}a_j$ 与 $\sum_{}a_i$，就是需要维护<strong>区间和</strong>以及<strong>区间两两乘积和</strong>；  </p><h1 id="如何维护"><a href="#如何维护" class="headerlink" title="如何维护"></a>如何维护</h1><p>假设某根节点 $rt$ 的左右孩子节点 $ls,rs$，已经维护好了他们的区间和 $sum$ 以及区间两两乘积和 $mulsum$，那么根节点的信息如此：$${ ls.sum+rs.sum, ls.mulsum+rs.mulsum+ls.sum*rs.sum }$$  </p><p>就如 $ls = {a_1+a_2, a_1^2+a_2^2+a_1a_2}$，$rs = {a_3,a_3^2}$；<br>$rt.mulsum = a_1^2+a_2^2+a_3^2+a_1a_2+(a_1+a_2)*(a_3)$</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL ,LL &gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> eps 1e-13</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MAXN 200001</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> MS 200005</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL sum;</span><br><span class="line">LL mulsum;</span><br><span class="line">&#125;p[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = &#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].sum = p[ls].sum + p[rs].sum;</span><br><span class="line">p[rt].mulsum = p[ls].mulsum + p[rs].mulsum + p[ls].sum*p[rs].sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].sum += val;</span><br><span class="line">p[rt].mulsum = p[rt].sum*p[rt].sum;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">modify</span>(pos,l,m,ls,val);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">modify</span>(pos,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_mid</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> kth)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> l;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(kth &lt;= p[ls].sum) <span class="keyword">return</span> <span class="built_in">get_mid</span>(l,m,ls,kth);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">get_mid</span>(m+<span class="number">1</span>,r,rs,kth-p[ls].sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Pair <span class="title">cal</span><span class="params">(Pair t1, Pair t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> &#123;t1.first + t2.first</span><br><span class="line">   ,t1.second + t2.second + t1.first*t2.first&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Pair <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> &#123;p[rt].sum, p[rt].mulsum&#125;;</span><br><span class="line">&#125;</span><br><span class="line">Pair ans = &#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">cal</span>(ans,<span class="built_in">query</span>(L,R,l,m,ls));</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">cal</span>(ans,<span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m; <span class="built_in">build</span>(<span class="number">1</span>,MAXN,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> x; cin &gt;&gt; x;</span><br><span class="line">    <span class="built_in">modify</span>(x,<span class="number">1</span>,MAXN,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">    <span class="keyword">int</span> op,x,w;</span><br><span class="line">    cin &gt;&gt; op;</span><br><span class="line">    <span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; w;</span><br><span class="line">    <span class="built_in">modify</span>(w,<span class="number">1</span>,MAXN,<span class="number">1</span>,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// get_mid</span></span><br><span class="line"><span class="keyword">int</span> mid = <span class="built_in">get_mid</span>(<span class="number">1</span>,MAXN,<span class="number">1</span>,p[<span class="number">1</span>].sum/<span class="number">2</span>);</span><br><span class="line"><span class="keyword">int</span> lsum = <span class="built_in">query</span>(<span class="number">1</span>,mid,<span class="number">1</span>,MAXN,<span class="number">1</span>).first;</span><br><span class="line"><span class="keyword">int</span> val = <span class="built_in">query</span>(mid,mid,<span class="number">1</span>,MAXN,<span class="number">1</span>).first;</span><br><span class="line"><span class="keyword">if</span>(lsum-val &gt; p[<span class="number">1</span>].sum-lsum) mid--;</span><br><span class="line"><span class="comment">// get_ans</span></span><br><span class="line">Pair tl = <span class="built_in">query</span>(<span class="number">1</span>,mid,<span class="number">1</span>,MAXN,<span class="number">1</span>);</span><br><span class="line">Pair tr = <span class="built_in">query</span>(mid+<span class="number">1</span>,MAXN,<span class="number">1</span>,MAXN,<span class="number">1</span>);</span><br><span class="line">LL t1 = tl.second - tl.first;</span><br><span class="line">LL t2 = tr.second - tr.first;</span><br><span class="line">LL a = t1 + t2;</span><br><span class="line">LL b = p[<span class="number">1</span>].sum*(p[<span class="number">1</span>].sum<span class="number">-1</span>);</span><br><span class="line">a = b-a;</span><br><span class="line">LL t = __gcd(a,b);</span><br><span class="line">a /= t, b /= t;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; b &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//srand((unsigned)time(0));</span></span><br><span class="line">    <span class="keyword">int</span> ce = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; ce;</span><br><span class="line"><span class="comment">//    scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line">    <span class="keyword">while</span>(ce--) <span class="built_in">solve</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【并查集】Codeforces Round 738 (Div. 2) D2. Mocha and Diana</title>
      <link href="/2021/08/18/ACM/%E3%80%90%E5%B9%B6%E6%9F%A5%E9%9B%86%E3%80%91Codeforces%20Round%20738%20(Div.%202)%20D2.%20Mocha%20and%20Diana/"/>
      <url>/2021/08/18/ACM/%E3%80%90%E5%B9%B6%E6%9F%A5%E9%9B%86%E3%80%91Codeforces%20Round%20738%20(Div.%202)%20D2.%20Mocha%20and%20Diana/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.ml/contest/1559/problem/D2">题链</a></p><p>首先将两个图 $A,B$ 中的节点 $1$ 都视为根节点；<br>遍历剩下的每个节点 $[2,n]$：<br>&emsp; $1.$ 节点 $i$ 在两图中都与 $1$ 节点不相连，那么答案中加入 $&lt;1,i&gt;$；<br>&emsp; $2.$ 节点 $i$ 在两图中都与 $1$ 节点相连，那么这两点属于同一连通块，不需要管它；<br>&emsp; $3.$ 节点 $i$ 在一个图$(A)$中与 $1$ 节点相连，另一个图$(B)$中不相连，那么这个不相连的点也许可以和别的点连接，所以预先存入各自的栈$(B)$中；<br>接下来考虑两个栈$(A)(B)$中还剩下的点；<br>&emsp;将$(A)(B)$两栈栈顶元素$&lt;u,v&gt;$配对，这样配对后，$u,v$ 就会各自与自己图中的 $1$ 节点相连，原因就是 $A$ 栈中元素在 $B$ 图中是与 $1$ 相连的，$B$ 栈中元素在 $A$ 图中是与 $1$ 相连的；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m1,m2;</span><br><span class="line"><span class="keyword">int</span> fa[<span class="number">3</span>][MS];</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">3</span>][MS];</span><br><span class="line">stack&lt;<span class="keyword">int</span> &gt; sta[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> ac[MS][<span class="number">3</span>], tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) fa[<span class="number">1</span>][i] = fa[<span class="number">2</span>][i] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (fa[rt][x] == x) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> fa[rt][x] = <span class="built_in">find</span>(rt,fa[rt][x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> fx = <span class="built_in">find</span>(rt,x);</span><br><span class="line"><span class="keyword">int</span> fy = <span class="built_in">find</span>(rt,y);</span><br><span class="line"><span class="keyword">if</span> (fx &gt; fy) <span class="built_in">swap</span>(fx,fy);</span><br><span class="line">fa[rt][fy] = fx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m1 &gt;&gt; m2; <span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m1;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line"><span class="built_in">merge</span>(<span class="number">1</span>,u,v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m2;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line"><span class="built_in">merge</span>(<span class="number">2</span>,u,v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">find</span>(<span class="number">1</span>,i) != <span class="number">1</span> &amp;&amp; <span class="built_in">find</span>(<span class="number">2</span>,i) != <span class="number">1</span>)&#123;</span><br><span class="line">tot++;</span><br><span class="line">ac[tot][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">ac[tot][<span class="number">2</span>] = i;</span><br><span class="line"><span class="built_in">merge</span>(<span class="number">1</span>,<span class="number">1</span>,i);</span><br><span class="line"><span class="built_in">merge</span>(<span class="number">2</span>,<span class="number">1</span>,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">find</span>(<span class="number">1</span>,i) != <span class="number">1</span>) sta[<span class="number">1</span>].<span class="built_in">push</span>(i);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">find</span>(<span class="number">2</span>,i) != <span class="number">1</span>) sta[<span class="number">2</span>].<span class="built_in">push</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!sta[<span class="number">1</span>].<span class="built_in">empty</span>() &amp;&amp; !sta[<span class="number">2</span>].<span class="built_in">empty</span>())&#123;</span><br><span class="line"><span class="keyword">int</span> t1 = sta[<span class="number">1</span>].<span class="built_in">top</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">find</span>(<span class="number">1</span>,t1) == <span class="number">1</span> &amp;&amp; <span class="built_in">find</span>(<span class="number">2</span>,t1) == <span class="number">1</span>)&#123;</span><br><span class="line">sta[<span class="number">1</span>].<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t2 = sta[<span class="number">2</span>].<span class="built_in">top</span>(); </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">find</span>(<span class="number">1</span>,t2) == <span class="number">1</span> &amp;&amp; <span class="built_in">find</span>(<span class="number">2</span>,t2) == <span class="number">1</span>)&#123;</span><br><span class="line">sta[<span class="number">2</span>].<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">merge</span>(<span class="number">1</span>,t1,t2); </span><br><span class="line"><span class="built_in">merge</span>(<span class="number">2</span>,t1,t2);</span><br><span class="line">tot++;</span><br><span class="line">ac[tot][<span class="number">1</span>] = t1; </span><br><span class="line">ac[tot][<span class="number">2</span>] = t2; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; tot &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i][<span class="number">1</span>] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ac[i][<span class="number">2</span>] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span> (ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树合并】Codeforces Round 279 (Div. 2) F. Treeland Tour (树上最长上升子序列)</title>
      <link href="/2021/08/15/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6%E3%80%91Codeforces%20Round%20279%20(Div.%202)%20F.%20Treeland%20Tour%20(%E6%A0%91%E4%B8%8A%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97)/"/>
      <url>/2021/08/15/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6%E3%80%91Codeforces%20Round%20279%20(Div.%202)%20F.%20Treeland%20Tour%20(%E6%A0%91%E4%B8%8A%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97)/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.ml/contest/490/problem/F">题链</a></p><p>题意如题</p><p>权值线段树维护<br>以 $x$ 为结尾的最长上升子序列的长度<br>以 $x$ 为开头的最长下降子序列的长度<br>一开始所有的 $lis$, $lds$ 都是 $1$<br>$dfs$ 到叶子节点然后自底向上维护每个节点的权值线段树  </p><p>考虑某一棵子树，答案由两部分组成：<br>&emsp;经过根节点 $u$ 的子序列：<br>&emsp;&emsp;$1.$ 左子树中小于 $w[u]$ 的最长上升子序列长度<br>&emsp;&emsp;&nbsp;$+$右子树中大于 $w[u]$ 的最长下降子序列长度$+1$<br>&emsp;&emsp;$2.$ 左子树中大于 $w[u]$ 的最长下降子序列长度<br>&emsp;&emsp;&nbsp;$+$右子树中大于 $w[u]$ 的最长上升子序列长度$+1$<br>&emsp;不经过根节点 $u$ 的子序列：<br>&emsp;&emsp;需要在子树线段树合并的时候考虑  </p><p>复杂度$O(nlogn)$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;int ,int &gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> w[MS];</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="keyword">int</span> lis,lds;</span><br><span class="line">&#125;p[MS*<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> rtpos[MS], tot;</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="function">Pair <span class="title">pmax</span><span class="params">(Pair t1,Pair t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> &#123; <span class="built_in">max</span>(t1.first ,t2.first )</span><br><span class="line">   , <span class="built_in">max</span>(t1.second,t2.second) &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Pair <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> &#123;p[rt].lis,p[rt].lds&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">Pair ans = &#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">pmax</span>(ans, <span class="built_in">query</span>(L,R,l,m,p[rt].l) );</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">pmax</span>(ans, <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,p[rt].r) );</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].lis = <span class="built_in">max</span>(p[p[rt].l].lis,p[p[rt].r].lis);</span><br><span class="line">p[rt].lds = <span class="built_in">max</span>(p[p[rt].l].lds,p[p[rt].r].lds);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> &amp;rt,<span class="keyword">int</span> vlis,<span class="keyword">int</span> vlds)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt) rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].lis = <span class="built_in">max</span>(p[rt].lis, vlis);</span><br><span class="line">p[rt].lds = <span class="built_in">max</span>(p[rt].lds, vlds);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">modify</span>(pos,l,m,p[rt].l,vlis,vlds);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">modify</span>(pos,m+<span class="number">1</span>,r,p[rt].r,vlis,vlds);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> y,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!x || !y) x |= y;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[x].lis = <span class="built_in">max</span>(p[x].lis,p[y].lis);</span><br><span class="line">p[x].lds = <span class="built_in">max</span>(p[x].lds,p[y].lds);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// 答案可能来自不经过根节点的最长上升子序列 </span></span><br><span class="line">ans = <span class="built_in">max</span>(ans, <span class="built_in">max</span>(p[p[x].l].lis + p[p[y].r].lds</span><br><span class="line">  ,p[p[x].r].lds + p[p[y].l].lis) );</span><br><span class="line"><span class="comment">// 递归合并左右子树 </span></span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">merge</span>(p[x].l,p[y].l,l,m);</span><br><span class="line"><span class="built_in">merge</span>(p[x].r,p[y].r,m+<span class="number">1</span>,r);</span><br><span class="line"><span class="built_in">push_up</span>(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> nlis = <span class="number">0</span>, nlds = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f)&#123;</span><br><span class="line"><span class="built_in">dfs</span>(v,u);</span><br><span class="line"><span class="comment">// u为某子树根节点 </span></span><br><span class="line"><span class="comment">// 这里计算经过点 u 的 lis和 lds </span></span><br><span class="line"><span class="comment">// 得到子树中权值小于 w[u]的 lis, 权值大于 w[u]的 lds </span></span><br><span class="line"><span class="keyword">int</span> tlis = <span class="built_in">query</span>(<span class="number">0</span>,w[u]<span class="number">-1</span>,<span class="number">0</span>,MAXN,rtpos[v]).first;</span><br><span class="line"><span class="keyword">int</span> tlds = <span class="built_in">query</span>(w[u]+<span class="number">1</span>,MAXN,<span class="number">0</span>,MAXN,rtpos[v]).second;</span><br><span class="line"><span class="comment">// 更新答案 </span></span><br><span class="line">ans = <span class="built_in">max</span>(ans, <span class="built_in">max</span>( tlis+nlds+<span class="number">1</span>, tlds+nlis+<span class="number">1</span> ));</span><br><span class="line"><span class="comment">// 更新点 u 为结尾的 lis,lds </span></span><br><span class="line">nlis = <span class="built_in">max</span>(nlis,tlis);</span><br><span class="line">nlds = <span class="built_in">max</span>(nlds,tlds);</span><br><span class="line"><span class="comment">// 将 v合并至 u </span></span><br><span class="line"><span class="built_in">merge</span>(rtpos[u],rtpos[v],<span class="number">0</span>,MAXN);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 更新 u的权值线段树 </span></span><br><span class="line"><span class="built_in">modify</span>(w[u],<span class="number">0</span>,MAXN,rtpos[u],nlis+<span class="number">1</span>,nlds+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; w[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u); </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【二分】Codeforces Round 279 (Div. 2) F. Treeland Tour (树上最长上升子序列)</title>
      <link href="/2021/08/09/ACM/%E3%80%90%E4%BA%8C%E5%88%86%E3%80%91Codeforces%20Round%20279%20(Div.%202)%20F.%20Treeland%20Tour%20(%E6%A0%91%E4%B8%8A%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97)/"/>
      <url>/2021/08/09/ACM/%E3%80%90%E4%BA%8C%E5%88%86%E3%80%91Codeforces%20Round%20279%20(Div.%202)%20F.%20Treeland%20Tour%20(%E6%A0%91%E4%B8%8A%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97)/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.ml/contest/490/problem/F">题链</a></p><p>题意如题</p><p>首先得知道最长上升子序列如何在O(nlogn)内求出；</p><p>参考<a href="https://llsunlie.github.io/2021/08/09/ACM/%E3%80%90%E4%BA%8C%E5%88%86%E3%80%91AcWing%202978.%20%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/">【二分】AcWing 2978. 最长上升子序列</a></p><p>那么对于每一个点作为根节点跑一遍最长上升子序列算法即可，复杂度$O(n^2logn)$；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="keyword">int</span> p[MS];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="comment">// p[i] 维护子序列长度为 i的最小值 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> pos = <span class="built_in">lower_bound</span>(p+<span class="number">1</span>,p+n+<span class="number">1</span>,a[u]) - p;</span><br><span class="line"><span class="keyword">int</span> tmp = p[pos]; <span class="comment">// 递归子节点前记录原先值 </span></span><br><span class="line">p[pos] = a[u]; <span class="comment">// 更新 </span></span><br><span class="line">ans = <span class="built_in">max</span>(ans,pos); </span><br><span class="line"><span class="comment">// 递归子节点 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f) <span class="built_in">dfs</span>(v,u);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p[pos] = tmp; <span class="comment">// 还原原先值 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) p[i] = MAXN;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">dfs</span>(i,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组维护最值】AcWing 2978. 最长上升子序列</title>
      <link href="/2021/08/09/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%BB%B4%E6%8A%A4%E6%9C%80%E5%80%BC%E3%80%91AcWing%202978.%20%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/"/>
      <url>/2021/08/09/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%BB%B4%E6%8A%A4%E6%9C%80%E5%80%BC%E3%80%91AcWing%202978.%20%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<p>回顾DP方式求解过程：</p><p>$p[i]$：原序列</p><p>$dp[i]$：以位置 $i$ 为结尾的最长上升子序列；</p><p>$dp_i = \max_{j=1}^{i-1}dp_j+1(p_j&lt;p_i)$</p><p>也就是说只要知道 $i$ 位置前满足 $a_j&lt;a_i$ 的最大 $dp_j$ 值即可；</p><p>权值树状数组维护 $[1,r]$ 的区间最大值，对于 $i$ 位置，在权值树状数组上查询 $[1,a_i-1]$ 的最大值 $t$，这样以 $i$ 为结尾的最长上升子序列的值就是 $t+1$；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[MS], b[MS], tot;</span><br><span class="line"><span class="keyword">int</span> p[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=n;pos+=<span class="built_in">lowbit</span>(pos)) p[pos] = <span class="built_in">max</span>(p[pos],val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123; <span class="comment">// 求 [1,pos] 的最大值 </span></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos)) ans = <span class="built_in">max</span>(ans,p[pos]);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; a[i], b[i] = a[i];</span><br><span class="line"><span class="comment">// 离散化 </span></span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line">tot = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++) <span class="keyword">if</span>(b[i] != b[i<span class="number">-1</span>]) b[++tot] = b[i];</span><br><span class="line"><span class="comment">// 遍历每一个值 </span></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> pos = <span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+tot+<span class="number">1</span>,a[i]) - b;</span><br><span class="line"><span class="keyword">int</span> cc = <span class="built_in">query</span>(pos<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">ans = <span class="built_in">max</span>(ans,cc);</span><br><span class="line"><span class="built_in">update</span>(pos,cc);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【二分】AcWing 2978. 最长上升子序列</title>
      <link href="/2021/08/09/ACM/%E3%80%90%E4%BA%8C%E5%88%86%E3%80%91AcWing%202978.%20%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/"/>
      <url>/2021/08/09/ACM/%E3%80%90%E4%BA%8C%E5%88%86%E3%80%91AcWing%202978.%20%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h1 id="DP"><a href="#DP" class="headerlink" title="DP"></a>DP</h1><p>回顾DP方式求解过程：</p><p>$p[i]$：原序列</p><p>$dp[i]$：以位置 $i$ 为结尾的最长上升子序列；</p><p>$dp_i = \max_{j=1}^{i-1}dp_j+1(p_j&lt;p_i)$</p><p>这样显然是 $O(n^2)$ 的；</p><h1 id="贪心-二分"><a href="#贪心-二分" class="headerlink" title="贪心 + 二分"></a>贪心 + 二分</h1><p>维护一个数组 $p$，$p_i$ 维护子序列长度为 $i$ 的最小值 </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> p[MS], tot;</span><br><span class="line"></span><br><span class="line"><span class="comment">// p[i] 维护子序列长度为 i的最小值 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span>(!tot || x &gt; p[tot]) p[++tot] = x;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> pos = <span class="built_in">lower_bound</span>(p+<span class="number">1</span>,p+tot+<span class="number">1</span>,x) - p;</span><br><span class="line">p[pos] = x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>换一种写法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> p[MS], tot;</span><br><span class="line"></span><br><span class="line"><span class="comment">// p[i] 维护子序列长度为 i的最小值 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) p[i] = MAXN; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">int</span> pos = <span class="built_in">lower_bound</span>(p+<span class="number">1</span>,p+n+<span class="number">1</span>,x) - p;</span><br><span class="line">p[pos] = x;</span><br><span class="line">ans = <span class="built_in">max</span>(ans,pos);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树合并】洛谷 P4556 雨天的尾巴【模板】线段树合并</title>
      <link href="/2021/08/09/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6%E3%80%91%E6%B4%9B%E8%B0%B7%20P4556%20%E9%9B%A8%E5%A4%A9%E7%9A%84%E5%B0%BE%E5%B7%B4%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6/"/>
      <url>/2021/08/09/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6%E3%80%91%E6%B4%9B%E8%B0%B7%20P4556%20%E9%9B%A8%E5%A4%A9%E7%9A%84%E5%B0%BE%E5%B7%B4%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6/</url>
      
        <content type="html"><![CDATA[<p>线段树合并；</p><p>对于每一个点开一颗权值线段树，采用树上差分的形式维护；</p><p>例如在$x,y$之间的路径加上一个$z$的救济粮，那么就在$x$的权值线段树$z$的位置$+1$，在$y$的权值线段树$z$的位置$+1$，在$lca(x,y)$的权值线段树$z$的位置$-1$，在$fa[lca(x,y)]$的权值线段树$z$的位置$-1$；</p><p>最后自底向上合并线段树，查询线段树上救济粮最大出现次数；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> fa[MS], dep[MS], sz[MS], zson[MS], top[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line">&#125;p[MAXN*<span class="number">70</span>];</span><br><span class="line"><span class="keyword">int</span> tot, rtpos[MS];</span><br><span class="line"><span class="keyword">int</span> ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">fa[u] = f;</span><br><span class="line">dep[u] = dep[f] + <span class="number">1</span>;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line">zson[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> maxnzson = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f)&#123;</span><br><span class="line"><span class="built_in">dfs1</span>(v,u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line"><span class="keyword">if</span>(sz[v] &gt; maxnzson)&#123;</span><br><span class="line">maxnzson = sz[v];</span><br><span class="line">zson[u] = v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> tp)</span></span>&#123;</span><br><span class="line">top[u] = tp;</span><br><span class="line"><span class="keyword">if</span>(zson[u]) <span class="built_in">dfs2</span>(zson[u],tp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != fa[u] &amp;&amp; v != zson[u])&#123;</span><br><span class="line"><span class="built_in">dfs2</span>(v,v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(top[u] != top[v])&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[ top[u] ] &lt; dep[ top[v] ]) <span class="built_in">swap</span>(u,v);</span><br><span class="line">u = fa[ top[u] ];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dep[u]&lt;dep[v]? u:v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].val = <span class="built_in">max</span>(p[p[rt].l].val,p[p[rt].r].val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> &amp;rt,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt) rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].val += val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">modify</span>(pos,l,m,p[rt].l,val);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">modify</span>(pos,m+<span class="number">1</span>,r,p[rt].r,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> y,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!x || !y) x |= y;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(l == r) p[x].val += p[y].val;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">merge</span>(p[x].l,p[y].l,l,m);</span><br><span class="line"><span class="built_in">merge</span>(p[x].r,p[y].r,m+<span class="number">1</span>,r);</span><br><span class="line"><span class="built_in">push_up</span>(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> l;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(p[p[rt].l].val &gt;= p[p[rt].r].val) <span class="keyword">return</span> <span class="built_in">query</span>(l,m,p[rt].l);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(m+<span class="number">1</span>,r,p[rt].r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != fa[u])&#123;</span><br><span class="line"><span class="built_in">dfs</span>(v);</span><br><span class="line"><span class="built_in">merge</span>(rtpos[u],rtpos[v],<span class="number">1</span>,MAXN);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ac[u] = <span class="built_in">query</span>(<span class="number">0</span>,MAXN,rtpos[u]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 树剖求 lca </span></span><br><span class="line"><span class="built_in">dfs1</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">dfs2</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> x,y,z;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line"><span class="built_in">modify</span>(z,<span class="number">0</span>,MAXN,rtpos[x],<span class="number">1</span>);</span><br><span class="line"><span class="built_in">modify</span>(z,<span class="number">0</span>,MAXN,rtpos[y],<span class="number">1</span>);</span><br><span class="line"><span class="built_in">modify</span>(z,<span class="number">0</span>,MAXN,rtpos[<span class="built_in">lca</span>(x,y)],<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">modify</span>(z,<span class="number">0</span>,MAXN,rtpos[fa[<span class="built_in">lca</span>(x,y)]],<span class="number">-1</span>);</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;lca(x,y): &quot; &lt;&lt; lca(x,y) &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;fa[lca(x,y)]: &quot; &lt;&lt; fa[lca(x,y)] &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树分裂合并】洛谷 P5494 【模板】线段树分裂</title>
      <link href="/2021/08/08/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E8%A3%82%E5%90%88%E5%B9%B6%E3%80%91%E6%B4%9B%E8%B0%B7%20P5494%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E8%A3%82/"/>
      <url>/2021/08/08/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E8%A3%82%E5%90%88%E5%B9%B6%E3%80%91%E6%B4%9B%E8%B0%B7%20P5494%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E8%A3%82/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P5494">题链</a></p><p>线段树分裂合并模板题</p><p>学习自<a href="https://b23.tv/BV1f54y1E7e6">BiliBili</a></p><p>关于线段树空间(带修改的)大概是: $2mlogn$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 200005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">LL val;</span><br><span class="line">&#125;p[MS*<span class="number">40</span>];</span><br><span class="line"><span class="keyword">int</span> tot, rtpos[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].val = p[p[rt].l].val + p[p[rt].r].val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> &amp;rt,LL num)</span></span>&#123; <span class="comment">// 单点修改 </span></span><br><span class="line"><span class="keyword">if</span>(!rt) rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].val += num;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">modify</span>(pos,l,m,p[rt].l,num);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">modify</span>(pos,m+<span class="number">1</span>,r,p[rt].r,num);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">split</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> &amp;rt)</span></span>&#123; <span class="comment">// 分裂： 将以 rt为根的树中 [L,R]区间提出来 </span></span><br><span class="line"><span class="keyword">int</span> cc = ++tot;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[cc] = p[rt]; <span class="comment">// 提出该节点对应区间 </span></span><br><span class="line">rt = <span class="number">0</span>; <span class="comment">// 将该节点从原树中删除 </span></span><br><span class="line"><span class="keyword">return</span> cc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) p[cc].l = <span class="built_in">split</span>(L,R,l,m,p[rt].l);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) p[cc].r = <span class="built_in">split</span>(L,R,m+<span class="number">1</span>,r,p[rt].r);</span><br><span class="line"><span class="built_in">push_up</span>(cc); <span class="comment">// 更新新树 </span></span><br><span class="line"><span class="built_in">push_up</span>(rt); <span class="comment">// 更新原树 </span></span><br><span class="line"><span class="keyword">return</span> cc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!x || !y)&#123; <span class="comment">// 如果两棵树该节点任意为空 </span></span><br><span class="line">x |= y; <span class="comment">// x节点直接指向 y, 直接利用 y树的空间, 所以之后不能对 y重复操作, 相当于删除 y树 </span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line">p[x].val += p[y].val; </span><br><span class="line"><span class="built_in">merge</span>(p[x].l,p[y].l); <span class="comment">// 递归合并左右子树 </span></span><br><span class="line"><span class="built_in">merge</span>(p[x].r,p[y].r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123; <span class="comment">// 与普通线段树相同 </span></span><br><span class="line"><span class="keyword">if</span>(!rt) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">query</span>(L,R,l,m,p[rt].l);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,p[rt].r);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_kth</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL kth)</span></span>&#123; <span class="comment">// 类似主席树 </span></span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> l;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(p[p[rt].l].val &gt;= kth) <span class="keyword">return</span> <span class="built_in">get_kth</span>(l,m,p[rt].l,kth);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">get_kth</span>(m+<span class="number">1</span>,r,p[rt].r,kth-p[p[rt].l].val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="built_in">modify</span>(i,<span class="number">1</span>,n,rtpos[<span class="number">1</span>],x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> last = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> op,x,y,z;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">0</span>)&#123;</span><br><span class="line">cin &gt;&gt; z;</span><br><span class="line">rtpos[++last] = <span class="built_in">split</span>(y,z,<span class="number">1</span>,n,rtpos[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">merge</span>(rtpos[x],rtpos[y]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">cin &gt;&gt; z;</span><br><span class="line"><span class="built_in">modify</span>(z,<span class="number">1</span>,n,rtpos[x],y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">3</span>)&#123;</span><br><span class="line">cin &gt;&gt; z;</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(y,z,<span class="number">1</span>,n,rtpos[x]) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">4</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rtpos[x]].val &lt; y) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="built_in">get_kth</span>(<span class="number">1</span>,n,rtpos[x],y) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【主席树维护区间修改】HDU 4348 To the moon</title>
      <link href="/2021/08/08/ACM/%E3%80%90%E4%B8%BB%E5%B8%AD%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E4%BF%AE%E6%94%B9%E3%80%91HDU%204348%20To%20the%20moon/"/>
      <url>/2021/08/08/ACM/%E3%80%90%E4%B8%BB%E5%B8%AD%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E4%BF%AE%E6%94%B9%E3%80%91HDU%204348%20To%20the%20moon/</url>
      
        <content type="html"><![CDATA[<p><a href="https://acm.hdu.edu.cn/showproblem.php?pid=4348">题链</a></p><p>普通主席树一般是单点修改，同时增加$logn$个节点，要进行区间修改为了节省空间，于是在主席树上打永久标记，一次区间修改得打$log(r-l+1)$个标记，求和的时候从上至下带着标记求和；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">LL sum,tag;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> rtpos[MS], tot;</span><br><span class="line"><span class="keyword">int</span> ver;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">p[rt].sum = p[p[rt].l].sum + p[p[rt].r].sum + (LL)(r-l+<span class="number">1</span>)*p[rt].tag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line">p[rt] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">cin &gt;&gt; p[rt].sum;</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[rt].l = <span class="built_in">build</span>(l,m);</span><br><span class="line">p[rt].r = <span class="built_in">build</span>(m+<span class="number">1</span>,r);</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> lart,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line">p[rt] = p[lart];</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt].sum += (LL)(r-l+<span class="number">1</span>)*val;</span><br><span class="line">p[rt].tag += val;</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) p[rt].l = <span class="built_in">add</span>(p[lart].l,L,R,l,m,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) p[rt].r = <span class="built_in">add</span>(p[lart].r,L,R,m+<span class="number">1</span>,r,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL tagsum)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"> <span class="keyword">return</span> p[rt].sum + (LL)(r-l+<span class="number">1</span>)*tagsum;</span><br><span class="line">&#125;</span><br><span class="line">tagsum += p[rt].tag;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">query</span>(p[rt].l,L,R,l,m,tagsum);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">query</span>(p[rt].r,L,R,m+<span class="number">1</span>,r,tagsum);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//cin &gt;&gt; n &gt;&gt; m;</span></span><br><span class="line">tot = <span class="number">0</span>;</span><br><span class="line">rtpos[<span class="number">0</span>] = <span class="built_in">build</span>(<span class="number">1</span>,n);</span><br><span class="line">ver = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">LL x;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="string">&#x27;Q&#x27;</span>)&#123;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(rtpos[ver],l,r,<span class="number">1</span>,n,<span class="number">0ll</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="string">&#x27;C&#x27;</span>)&#123;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r &gt;&gt; x;</span><br><span class="line">rtpos[ver+<span class="number">1</span>] = <span class="built_in">add</span>(rtpos[ver],l,r,<span class="number">1</span>,n,x);</span><br><span class="line">ver++;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="string">&#x27;H&#x27;</span>)&#123;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r &gt;&gt; x;</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(rtpos[x],l,r,<span class="number">1</span>,n,<span class="number">0ll</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="string">&#x27;B&#x27;</span>)&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">ver = x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%d&quot;,&amp;ce);</span></span><br><span class="line"><span class="comment">//while(ce--)&#123;</span></span><br><span class="line"><span class="comment">//solve();</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &gt;&gt; m)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主席树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组维护三阶前缀和】洛谷 P4062 Yazid的新生舞会</title>
      <link href="/2021/08/05/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%BB%B4%E6%8A%A4%E4%B8%89%E9%98%B6%E5%89%8D%E7%BC%80%E5%92%8C%E3%80%91%E6%B4%9B%E8%B0%B7%20P4062%20Yazid%E7%9A%84%E6%96%B0%E7%94%9F%E8%88%9E%E4%BC%9A/"/>
      <url>/2021/08/05/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%BB%B4%E6%8A%A4%E4%B8%89%E9%98%B6%E5%89%8D%E7%BC%80%E5%92%8C%E3%80%91%E6%B4%9B%E8%B0%B7%20P4062%20Yazid%E7%9A%84%E6%96%B0%E7%94%9F%E8%88%9E%E4%BC%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p>  <a href="https://www.luogu.com.cn/problem/P3372" target="_blank">题链</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>  区间众数的个数 $&gt;$ 区间长度一半 称这个区间有主元素，主元素就是这个众数；</p><p>  题意：求数组中有多少个区间有主元素;</p><p>  考虑一个子问题：每一种数作为主元素的贡献；</p><p>  例如给定数组 $p = [3,2,1,3,3,2]$，并考虑 $3$ 作为主元素的贡献；</p><p>  我们可以将是数字 $3$ 的记为 $1$ ，不是的记为 $-1$；</p><table><thead><tr><th align="center"></th><th align="center">$1$</th><th align="center">$2$</th><th align="center">$3$</th><th align="center">$4$</th><th align="center">$5$</th><th align="center">$6$</th></tr></thead><tbody><tr><td align="center">$p$</td><td align="center">$3$</td><td align="center">$2$</td><td align="center">$1$</td><td align="center">$3$</td><td align="center">$3$</td><td align="center">$2$</td></tr><tr><td align="center">$w$</td><td align="center">$1$</td><td align="center">$-1$</td><td align="center">$-1$</td><td align="center">$1$</td><td align="center">$1$</td><td align="center">$-1$</td></tr></tbody></table><p>  于是子问题变成求 $w$ 中有多少个区间和大于 $0$，例如区间 $[3,5]$ 的和为 $1$ ，所以这个区间可行，而区间 $[2,5]$ 的和为 $0$，所以这个区间不可行；</p><p>  我们对 $w$ 求一个前缀和，记为 $d$，如果 $d_r - d_{l-1} &gt; 0$，也就是对于 $d_r$ 查找 $r$ 之前有多少个比 $d_r$ 小的数字，那么区间 $[l,r]$ 满足要求；</p><table><thead><tr><th align="center"></th><th align="center">$0$</th><th align="center">$1$</th><th align="center">$2$</th><th align="center">$3$</th><th align="center">$4$</th><th align="center">$5$</th><th align="center">$6$</th></tr></thead><tbody><tr><td align="center">$p$</td><td align="center">无</td><td align="center">$3$</td><td align="center">$2$</td><td align="center">$1$</td><td align="center">$3$</td><td align="center">$3$</td><td align="center">$2$</td></tr><tr><td align="center">$w$</td><td align="center">$0$</td><td align="center">$1$</td><td align="center">$-1$</td><td align="center">$-1$</td><td align="center">$1$</td><td align="center">$1$</td><td align="center">$-1$</td></tr><tr><td align="center">$d$</td><td align="center">$0$</td><td align="center">$1$</td><td align="center">$0$</td><td align="center">$-1$</td><td align="center">$0$</td><td align="center">$1$</td><td align="center">$0$</td></tr></tbody></table><p>  例如对于 $r = 5$ ，$r$ 前比 $d_r$ 小的数字有 $4$ 个，分别是 $l-1 = [4,3,2,0]$ 的时候，也就是区间 $[5,5],[4,5],[3,5],[1,5]$ 满足要求；  </p><p>  于是可以对每一种数字，求出 $w$，求出 $d$，枚举 $d_i$，查找 $i$ 前有多少个比 $d_i$ 小的数字，用树状数组维护权值，显然这样的复杂度是 $O(n^2logn)$的，不可取；  </p><p>  我们记录下每一种数字在数组中的位置，例如数字 $3$，它的位置有 $pos_3 = [1,4,5]$，如果能在 $O(pos_i.size())$ 的时空复杂度下(可以加个$log$)求出这种数字的贡献，那么枚举每一种数字算贡献整体就是 $O(nlogn)$ 的了；  </p><p>  $d$ 是连续的，$pos_3 = [1,4,5]$ 可以将 $d$ 分为 $4$ 个部分，分别是 $[0,0],[1,3],[4,4],[5,6]$ ，这四个部分都是等差数列，对于$[1,3]$区间内的每个值，在该值前且比该值小的数字只能来自于$[1,3]$这部分之前，不能来自于 $[1,3]$ 这部分本身；  </p><p>  设法将每一部分同时处理，如有一部分 $P_i$，$P_i$这部分的答案来自于 $P_i$ 之前的部分，对 $P_i$ 这部分是一个等差数列 $[y,y-1,y-2, \dots,x]$，那么 $P_i$ 部分插入到树状数组中就是区间 $[x,y]$ 加 $1$；  </p><p>  设 $B_i$ 为权值的前缀和，$B_i = \sum_{j=1}^{i}C_j$，那么对于 $P_i$  部分内的每一个值 $d_i$，$d_i$ 的贡献就等于 $B_{d_i-1}$，那么对于这一整个部分 $P_i$，值为 $[x,y]$，整体贡献就是 $\sum_{i=x-1}^{y-1}B_i$，设 $A_i$ 为权值的前缀和的前缀和，也就是 $B_i$ 的前缀和 $\sum_{j=1}^{i}B_j$，那么整体贡献就是 $A_{y-1} - A_{x-2}$；</p><p>  于是将问题转变为了，区间 $[x,y]$ 加 $1$，和求二阶前缀和；</p><p>  区间 $[x,y]$加一个数，求一阶前缀和就是区间加数，区间求和的洛谷线段树模板题1，当然可以用树状数组实现；</p><p>  和模板题同样将权值 $C_i$差分，差分后的数组位 $D_i$，于是问题转变为单点修改，求三阶前缀和；</p><p>  $A_x = \sum_{i=1}^{x} \sum_{j=1}^{i} \sum_{k=1}^{j} D_k$<br>  $A_x$<br>  $= B_1 + B_2 + B_3 + \dots + B_x$<br>  $= C_1 + (C_1+C_2) + (C_1+C_2+C_3) + \dots + (C_1+C_2+C_3+\dots+C_x)$<br>  $= xC_1+(x-1)C_2+(x-2)C_3+\dots+(x-n+1)C_n+\dots+C_x$<br>  $= xD_1+(x-1)(D_1+D_2)+(x-2)(D_1+D_2+D_3)+\dots+(x-n+1)(D_1+D_2+\dots+D_n)+\dots+(D_1+D_2+D_3+\dots+D_n)$<br>  $= \frac{(x+1)x}{2}D_1+\frac{x(x-1)}{2}D_2+\frac{(x-1)(x-2)}{2}D_3+\dots+\frac{(x-n+2)(x-n+1)}{2}D_n+\dots+D_x$<br>  $= \sum_{n=1}^{x}\frac{(x-n+2)(x-n+1)}{2}D_n$<br>  $= \sum_{n=1}^{x}n^2D_n + \frac{-2x+3}{2}\sum_{n=1}^{x}nD_n + \frac{x^2+3x+2}{2}\sum_{n=1}^{x}D_n$  </p><p>  用三个树状数组维护 $i^2D_i$，$iD_i$，$D_i$即可；  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 2000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS];</span><br><span class="line">vector&lt;LL &gt; vc[MS];</span><br><span class="line">LL b[MS], tot;</span><br><span class="line">LL p[<span class="number">4</span>][MS];</span><br><span class="line">LL ans;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">lowbit</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(LL pos, LL val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(LL x=pos;pos&lt;MS;pos+=<span class="built_in">lowbit</span>(pos))&#123;</span><br><span class="line">        p[<span class="number">1</span>][pos] += x*x*val;</span><br><span class="line">        p[<span class="number">2</span>][pos] += x*val;</span><br><span class="line">        p[<span class="number">3</span>][pos] += val;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(LL pos)</span></span>&#123;</span><br><span class="line">    LL ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(LL x=pos;pos;pos-=<span class="built_in">lowbit</span>(pos))&#123;</span><br><span class="line">        ans += p[<span class="number">1</span>][pos];</span><br><span class="line">        ans += (<span class="number">-2</span>*x<span class="number">-3</span>)*p[<span class="number">2</span>][pos];</span><br><span class="line">        ans += (x*x+<span class="number">3</span>*x+<span class="number">2</span>)*p[<span class="number">3</span>][pos];</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> ans/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>;i&lt;=tot;i++) vc[b[i]].<span class="built_in">clear</span>();</span><br><span class="line">    tot = <span class="number">0</span>;</span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">if</span>(vc[ a[i] ].<span class="built_in">empty</span>())&#123;</span><br><span class="line">            vc[ a[i] ].<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">            b[++tot] = a[i];</span><br><span class="line">        &#125; </span><br><span class="line">        vc[ a[i] ].<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    LL dis = n+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>;i&lt;=tot;i++)&#123;</span><br><span class="line">        LL t = b[i]; vc[t].<span class="built_in">push_back</span>(n+<span class="number">1</span>);</span><br><span class="line">        LL l, r = <span class="number">-1</span>, len = vc[t].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(LL j=<span class="number">1</span>;j&lt;len;j++)&#123;</span><br><span class="line">            l = r+<span class="number">1</span>;</span><br><span class="line">            r = l-(vc[t][j]-vc[t][j<span class="number">-1</span>]<span class="number">-1</span>);</span><br><span class="line">            LL L = r+dis, R = l+dis;</span><br><span class="line">            ans += <span class="built_in">query</span>(R<span class="number">-1</span>) - (L<span class="number">-2</span>&gt;<span class="number">0</span>? <span class="built_in">query</span>(L<span class="number">-2</span>):<span class="number">0</span>);</span><br><span class="line">            <span class="built_in">add</span>(L, <span class="number">1</span>); <span class="built_in">add</span>(R+<span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        r = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(LL j=<span class="number">1</span>;j&lt;len;j++)&#123;</span><br><span class="line">            l = r+<span class="number">1</span>;</span><br><span class="line">            r = l-(vc[t][j]-vc[t][j<span class="number">-1</span>]<span class="number">-1</span>);</span><br><span class="line">            LL L = r+dis, R = l+dis;</span><br><span class="line">            <span class="built_in">add</span>(L, <span class="number">-1</span>); <span class="built_in">add</span>(R+<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    LL ce;</span><br><span class="line">    ce = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line">    <span class="keyword">while</span>(ce--)&#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组维护区间和】洛谷 P3372 【模板】线段树 1 【树状数组解法】</title>
      <link href="/2021/08/04/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E5%92%8C%E3%80%91%E6%B4%9B%E8%B0%B7%20P3372%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%201%20%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E8%A7%A3%E6%B3%95%E3%80%91/"/>
      <url>/2021/08/04/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E5%92%8C%E3%80%91%E6%B4%9B%E8%B0%B7%20P3372%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%201%20%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E8%A7%A3%E6%B3%95%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3372" target="_blank">题链</a></p><p>这里用树状数组写法;</p><p>考虑求$[1,x]$的区间和 $sum_x$，于是将原数组差分后，相当于求一个二阶前缀和；</p><p>设原数组为 $a_i$, 差分后的数组为 $b_i = a_i - a_{i-1}$；</p><p>于是 $a_i = \sum_{j=1}^{i}{b_j}$；</p><p>那么[1,x]的区间和为 $sum_x = \sum_{i=1}^{x}a_i = \sum_{i=1}^{x} \sum_{j=1}^{i}b_j$</p><p>$sum_x = a_1 + a_2 + \cdots + a_x$</p><p>&emsp;&emsp;&emsp;&ensp;$= (b_1) + (b_1+b_2) + (b_1+b_2+b_3) + \cdots + (b_1+b_2+b_3+\cdots+b_x)$</p><p>&emsp;&emsp;&emsp;&ensp;$= xb_1 + (x-1)b_2 + (x-2)b_3 + \cdots + (x-n+1)b_n + \cdots + b_x $</p><p>&emsp;&emsp;&emsp;&ensp;$= \sum_{n=1}^{x}{(x-n+1)b_n} $</p><p>&emsp;&emsp;&emsp;&ensp;$= (x+1)\sum_{n=1}^{x}b_n - \sum_{n=1}^{x}b_n \cdot n $</p><p>于是分别在树状数组上维护 $\sum_{n=1}^{x}b_n $ 与 $ \sum_{n=1}^{x}b_n \cdot n $</p><p>$ ans = sum_r - sum_{l-1} $</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">LL a[MS];</span><br><span class="line">LL b[MS];</span><br><span class="line">LL p[<span class="number">2</span>][MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> pos, LL val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(;pos&lt;=n;pos+=<span class="built_in">lowbit</span>(pos)) p[rt][pos] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line">    LL cc = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(LL t=pos+<span class="number">1</span>;pos;pos-=<span class="built_in">lowbit</span>(pos)) cc += t*p[<span class="number">0</span>][pos]-p[<span class="number">1</span>][pos];</span><br><span class="line">    <span class="keyword">return</span> cc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        b[i] = a[i] - a[i<span class="number">-1</span>];</span><br><span class="line">        <span class="built_in">add</span>(<span class="number">0</span>, i, b[i]);</span><br><span class="line">        <span class="built_in">add</span>(<span class="number">1</span>, i, b[i]*i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        LL op,l,r;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">            LL x;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            <span class="built_in">add</span>(<span class="number">0</span>, l, x);</span><br><span class="line">            <span class="built_in">add</span>(<span class="number">0</span>, r+<span class="number">1</span>, -x);</span><br><span class="line">            <span class="built_in">add</span>(<span class="number">1</span>, l, x*l);</span><br><span class="line">            <span class="built_in">add</span>(<span class="number">1</span>, r+<span class="number">1</span>, -x*(r+<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">            LL ans = <span class="built_in">query</span>(r) - <span class="built_in">query</span>(l<span class="number">-1</span>);</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【整数三分】Codeforces Round 643 (Div. 2) E. Restorer Distance</title>
      <link href="/2021/08/01/ACM/%E3%80%90%E6%95%B4%E6%95%B0%E4%B8%89%E5%88%86%E3%80%91Codeforces%20Round%20643%20(Div.%202)%20E.%20Restorer%20Distance/"/>
      <url>/2021/08/01/ACM/%E3%80%90%E6%95%B4%E6%95%B0%E4%B8%89%E5%88%86%E3%80%91Codeforces%20Round%20643%20(Div.%202)%20E.%20Restorer%20Distance/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/contest/1355/problem/E" target="_blank">题链</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a,b,c;</span><br><span class="line">LL p[MS], qz[MS];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">cal</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> pos = <span class="built_in">upper_bound</span>(p+<span class="number">1</span>,p+n+<span class="number">1</span>,x) - p - <span class="number">1</span>;</span><br><span class="line">LL cnt1 = (pos*x) - qz[pos];</span><br><span class="line">LL cnt2 = qz[n]-qz[pos] - (n-pos)*x;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(a+b &gt; c)&#123;</span><br><span class="line">LL cc = <span class="built_in">min</span>(cnt1, cnt2);</span><br><span class="line">ans += cc*c;</span><br><span class="line">cnt1 -= cc;</span><br><span class="line">cnt2 -= cc;</span><br><span class="line"><span class="keyword">if</span>(cnt1) ans += cnt1*a;</span><br><span class="line"><span class="keyword">if</span>(cnt2) ans += cnt2*b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">ans += cnt1*a + cnt2*b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(p+<span class="number">1</span>,p+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">qz[i] = qz[i<span class="number">-1</span>] + p[i];</span><br><span class="line">&#125;</span><br><span class="line">LL l = p[<span class="number">1</span>]<span class="number">-1</span>, r = p[n]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">LL m1 = l+(r-l)/<span class="number">3</span>;</span><br><span class="line">LL m2 = r-(r-l)/<span class="number">3</span>;</span><br><span class="line">LL c1 = <span class="built_in">cal</span>(m1);</span><br><span class="line">LL c2 = <span class="built_in">cal</span>(m2);</span><br><span class="line"><span class="keyword">if</span>(c1 &lt;= c2) r = m2<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> l = m1+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">min</span>( <span class="built_in">cal</span>(l),<span class="built_in">cal</span>(r) ) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 三分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护区间覆盖】Educational Codeforces Round 112 (Rated for Div. 2)</title>
      <link href="/2021/08/01/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E8%A6%86%E7%9B%96%E3%80%91Educational%20Codeforces%20Round%20112%20(Rated%20for%20Div.%202)/"/>
      <url>/2021/08/01/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E8%A6%86%E7%9B%96%E3%80%91Educational%20Codeforces%20Round%20112%20(Rated%20for%20Div.%202)/</url>
      
        <content type="html"><![CDATA[<h1 id="E-Boring-Segments"><a href="#E-Boring-Segments" class="headerlink" title="E Boring Segments"></a>E Boring Segments</h1><p>双指针加线段树；</p><p>线段树维护区间覆盖问题，具体来说每个节点维护区间被完整覆盖的最小次数；</p><p>先将线段按照权值从小到大排序，$seg[i]$指下标i所对应的线段；</p><p>对于双指针$l，r$来说，$r$向右移的同时将$seg[r]$对应的线段覆盖，直到覆盖掉整个区间$[1,m]$，此时再右移$l$直到区间未被覆盖，更新答案$ans$；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">seg</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,w;</span><br><span class="line">&#125;a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> la;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(seg t1, seg t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> t1.w &lt; t2.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].cnt = <span class="built_in">min</span>(p[ls].cnt, p[rs].cnt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].la)&#123;</span><br><span class="line">p[ls].cnt += p[rt].la;</span><br><span class="line">p[rs].cnt += p[rt].la;</span><br><span class="line">p[ls].la += p[rt].la;</span><br><span class="line">p[rs].la += p[rt].la;</span><br><span class="line">p[rt].la = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt].cnt += val;</span><br><span class="line">p[rt].la += val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m; m--;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r,w;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r &gt;&gt; w; r--;</span><br><span class="line">a[i] = &#123;l,r,w&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = MAXN;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>,r=<span class="number">1</span>;r&lt;=n;)&#123;</span><br><span class="line"><span class="keyword">while</span>(r&lt;=n &amp;&amp; p[<span class="number">1</span>].cnt&lt;=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">update</span>(a[r].l,a[r].r,<span class="number">1</span>,m,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">r++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r &amp;&amp; p[<span class="number">1</span>].cnt&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">update</span>(a[l].l,a[l].r,<span class="number">1</span>,m,<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line">l++;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) ans = <span class="built_in">min</span>( ans, (a[r<span class="number">-1</span>].w-a[l<span class="number">-1</span>].w) );</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】三点求夹角</title>
      <link href="/2021/08/01/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E4%B8%89%E7%82%B9%E6%B1%82%E5%A4%B9%E8%A7%92/"/>
      <url>/2021/08/01/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E4%B8%89%E7%82%B9%E6%B1%82%E5%A4%B9%E8%A7%92/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M_PI acos(-1.0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">get angle ACB, point C is the center point</span></span><br><span class="line"><span class="comment">A(x1,y1)</span></span><br><span class="line"><span class="comment">B(x2,y2)</span></span><br><span class="line"><span class="comment">C(x3,y3)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get_angle</span><span class="params">(<span class="keyword">double</span> x1, <span class="keyword">double</span> y1, <span class="keyword">double</span> x2, <span class="keyword">double</span> y2, <span class="keyword">double</span> x3, <span class="keyword">double</span> y3)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> theta = <span class="built_in">atan2</span>(x1 - x3, y1 - y3) - <span class="built_in">atan2</span>(x2 - x3, y2 - y3);</span><br><span class="line"><span class="keyword">if</span> (theta &gt; M_PI)</span><br><span class="line">theta -= <span class="number">2</span> * M_PI;</span><br><span class="line"><span class="keyword">if</span> (theta &lt; -M_PI)</span><br><span class="line">theta += <span class="number">2</span> * M_PI;</span><br><span class="line"></span><br><span class="line">theta = <span class="built_in">abs</span>(theta * <span class="number">180.0</span> / M_PI);</span><br><span class="line"><span class="keyword">return</span> theta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> x1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> y1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">double</span> x2 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">double</span> y2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> x3 = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">double</span> y3 = <span class="number">-2</span>;</span><br><span class="line"><span class="keyword">double</span> angle1 = <span class="built_in">get_angle</span>(x3, y3, x1, y1, x2, y2);</span><br><span class="line"><span class="keyword">double</span> angle2 = <span class="built_in">get_angle</span>(x1, y1, x2, y2, x3, y3);</span><br><span class="line"><span class="keyword">double</span> angle3 = <span class="built_in">get_angle</span>(x2, y2, x3, y3, x1, y1);</span><br><span class="line">cout &lt;&lt; angle2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; angle3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; angle1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【后缀数组】模板 from Kausal</title>
      <link href="/2021/07/30/ACM/%E3%80%90%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E3%80%91%E6%A8%A1%E6%9D%BF%20from%20Kausal/"/>
      <url>/2021/07/30/ACM/%E3%80%90%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E3%80%91%E6%A8%A1%E6%9D%BF%20from%20Kausal/</url>
      
        <content type="html"><![CDATA[<p><a href="https://b23.tv/BV1S54y1G7P8" target="_blank">史上最易懂的后缀自动机讲解！独创理解思路还有例题讲解~</a></p><h1 id="O-nlogn"><a href="#O-nlogn" class="headerlink" title="$O(nlogn)$"></a>$O(nlogn)$</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> wa[N],wb[N],wv[N],wss[N],rak[N],height[N],cal[N],n,sa[N];</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> *r,<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> l)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="keyword">return</span> r[a]==r[b]&amp;&amp;r[a+l]==r[b+l];&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">da</span><span class="params">(<span class="keyword">int</span> *r,<span class="keyword">int</span> *sa,<span class="keyword">int</span> n,<span class="keyword">int</span> M)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">int</span> i,j,p,*x=wa,*y=wb,*t;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;M;i++) wss[i]=<span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) wss[x[i]=r[i]]++;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;M;i++) wss[i]+=wss[i<span class="number">-1</span>];</span><br><span class="line">     <span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) sa[--wss[x[i]]]=i;</span><br><span class="line">     <span class="keyword">for</span>(j=<span class="number">1</span>,p=<span class="number">1</span>;p&lt;n;j*=<span class="number">2</span>,M=p) &#123;</span><br><span class="line">        <span class="keyword">for</span>(p=<span class="number">0</span>,i=n-j;i&lt;n;i++) y[p++]=i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) <span class="keyword">if</span>(sa[i]&gt;=j) y[p++]=sa[i]-j;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) wv[i]=x[y[i]];</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;M;i++) wss[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) wss[wv[i]]++;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;M;i++) wss[i]+=wss[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) sa[--wss[wv[i]]]=y[i];</span><br><span class="line">        <span class="keyword">for</span>(t=x,x=y,y=t,p=<span class="number">1</span>,x[sa[<span class="number">0</span>]]=<span class="number">0</span>,i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        x[sa[i]]=<span class="built_in">cmp</span>(y,sa[i<span class="number">-1</span>],sa[i],j)?p<span class="number">-1</span>:p++;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calheight</span><span class="params">(<span class="keyword">int</span> *r,<span class="keyword">int</span> *sa,<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">int</span> i,j,k=<span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++) rak[sa[i]]=i;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;height[rak[i++]]=k)</span><br><span class="line">     <span class="keyword">for</span>(k?k--:<span class="number">0</span>,j=sa[rak[i]<span class="number">-1</span>];r[i+k]==r[j+k];k++);</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;i--)rak[i]=rak[i<span class="number">-1</span>],sa[i]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cas=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>))&#123;</span><br><span class="line">        n=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            cal[i]=s[i];</span><br><span class="line">        cal[n+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">da</span>(cal+<span class="number">1</span>,sa,n+<span class="number">1</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="built_in">calheight</span>(cal+<span class="number">1</span>,sa,n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,height[i]);</span><br><span class="line">        &#125;<span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,sa[i]);</span><br><span class="line">        &#125;<span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,rak[i]);</span><br><span class="line">        &#125;<span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="O-n"><a href="#O-n" class="headerlink" title="$O(n)$"></a>$O(n)$</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F(x) ((x) / 3 + ((x) % 3 == 1 ? 0 : tb))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> G(x) ((x) &lt; tb ? (x) * 3 + 1 : ((x) - tb) * 3 + 2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3</span>*(<span class="number">1e5</span>+<span class="number">5</span>);</span><br><span class="line"><span class="keyword">int</span> wa[N], wb[N], ws[N], wv[N], sa[N];</span><br><span class="line"><span class="keyword">int</span> rak[N], height[N], cal[N],n;</span><br><span class="line"><span class="keyword">char</span> s[N],ans[N],s1[N];</span><br><span class="line"><span class="keyword">int</span> cnt[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">c0</span><span class="params">(<span class="keyword">int</span> *r, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> r[a] == r[b] &amp;&amp; r[a + <span class="number">1</span>] == r[b + <span class="number">1</span>] &amp;&amp; r[a + <span class="number">2</span>] == r[b + <span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">c12</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> *r, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> r[a] &lt; r[b] || r[a] == r[b] &amp;&amp; <span class="built_in">c12</span>(<span class="number">1</span>, r, a + <span class="number">1</span>, b + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> r[a] &lt; r[b] || r[a] == r[b] &amp;&amp; wv[a + <span class="number">1</span>] &lt; wv[b + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Rsort</span><span class="params">(<span class="keyword">int</span> *r, <span class="keyword">int</span> *a, <span class="keyword">int</span> *b, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) wv[i] = r[a[i]];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) ws[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) ws[wv[i]]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) ws[i] += ws[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) b[--ws[wv[i]]] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dc3</span><span class="params">(<span class="keyword">int</span> *r, <span class="keyword">int</span> *sa, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, *rn = r + n, *san = sa + n, ta = <span class="number">0</span>, tb = (n + <span class="number">1</span>) / <span class="number">3</span>, tbc = <span class="number">0</span>, p;</span><br><span class="line">    r[n] = r[n + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="keyword">if</span> (i % <span class="number">3</span> != <span class="number">0</span>) wa[tbc++] = i;</span><br><span class="line">    <span class="built_in">Rsort</span>(r + <span class="number">2</span>, wa, wb, tbc, m);</span><br><span class="line">    <span class="built_in">Rsort</span>(r + <span class="number">1</span>, wb, wa, tbc, m);</span><br><span class="line">    <span class="built_in">Rsort</span>(r, wa, wb, tbc, m);</span><br><span class="line">    <span class="keyword">for</span> (p = <span class="number">1</span>, rn[<span class="built_in">F</span>(wb[<span class="number">0</span>])] = <span class="number">0</span>, i = <span class="number">1</span>; i &lt; tbc; i++)</span><br><span class="line">        rn[<span class="built_in">F</span>(wb[i])] = <span class="built_in">c0</span>(r, wb[i - <span class="number">1</span>], wb[i]) ? p - <span class="number">1</span> : p++;</span><br><span class="line">    <span class="keyword">if</span> (p &lt; tbc) <span class="built_in">dc3</span>(rn, san, tbc, p);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; tbc; i++) san[rn[i]] = i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; tbc; i++) <span class="keyword">if</span> (san[i] &lt; tb) wb[ta++] = san[i] * <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">3</span> == <span class="number">1</span>) wb[ta++] = n - <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">Rsort</span>(r, wb, wa, ta, m);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; tbc; i++) wv[wb[i] = <span class="built_in">G</span>(san[i])] = i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, j = <span class="number">0</span>, p = <span class="number">0</span>; i &lt; ta &amp;&amp; j &lt; tbc; p++)</span><br><span class="line">        sa[p] = <span class="built_in">c12</span>(wb[j] % <span class="number">3</span>, r, wa[i], wb[j]) ? wa[i++] : wb[j++];</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; ta; p++) sa[p] = wa[i++];</span><br><span class="line">    <span class="keyword">for</span> (; j &lt; tbc; p++) sa[p] = wb[j++];</span><br><span class="line">    <span class="comment">//for(int i=n;i;i--) rak[i]=rak[i-1];</span></span><br><span class="line">    <span class="comment">//for(int i=n;i;i--) sa[i]++;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calheight</span><span class="params">(<span class="keyword">int</span> *r, <span class="keyword">int</span> *sa, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) rak[sa[i]] = i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; height[rak[i++]] = k)</span><br><span class="line">        <span class="keyword">for</span> (k ? k-- : <span class="number">0</span>, j = sa[rak[i] - <span class="number">1</span>]; r[i + k] == r[j + k]; k++);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;i--) rak[i]=rak[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;i--) sa[i]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s+<span class="number">1</span>)&amp;&amp;s[<span class="number">1</span>] != <span class="string">&#x27;#&#x27;</span>) &#123;</span><br><span class="line">        n = <span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            cal[i] = s[i] - <span class="string">&#x27;a&#x27;</span> + <span class="number">1</span>;</span><br><span class="line">        cal[n+<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">dc3</span>(cal+<span class="number">1</span>, sa, n + <span class="number">1</span>, <span class="number">30</span>);</span><br><span class="line">        <span class="built_in">calheight</span>(cal+<span class="number">1</span>, sa, n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,height[i]);</span><br><span class="line">        &#125;<span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 后缀数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【FFT】洛谷 P4173 残缺的字符串</title>
      <link href="/2021/07/28/ACM/%E3%80%90FFT%E3%80%91%E6%B4%9B%E8%B0%B7%20P4173%20%E6%AE%8B%E7%BC%BA%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2021/07/28/ACM/%E3%80%90FFT%E3%80%91%E6%B4%9B%E8%B0%B7%20P4173%20%E6%AE%8B%E7%BC%BA%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4173" target="_blank">题链</a></p><p><a href="https://www.luogu.com.cn/blog/Ebola-Emperor/solution-p4173" target="_blank">通俗易懂</a></p><p>这份代码$O2$优化才能过</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 300009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 洛谷 P3803 【模板】多项式乘法（FFT）</span></span><br><span class="line"><span class="comment">// MS = 1e6 </span></span><br><span class="line"><span class="comment">// time: max( 800ms ) </span></span><br><span class="line"><span class="comment">// ========================================================================================</span></span><br><span class="line"><span class="keyword">typedef</span> complex&lt;<span class="keyword">double</span>&gt; comp;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = (<span class="number">1</span>&lt;&lt;<span class="number">20</span>)+<span class="number">10</span>; <span class="comment">// 长度为原长度向上的2^n, 再乘 2  </span></span><br><span class="line"><span class="keyword">int</span> lim, r[N];</span><br><span class="line">comp a[N], b[N];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line"><span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span> b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果n,m长度不变, 且多次求, 跑一遍 get_lim_r 就行 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_lim_r</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(lim = <span class="number">1</span>; lim &lt;= n + m; lim &lt;&lt;= <span class="number">1</span>) ++ l;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lim; i ++)</span><br><span class="line">r[i] = (r[i &gt;&gt; <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) | ((i &amp; <span class="number">1</span>) &lt;&lt; (l - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(comp * a, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lim; i ++)</span><br><span class="line"><span class="keyword">if</span>(i &lt; r[i]) <span class="built_in">swap</span>(a[i], a[r[i]]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; lim; i &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line"><span class="function">comp <span class="title">x</span><span class="params">(cos(PI / i), type * sin(PI / i))</span></span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lim; j += (i &lt;&lt; <span class="number">1</span>)) &#123;</span><br><span class="line"><span class="function">comp <span class="title">y</span><span class="params">(<span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k ++, y *= x) &#123;</span><br><span class="line">comp p = a[j + k], q = y * a[j + k + i];</span><br><span class="line">a[j + k] = p + q; a[j + k + i] = p - q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 多项式 c1 [0,n]; 多项式 c2 [0,m]; 返回结果 c</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get</span><span class="params">(<span class="keyword">double</span> *c1, <span class="keyword">int</span> n, <span class="keyword">double</span> *c2, <span class="keyword">int</span> m, <span class="keyword">double</span> *c)</span></span>&#123; </span><br><span class="line"><span class="comment">// 如果n,m长度不变, 且多次求, 跑一遍 get_lim_r 就行 </span></span><br><span class="line"><span class="comment">//get_lim_r(n, m); </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i ++) a[i] = c1[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i ++) b[i] = c2[i];</span><br><span class="line"></span><br><span class="line"><span class="built_in">fft</span>(a, <span class="number">1</span>), <span class="built_in">fft</span>(b, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= lim; i ++) a[i] *= b[i];</span><br><span class="line"><span class="built_in">fft</span>(a, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + m; i ++) c[i] = (LL)(<span class="number">0.5</span> + a[i].<span class="built_in">real</span>() / lim);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ========================================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// P(x) = ∑S(i)^3*B(j) + ∑S(i)*B(j)^3 - 2*∑S(i)^2*B(j)^2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">char</span> s1[MS], s2[MS];</span><br><span class="line"><span class="keyword">double</span> p1[MS], p2[MS], p3[MS];</span><br><span class="line"><span class="keyword">double</span> A[MS], B[MS], S[MS]; </span><br><span class="line"><span class="keyword">double</span> f[<span class="number">3</span>][MS&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> ac[MS], tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s1); <span class="built_in">getchar</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s2); <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) p1[i] = s1[i]==<span class="string">&#x27;*&#x27;</span>? <span class="number">0</span>:s1[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) p2[i] = s2[i]==<span class="string">&#x27;*&#x27;</span>? <span class="number">0</span>:s2[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) p3[i] = p1[n-i<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">get_lim_r</span>(n<span class="number">-1</span>, m<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) S[i] = p3[i]*p3[i]*p3[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) B[i] = p2[i];</span><br><span class="line"><span class="built_in">clear</span>(); <span class="built_in">get</span>(S, n<span class="number">-1</span>, B, m<span class="number">-1</span>, f[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) S[i] = p3[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) B[i] = p2[i]*p2[i]*p2[i];</span><br><span class="line"><span class="built_in">clear</span>(); <span class="built_in">get</span>(S, n<span class="number">-1</span>, B, m<span class="number">-1</span>, f[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) S[i] = p3[i]*p3[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) B[i] = p2[i]*p2[i];</span><br><span class="line"><span class="built_in">clear</span>(); <span class="built_in">get</span>(S, n<span class="number">-1</span>, B, m<span class="number">-1</span>, f[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&lt;m;i++)&#123;</span><br><span class="line"><span class="keyword">double</span> P = f[<span class="number">0</span>][i] + f[<span class="number">1</span>][i] - f[<span class="number">2</span>][i]*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(P) &lt; eps) ac[++tot] = i-n+<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,tot);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ac[i]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【FFT】洛谷 P3803 【模板】多项式乘法（FFT）</title>
      <link href="/2021/07/28/ACM/%E3%80%90FFT%E3%80%91%E6%B4%9B%E8%B0%B7%20P3803%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%A4%9A%E9%A1%B9%E5%BC%8F%E4%B9%98%E6%B3%95%EF%BC%88FFT%EF%BC%89/"/>
      <url>/2021/07/28/ACM/%E3%80%90FFT%E3%80%91%E6%B4%9B%E8%B0%B7%20P3803%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%A4%9A%E9%A1%B9%E5%BC%8F%E4%B9%98%E6%B3%95%EF%BC%88FFT%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3803" target="_blank">题链</a></p><p>套了题解区的板子</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> p1[MS], p2[MS];</span><br><span class="line"><span class="keyword">double</span> ac[MS&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 洛谷 P3803 【模板】多项式乘法（FFT）</span></span><br><span class="line"><span class="comment">// MS = 1e6 </span></span><br><span class="line"><span class="comment">// time: max( 800ms ) </span></span><br><span class="line"><span class="comment">// ========================================================================================</span></span><br><span class="line"><span class="keyword">typedef</span> complex&lt;<span class="keyword">double</span>&gt; comp;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = (<span class="number">1</span>&lt;&lt;<span class="number">21</span>)+<span class="number">10</span>; <span class="comment">// 长度为原长度向上的2^n, 再乘 2  </span></span><br><span class="line"><span class="keyword">int</span> lim, r[N];</span><br><span class="line">comp a[N], b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(comp * a, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lim; i ++)</span><br><span class="line"><span class="keyword">if</span>(i &lt; r[i]) <span class="built_in">swap</span>(a[i], a[r[i]]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; lim; i &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line"><span class="function">comp <span class="title">x</span><span class="params">(cos(PI / i), type * sin(PI / i))</span></span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lim; j += (i &lt;&lt; <span class="number">1</span>)) &#123;</span><br><span class="line"><span class="function">comp <span class="title">y</span><span class="params">(<span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k ++, y *= x) &#123;</span><br><span class="line">comp p = a[j + k], q = y * a[j + k + i];</span><br><span class="line">a[j + k] = p + q; a[j + k + i] = p - q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 多项式 c1 [0,n]; 多项式 c2 [0,m];</span></span><br><span class="line"><span class="comment">// 返回结果 c  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> *c1, <span class="keyword">int</span> n, <span class="keyword">int</span> *c2, <span class="keyword">int</span> m, <span class="keyword">double</span> *c)</span></span>&#123; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i ++) a[i] = c1[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i ++) b[i] = c2[i];</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(lim = <span class="number">1</span>; lim &lt;= n + m; lim &lt;&lt;= <span class="number">1</span>) ++ l;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lim; i ++)</span><br><span class="line">r[i] = (r[i &gt;&gt; <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) | ((i &amp; <span class="number">1</span>) &lt;&lt; (l - <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">fft</span>(a, <span class="number">1</span>), <span class="built_in">fft</span>(b, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= lim; i ++) a[i] *= b[i];</span><br><span class="line"><span class="built_in">fft</span>(a, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + m; i ++) c[i] = (<span class="keyword">int</span>)(<span class="number">0.5</span> + a[i].<span class="built_in">real</span>() / lim);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ========================================================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 两多项式乘积的系数 </span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i ++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p1[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i ++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p2[i]);</span><br><span class="line"><span class="built_in">get</span>(p1, n, p2, m, ac);  </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n+m;i++) <span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>,(LL)ac[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护区间异或】codeforces E. XOR on Segment</title>
      <link href="/2021/07/27/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E5%BC%82%E6%88%96%E3%80%91codeforces%20E.%20XOR%20on%20Segment/"/>
      <url>/2021/07/27/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E5%BC%82%E6%88%96%E3%80%91codeforces%20E.%20XOR%20on%20Segment/</url>
      
        <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/242/problem/E" target="_blank">题链</a></p><p>对于一个区间有如下数字{$5$，$6$，$7$，$8$}，他们的二进制表示分别为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5：0101</span><br><span class="line">6：0110</span><br><span class="line">7：0111</span><br><span class="line">8：1000</span><br></pre></td></tr></table></figure><p>那么这区间数的总和可以这么计算：<br>$1*(2^3) + 3*(2^2) + 2*(2^1) + 2*(2^0)$;<br>其中$(2^i)$次方前的系数就是第$i$位的$1$的个数之和</p><p>将他们异或上一个值 如 $4$：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5^4: 0101^0100 = 0001</span><br><span class="line">6^4: 0110^0100 = 0010</span><br><span class="line">7^4: 0111^0100 = 0011</span><br><span class="line">8^4: 1000^0100 = 1100</span><br></pre></td></tr></table></figure><p>那么异或后这一段区间的总和为：<br>$1*(2^3) + 1*(2^2) + 2*(2^1) + 2*(2^0)$;<br>发现对比异或之前就只有(2^2)前的系数改变；<br>原因是$4$的二进制表示为$0100$, 只有$(2^2)$的系数为$1$；<br>所以对于需要异或的一个值$x$，如果$x$的第$i$位为$1$，那么这个区间内的第$i$位的$1$的个数就需要变化；<br>变化的结果就是区间长度减去第$i$位$1$的个数；<br>于是可以开$20$棵线段树维护每一位的结果；  </p><p>代码段我对于一个节点开了个数组，就不搞个$20$棵了，本质上是一样的；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MXLEN 17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">22</span>];</span><br><span class="line"><span class="keyword">int</span> la[<span class="number">22</span>];</span><br><span class="line"><span class="keyword">bool</span> isla;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">p[rt].cnt[i] = p[ls].cnt[i] + p[rs].cnt[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">p[rt].cnt[i] = ( (x&gt;&gt;i)&amp;<span class="number">1</span> );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls); <span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].isla)&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> ln = m-l+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> rn = r-m;</span><br><span class="line">p[ls].isla = p[rs].isla = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">int</span> t = p[rt].la[i];</span><br><span class="line">p[rt].la[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(t)&#123;</span><br><span class="line">p[ls].cnt[i] = ln - p[ls].cnt[i];</span><br><span class="line">p[rs].cnt[i] = rn - p[rs].cnt[i];</span><br><span class="line">&#125;</span><br><span class="line">p[ls].la[i] ^= t;</span><br><span class="line">p[rs].la[i] ^= t;</span><br><span class="line"><span class="keyword">if</span>(p[ls].la[i]) p[ls].isla = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(p[rs].la[i]) p[rs].isla = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">p[rt].isla = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">int</span> sum = r-l+<span class="number">1</span>;</span><br><span class="line">p[rt].isla = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">int</span> t = (x&gt;&gt;i)&amp;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(t) p[rt].cnt[i] = sum-p[rt].cnt[i];</span><br><span class="line">p[rt].la[i] ^= t;</span><br><span class="line"><span class="keyword">if</span>(p[rt].la[i]) p[rt].isla = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify</span>(L,R,l,m,ls,x);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify</span>(L,R,m+<span class="number">1</span>,r,rs,x);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">LL sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">LL t = p[rt].cnt[i];</span><br><span class="line">sum += (<span class="number">1ll</span>&lt;&lt;i)*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">query</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> op,l,r,x;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="built_in">modify</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护矩阵】LibreOJ-2980 大魔法师</title>
      <link href="/2021/07/24/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E7%9F%A9%E9%98%B5%E3%80%91LibreOJ-2980%20%E5%A4%A7%E9%AD%94%E6%B3%95%E5%B8%88/"/>
      <url>/2021/07/24/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E7%9F%A9%E9%98%B5%E3%80%91LibreOJ-2980%20%E5%A4%A7%E9%AD%94%E6%B3%95%E5%B8%88/</url>
      
        <content type="html"><![CDATA[<p><a href="https://vjudge.net/problem/LibreOJ-2980" target="_blank">题链</a></p><p>线段树维护矩阵模板题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 250009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">matrix</span>&#123;</span></span><br><span class="line">LL rown,coln,a[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">matrix la[MS&lt;&lt;<span class="number">2</span>],I;</span><br><span class="line"><span class="keyword">bool</span> isla[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">matrix <span class="keyword">operator</span> + (matrix t1,matrix t2)&#123;</span><br><span class="line">matrix t = &#123;t1.rown,t1.coln&#125;;</span><br><span class="line"><span class="built_in">memset</span>(t.a,<span class="number">0</span>,<span class="keyword">sizeof</span> t.a);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t.rown;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=t.coln;j++)&#123;</span><br><span class="line">t.a[i][j] = t1.a[i][j] + t2.a[i][j];</span><br><span class="line">t.a[i][j] %= mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">matrix <span class="keyword">operator</span> * (matrix t1,matrix t2)&#123;</span><br><span class="line">matrix t = &#123;t1.rown,t2.coln&#125;;</span><br><span class="line"><span class="built_in">memset</span>(t.a,<span class="number">0</span>,<span class="keyword">sizeof</span> t.a);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>;u&lt;=t.rown;u++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">1</span>;v&lt;=t.coln;v++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t1.coln;i++)&#123;</span><br><span class="line">t.a[u][v] += t1.a[u][i]*t2.a[i][v];</span><br><span class="line">t.a[u][v] %= mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = p[ls] + p[rs];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">la[rt] = I;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">LL a,b,c;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">p[rt] = &#123;<span class="number">1</span>,<span class="number">4</span>&#125;;</span><br><span class="line">p[rt].a[<span class="number">1</span>][<span class="number">1</span>] = a;</span><br><span class="line">p[rt].a[<span class="number">1</span>][<span class="number">2</span>] = b;</span><br><span class="line">p[rt].a[<span class="number">1</span>][<span class="number">3</span>] = c;</span><br><span class="line">p[rt].a[<span class="number">1</span>][<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,matrix f)</span></span>&#123;</span><br><span class="line">p[rt] = p[rt] * f;</span><br><span class="line">la[rt] = la[rt] * f;</span><br><span class="line">isla[rt] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(isla[rt])&#123;</span><br><span class="line"><span class="built_in">update</span>(ls,la[rt]);</span><br><span class="line"><span class="built_in">update</span>(rs,la[rt]);</span><br><span class="line">la[rt] = I;</span><br><span class="line">isla[rt] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,matrix f)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="built_in">update</span>(rt,f);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">modify</span>(L,R,l,m,ls,f);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">modify</span>(L,R,m+<span class="number">1</span>,r,rs,f);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">matrix <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &lt; L) <span class="keyword">return</span> <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(m &gt;= R) <span class="keyword">return</span> <span class="built_in">query</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(L,R,l,m,ls) + <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">I = &#123;<span class="number">4</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++) I.a[i][i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">init</span>(); <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line">matrix f = &#123;<span class="number">4</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">LL op,l,r,val;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="built_in">memset</span>(f.a,<span class="number">0</span>,<span class="keyword">sizeof</span> f.a);</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">f.a[<span class="number">1</span>][<span class="number">1</span>] = f.a[<span class="number">2</span>][<span class="number">1</span>] = f.a[<span class="number">2</span>][<span class="number">2</span>] = f.a[<span class="number">3</span>][<span class="number">3</span>] = f.a[<span class="number">4</span>][<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">f.a[<span class="number">1</span>][<span class="number">1</span>] = f.a[<span class="number">2</span>][<span class="number">2</span>] = f.a[<span class="number">3</span>][<span class="number">2</span>] = f.a[<span class="number">3</span>][<span class="number">3</span>] = f.a[<span class="number">4</span>][<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">3</span>)&#123;</span><br><span class="line">f.a[<span class="number">1</span>][<span class="number">1</span>] = f.a[<span class="number">2</span>][<span class="number">2</span>] = f.a[<span class="number">1</span>][<span class="number">3</span>] = f.a[<span class="number">3</span>][<span class="number">3</span>] = f.a[<span class="number">4</span>][<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">4</span>)&#123;</span><br><span class="line">f.a[<span class="number">1</span>][<span class="number">1</span>] = f.a[<span class="number">2</span>][<span class="number">2</span>] = f.a[<span class="number">3</span>][<span class="number">3</span>] = f.a[<span class="number">4</span>][<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; f.a[<span class="number">4</span>][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">5</span>)&#123;</span><br><span class="line">f.a[<span class="number">1</span>][<span class="number">1</span>] = f.a[<span class="number">3</span>][<span class="number">3</span>] = f.a[<span class="number">4</span>][<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; f.a[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">6</span>)&#123;</span><br><span class="line">f.a[<span class="number">1</span>][<span class="number">1</span>] = f.a[<span class="number">2</span>][<span class="number">2</span>] = f.a[<span class="number">4</span>][<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; f.a[<span class="number">4</span>][<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(op != <span class="number">7</span>) <span class="built_in">modify</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,f);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">matrix ans = <span class="built_in">query</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">cout &lt;&lt; ans.a[<span class="number">1</span>][<span class="number">1</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">cout &lt;&lt; ans.a[<span class="number">1</span>][<span class="number">2</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">cout &lt;&lt; ans.a[<span class="number">1</span>][<span class="number">3</span>] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【点分治 树状数组】洛谷 P4178 Tree</title>
      <link href="/2021/07/22/ACM/%E3%80%90%E7%82%B9%E5%88%86%E6%B2%BB%20%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91%E6%B4%9B%E8%B0%B7%20P4178%20Tree/"/>
      <url>/2021/07/22/ACM/%E3%80%90%E7%82%B9%E5%88%86%E6%B2%BB%20%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91%E6%B4%9B%E8%B0%B7%20P4178%20Tree/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4178" target="_blank">题链</a></p><p>首先点分治；<br>由于求解的是小于等于$k$的个数，于是开一个树状数组维护前缀和即可；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 20009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 40009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> to,val;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> sz[MS],w[MS];</span><br><span class="line"><span class="keyword">int</span> rt,tr_size; </span><br><span class="line"><span class="keyword">int</span> del[MS];</span><br><span class="line"><span class="keyword">int</span> dis[MS];</span><br><span class="line"><span class="keyword">int</span> dislist[MS] ,cntd;</span><br><span class="line"><span class="keyword">int</span> ext[MAXN];</span><br><span class="line">queue&lt;<span class="keyword">int</span> &gt; Q;</span><br><span class="line">LL ans;</span><br><span class="line"><span class="keyword">int</span> p[MAXN]; <span class="comment">// 树状数组 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=<span class="number">20000</span>;pos+=<span class="built_in">lowbit</span>(pos)) p[pos] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos)) ans += p[pos];</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_rt</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line">w[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line"><span class="keyword">if</span>(v != f &amp;&amp; !del[v])&#123;</span><br><span class="line"><span class="built_in">get_rt</span>(v,u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line">w[u] = <span class="built_in">max</span>(w[u],sz[v]);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">w[u] = <span class="built_in">max</span>(w[u],tr_size-sz[u]);</span><br><span class="line"><span class="keyword">if</span>(w[u] &lt; w[rt]) rt = u;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_dis</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[u] &lt;= m) dislist[++cntd] = dis[u];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line"><span class="keyword">int</span> val = nb.val;</span><br><span class="line"><span class="keyword">if</span>(v != f &amp;&amp; !del[v])&#123;</span><br><span class="line">dis[v] = dis[u] + val;</span><br><span class="line"><span class="built_in">get_dis</span>(v,u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">ext[<span class="number">0</span>]++;</span><br><span class="line"><span class="built_in">add</span>(<span class="number">1</span>,<span class="number">1</span>); <span class="comment">// +1方便树状数组维护 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line"><span class="keyword">int</span> val = nb.val;</span><br><span class="line"><span class="keyword">if</span>(!del[v])&#123;</span><br><span class="line">cntd = <span class="number">0</span>;</span><br><span class="line">dis[v] = val;</span><br><span class="line"><span class="built_in">get_dis</span>(v,u);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cntd;i++)&#123;</span><br><span class="line">ans += <span class="built_in">get_sum</span>(m-dislist[i]+<span class="number">1</span>); <span class="comment">// 树状数组求前缀和 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cntd;i++)&#123;</span><br><span class="line">ext[dislist[i]]++;</span><br><span class="line"><span class="built_in">add</span>(dislist[i]+<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">Q.<span class="built_in">push</span>(dislist[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ext[<span class="number">0</span>]--;</span><br><span class="line"><span class="built_in">add</span>(<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">ext[Q.<span class="built_in">front</span>()]--;</span><br><span class="line"><span class="built_in">add</span>(Q.<span class="built_in">front</span>()+<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line">Q.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">del[u] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">cal</span>(u);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line"><span class="keyword">if</span>(!del[v])&#123;</span><br><span class="line">w[rt = <span class="number">0</span>] = tr_size = sz[v];</span><br><span class="line"><span class="built_in">get_rt</span>(v,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">get_rt</span>(rt,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">divide</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v,val;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v &gt;&gt; val;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(&#123;v,val&#125;);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(&#123;u,val&#125;); </span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line">w[rt = <span class="number">0</span>] = tr_size = n;</span><br><span class="line"><span class="built_in">get_rt</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">get_rt</span>(rt,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">divide</span>(rt);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
            <tag> 点分治 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【点分治】洛谷 P2634 聪聪可可</title>
      <link href="/2021/07/21/ACM/%E3%80%90%E7%82%B9%E5%88%86%E6%B2%BB%E3%80%91%E6%B4%9B%E8%B0%B7%20P2634%20%E8%81%AA%E8%81%AA%E5%8F%AF%E5%8F%AF/"/>
      <url>/2021/07/21/ACM/%E3%80%90%E7%82%B9%E5%88%86%E6%B2%BB%E3%80%91%E6%B4%9B%E8%B0%B7%20P2634%20%E8%81%AA%E8%81%AA%E5%8F%AF%E5%8F%AF/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2634" target="_blank">题链</a></p><p>点分治模板题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 20009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> to,val;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node &gt; vc[MS];</span><br><span class="line">LL ans,sum;</span><br><span class="line"><span class="keyword">int</span> rt,tr_size;</span><br><span class="line"><span class="keyword">int</span> sz[MS],w[MS];</span><br><span class="line"><span class="keyword">int</span> del[MS];</span><br><span class="line"><span class="keyword">int</span> dis[MS];</span><br><span class="line"><span class="keyword">int</span> ext[MAXN];</span><br><span class="line"><span class="keyword">int</span> dismap[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_rt</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line">w[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line"><span class="keyword">if</span>(v != f &amp;&amp; !del[v])&#123;</span><br><span class="line"><span class="built_in">get_rt</span>(v,u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line">w[u] = <span class="built_in">max</span>(w[u],sz[v]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">w[u] = <span class="built_in">max</span>(w[u],tr_size-sz[u]);</span><br><span class="line"><span class="keyword">if</span>(w[u] &lt; w[rt]) rt = u;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_dis</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">dismap[dis[u]%<span class="number">3</span>]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line"><span class="keyword">int</span> val = nb.val;</span><br><span class="line"><span class="keyword">if</span>(v != f &amp;&amp; !del[v])&#123;</span><br><span class="line">dis[v] = ( dis[u]+val ) % <span class="number">3</span>;</span><br><span class="line"><span class="built_in">get_dis</span>(v,u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">ext[<span class="number">0</span>]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line"><span class="keyword">int</span> val = nb.val;</span><br><span class="line"><span class="keyword">if</span>(!del[v])&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++) dismap[i] = <span class="number">0</span>;</span><br><span class="line">dis[v] = val % <span class="number">3</span>;</span><br><span class="line"><span class="built_in">get_dis</span>(v,u);</span><br><span class="line"><span class="comment">// 更新答案 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">ans += dismap[i]*ext[(<span class="number">3</span>-i)%<span class="number">3</span>]*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">ext[i] += dismap[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++) ext[i] = <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">del[u] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">cal</span>(u);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line"><span class="keyword">if</span>(!del[v])&#123;</span><br><span class="line">w[rt = <span class="number">0</span>] = tr_size = sz[v];</span><br><span class="line"><span class="built_in">get_rt</span>(v,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">get_rt</span>(rt,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">divide</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v,val;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v &gt;&gt; val;</span><br><span class="line">val %= <span class="number">3</span>;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(&#123;v,val&#125;);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(&#123;u,val&#125;);</span><br><span class="line">&#125;</span><br><span class="line">ans = n ,sum = n*n;</span><br><span class="line">w[rt = <span class="number">0</span>] = tr_size = n;</span><br><span class="line"><span class="built_in">get_rt</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">get_rt</span>(rt,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">divide</span>(rt);</span><br><span class="line"></span><br><span class="line">LL t = __gcd(ans,sum);</span><br><span class="line">ans /= t ,sum /= t;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; sum &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 点分治 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【单调栈】AcWing 131. 直方图中最大的矩形</title>
      <link href="/2021/07/21/ACM/%E3%80%90%E5%8D%95%E8%B0%83%E6%A0%88%E3%80%91AcWing%20131.%20%E7%9B%B4%E6%96%B9%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2/"/>
      <url>/2021/07/21/ACM/%E3%80%90%E5%8D%95%E8%B0%83%E6%A0%88%E3%80%91AcWing%20131.%20%E7%9B%B4%E6%96%B9%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.acwing.com/problem/content/133/" target="_blank">题链</a></p><p><a href="https://blog.csdn.net/lucky52529/article/details/89155694" target="_blank">单调栈非常好的讲解</a></p><h1 id="简单易懂"><a href="#简单易懂" class="headerlink" title="简单易懂"></a>简单易懂</h1><p>利用单调栈：寻找比$p[i]$小的下一个值的位置和上一个值的位置；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 3000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">stack&lt;LL &gt; sta;</span><br><span class="line">LL ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">LL val;</span><br><span class="line">&#125;p[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">p[n+<span class="number">1</span>] = p[<span class="number">0</span>] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">1</span>;i++)&#123; <span class="comment">// 寻找 p[i] 后第一个比 p[i] 小的位置 </span></span><br><span class="line"><span class="keyword">if</span>(sta.<span class="built_in">empty</span>() || p[sta.<span class="built_in">top</span>()].val &lt;= p[i].val) sta.<span class="built_in">push</span>(i);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(!sta.<span class="built_in">empty</span>() &amp;&amp; p[sta.<span class="built_in">top</span>()].val &gt; p[i].val)&#123;</span><br><span class="line"><span class="keyword">int</span> t = sta.<span class="built_in">top</span>();</span><br><span class="line">sta.<span class="built_in">pop</span>();</span><br><span class="line">p[t].r = i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">sta.<span class="built_in">push</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!sta.<span class="built_in">empty</span>()) sta.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">0</span>;i--)&#123; <span class="comment">// 寻找 p[i] 前第一个比 p[i] 小的位置 </span></span><br><span class="line"><span class="keyword">if</span>(sta.<span class="built_in">empty</span>() || p[sta.<span class="built_in">top</span>()].val &lt;= p[i].val) sta.<span class="built_in">push</span>(i);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(!sta.<span class="built_in">empty</span>() &amp;&amp; p[sta.<span class="built_in">top</span>()].val &gt; p[i].val)&#123;</span><br><span class="line"><span class="keyword">int</span> t = sta.<span class="built_in">top</span>();</span><br><span class="line">sta.<span class="built_in">pop</span>();</span><br><span class="line">p[t].l = i+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">sta.<span class="built_in">push</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!sta.<span class="built_in">empty</span>()) sta.<span class="built_in">pop</span>();</span><br><span class="line"><span class="comment">// getans </span></span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">ans = <span class="built_in">max</span>(ans ,p[i].val*(p[i].r-p[i].l+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; n)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i].val;</span><br><span class="line">p[i].l = p[i].r = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="小小优化"><a href="#小小优化" class="headerlink" title="小小优化"></a>小小优化</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 3000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL p[MS];</span><br><span class="line">stack&lt;LL &gt; sta;</span><br><span class="line">LL ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line">p[++n] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(sta.<span class="built_in">empty</span>() || p[sta.<span class="built_in">top</span>()] &lt;= p[i])&#123;</span><br><span class="line">sta.<span class="built_in">push</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">LL t;</span><br><span class="line"><span class="keyword">while</span>(!sta.<span class="built_in">empty</span>() &amp;&amp; p[sta.<span class="built_in">top</span>()] &gt; p[i])&#123;</span><br><span class="line">t = sta.<span class="built_in">top</span>();</span><br><span class="line">sta.<span class="built_in">pop</span>();</span><br><span class="line">ans = <span class="built_in">max</span>(ans ,(i-t)*p[t] );  </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 由于p[i]这个值左边可能向左扩展</span></span><br><span class="line"><span class="comment">// 所以直接将i的位置改到它能扩展的最左位置</span></span><br><span class="line"><span class="comment">// 这样求面积遍历数组只要从左到右一遍过 </span></span><br><span class="line">sta.<span class="built_in">push</span>(t); </span><br><span class="line">p[t] = p[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!sta.<span class="built_in">empty</span>()) sta.<span class="built_in">pop</span>();</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &amp;&amp; n)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单调栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【点分治】洛谷 P3806 【模板】点分治1</title>
      <link href="/2021/07/20/ACM/%E3%80%90%E7%82%B9%E5%88%86%E6%B2%BB%E3%80%91%E6%B4%9B%E8%B0%B7%20P3806%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%82%B9%E5%88%86%E6%B2%BB1/"/>
      <url>/2021/07/20/ACM/%E3%80%90%E7%82%B9%E5%88%86%E6%B2%BB%E3%80%91%E6%B4%9B%E8%B0%B7%20P3806%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%82%B9%E5%88%86%E6%B2%BB1/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3806" target="_blank">题链</a></p><p>点分治分为四步：<br>$1.$找到树的重心<br>$2.$删除树的重心<br>$3.$处理经过重心的路径<br>$4.$处理重心的子树  </p><p><a href="https://www.bilibili.com/video/BV1PE41197md" target="_blank">详解来自BiliBili</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 10000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> to;</span><br><span class="line">LL val;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> ask[MS] ,ac[MS];</span><br><span class="line"><span class="keyword">int</span> rt,tr_size;</span><br><span class="line"><span class="keyword">int</span> sz[MS],w[MS];</span><br><span class="line"><span class="keyword">int</span> del[MS];</span><br><span class="line"><span class="keyword">int</span> dis[MS];</span><br><span class="line"><span class="keyword">int</span> dislist[MS],cntd;</span><br><span class="line"><span class="keyword">int</span> ext[MAXN];</span><br><span class="line">queue&lt;<span class="keyword">int</span> &gt; tmp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_rt</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123; <span class="comment">// 找重心 </span></span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line">w[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line"><span class="keyword">if</span>(v != f &amp;&amp; !del[v])&#123;</span><br><span class="line"><span class="built_in">get_rt</span>(v,u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line">w[u] = <span class="built_in">max</span>(w[u],sz[v]); <span class="comment">// 得到最大的子树大小 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">w[u] = <span class="built_in">max</span>(w[u] ,tr_size-sz[u]); <span class="comment">// 自己以及祖先的大小 </span></span><br><span class="line"><span class="keyword">if</span>(w[u] &lt; w[rt]) rt = u; <span class="comment">// 更新重心 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_dis</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">dislist[++cntd] = dis[u]; <span class="comment">// 记录所有距离 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line">LL val = nb.val;</span><br><span class="line"><span class="keyword">if</span>(v != f &amp;&amp; !del[v])&#123;</span><br><span class="line">dis[v] = dis[u] + val;</span><br><span class="line"><span class="built_in">get_dis</span>(v,u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">ext[<span class="number">0</span>] = <span class="number">1</span>; <span class="comment">// 标记权值 0 存在 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123;</span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line">LL val = nb.val;</span><br><span class="line"><span class="keyword">if</span>(!del[v])&#123;</span><br><span class="line"><span class="comment">// 得到 v为根的子树到 u 的所有距离 </span></span><br><span class="line">cntd = <span class="number">0</span>;</span><br><span class="line">dis[v] = val;</span><br><span class="line"><span class="built_in">get_dis</span>(v,u);</span><br><span class="line"><span class="comment">// 处理询问 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cntd;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(ask[i] &gt;= dislist[j])&#123;</span><br><span class="line">ac[i] |= ext[ ask[i] - dislist[j] ];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 记录所有距离，标记该距离存在 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cntd;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(dislist[i] &lt;= <span class="number">1e7</span>)&#123;</span><br><span class="line">ext[ dislist[i] ] = <span class="number">1</span>;</span><br><span class="line">tmp.<span class="built_in">push</span>( dislist[i] );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 删除所有距离 </span></span><br><span class="line">ext[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!tmp.<span class="built_in">empty</span>())&#123;</span><br><span class="line">ext[ tmp.<span class="built_in">front</span>() ] = <span class="number">0</span>;</span><br><span class="line">tmp.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">del[u] = <span class="number">1</span>; <span class="comment">// 删除重心 </span></span><br><span class="line"><span class="built_in">cal</span>(u);<span class="comment">// 处理经过重心的路径 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;nb:vc[u])&#123; <span class="comment">// 对于每一个子树同样分治 </span></span><br><span class="line"><span class="keyword">int</span> v = nb.to;</span><br><span class="line"><span class="keyword">if</span>(!del[v])&#123;</span><br><span class="line"><span class="comment">// 找重心并分治 </span></span><br><span class="line">w[rt = <span class="number">0</span>] = tr_size = sz[v];</span><br><span class="line"><span class="built_in">get_rt</span>(v,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">get_rt</span>(rt,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">divide</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">LL val;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v &gt;&gt; val;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(&#123;v,val&#125;);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(&#123;u,val&#125;);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cin &gt;&gt; ask[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 找到树的重心 </span></span><br><span class="line">w[rt = <span class="number">0</span>] = tr_size = n;</span><br><span class="line"><span class="built_in">get_rt</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">get_rt</span>(rt,<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 分治 </span></span><br><span class="line"><span class="built_in">divide</span>(rt);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(ac[i]) cout &lt;&lt; <span class="string">&quot;AYE\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NAY\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> ce;</span><br><span class="line"><span class="comment">//cin &gt;&gt; ce;</span></span><br><span class="line">ce = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 点分治 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】两球体积交</title>
      <link href="/2021/07/19/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E4%B8%A4%E7%90%83%E4%BD%93%E7%A7%AF%E4%BA%A4/"/>
      <url>/2021/07/19/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E4%B8%A4%E7%90%83%E4%BD%93%E7%A7%AF%E4%BA%A4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 1e18</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">const</span> ll maxn = <span class="number">1e5</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> ld pi = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"></span><br><span class="line">ld xa,ya,za,ra,xb,yb,zb,rb;</span><br><span class="line">ld d,va,vb,ans,ha,hb;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; xa &gt;&gt; ya &gt;&gt; za &gt;&gt; ra &gt;&gt; xb &gt;&gt; yb &gt;&gt; zb &gt;&gt; rb;</span><br><span class="line"></span><br><span class="line">d = <span class="built_in">sqrt</span>( (xa-xb)*(xa-xb) + (ya-yb)*(ya-yb) + (za-zb)*(za-zb) ); <span class="comment">//圆心距离</span></span><br><span class="line">va = (<span class="number">4.0</span>/<span class="number">3.0</span>)*pi*(ra*ra*ra);   <span class="comment">// a球体积</span></span><br><span class="line">vb = (<span class="number">4.0</span>/<span class="number">3.0</span>)*pi*(rb*rb*rb);   <span class="comment">// b球体积</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(d &gt;= ra+rb) &#123;     <span class="comment">//判断相离或相切</span></span><br><span class="line">ans = va+vb;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( d+<span class="built_in">min</span>(ra,rb) &lt;= <span class="built_in">max</span>(ra,rb) ) &#123; <span class="comment">// 包含</span></span><br><span class="line">ans = <span class="built_in">max</span>(va,vb);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;   <span class="comment">//相切</span></span><br><span class="line">ha = ra - ( ( (ra*ra) - (rb*rb) + (d*d) ) / (<span class="number">2</span>*d) ); <span class="comment">//球冠的高</span></span><br><span class="line">hb = rb - ( ( (rb*rb) - (ra*ra) + (d*d) ) / (<span class="number">2</span>*d) );</span><br><span class="line"></span><br><span class="line">ld vra = ( pi*ha*ha*( <span class="number">3</span>*ra-ha  ) ) / <span class="number">3.0</span>;     <span class="comment">//球冠体积</span></span><br><span class="line">ld vrb = ( pi*hb*hb*( <span class="number">3</span>*rb-hb  ) ) / <span class="number">3.0</span>;</span><br><span class="line"></span><br><span class="line">ans = va + vb - vra - vrb;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">7</span>) &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】三点求圆心和半径</title>
      <link href="/2021/07/07/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E4%B8%89%E7%82%B9%E6%B1%82%E5%9C%86%E5%BF%83%E5%92%8C%E5%8D%8A%E5%BE%84/"/>
      <url>/2021/07/07/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E4%B8%89%E7%82%B9%E6%B1%82%E5%9C%86%E5%BF%83%E5%92%8C%E5%8D%8A%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">&#125; p[MS];</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">get_center</span><span class="params">(<span class="keyword">double</span> x1,<span class="keyword">double</span> y1,<span class="keyword">double</span> x2,<span class="keyword">double</span> y2,<span class="keyword">double</span> x3,<span class="keyword">double</span> y3)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> A,B,C,D,x,y,r;</span><br><span class="line"><span class="keyword">double</span> x1x1 = x1*x1;</span><br><span class="line"><span class="keyword">double</span> y1y1 = y1*y1;</span><br><span class="line"><span class="keyword">double</span> x2x2 = x2*x2;</span><br><span class="line"><span class="keyword">double</span> y2y2 = y2*y2;</span><br><span class="line"><span class="keyword">double</span> x3x3 = x3*x3;</span><br><span class="line"><span class="keyword">double</span> y3y3 = y3*y3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> x2y3 = x2*y3;</span><br><span class="line"><span class="keyword">double</span> x3y2 = x3*y2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> x2_x3 = x2-x3;</span><br><span class="line"><span class="keyword">double</span> y2_y3 = y2-y3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> x1x1py1y1 = x1x1 + y1y1;</span><br><span class="line"><span class="keyword">double</span> x2x2py2y2 = x2x2 + y2y2;</span><br><span class="line"><span class="keyword">double</span> x3x3py3y3 = x3x3 + y3y3;</span><br><span class="line"></span><br><span class="line">A = x1 * y2_y3 - y1 * x2_x3 + x2y3 - x3y2;</span><br><span class="line">B = x1x1py1y1 * (-y2_y3) + x2x2py2y2 * (y1-y3) + x3x3py3y3 * (y2-y1);</span><br><span class="line">C = x1x1py1y1 * x2_x3 + x2x2py2y2 * (x3 - x1) + x3x3py3y3 * (x1-x2);</span><br><span class="line">D = x1x1py1y1 * (x3y2 - x2y3) + x2x2py2y2 * (x1*y3 - x3*y1) + x3x3py3y3 * (x2*y1-x1*y2);</span><br><span class="line"></span><br><span class="line">x=-B/(<span class="number">2</span>*A);</span><br><span class="line">y=-C/(<span class="number">2</span>*A);</span><br><span class="line">r=<span class="built_in">sqrt</span>((B*B+C*C<span class="number">-4</span>*A*D)/(<span class="number">4</span>*A*A));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 三点一线，不存在圆</span></span><br><span class="line"><span class="keyword">if</span>(!A) <span class="keyword">return</span> &#123;MAXN,MAXN&#125;;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> &#123;x,y&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【虚树DP】 CF613D Kingdom and its Cities</title>
      <link href="/2021/07/07/ACM/%E3%80%90%E8%99%9A%E6%A0%91DP%E3%80%91%20CF613D%20Kingdom%20and%20its%20Cities/"/>
      <url>/2021/07/07/ACM/%E3%80%90%E8%99%9A%E6%A0%91DP%E3%80%91%20CF613D%20Kingdom%20and%20its%20Cities/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF613D" target="_blank">题链</a></p><h1 id="树形dp"><a href="#树形dp" class="headerlink" title="树形dp"></a>树形dp</h1><p>令$f[u]$表示以$u$为根的子树需要的最小点数；<br>令$g[u]$表示以$u$为根的子树未被截断的点数；</p><p>对于一个点u，其孩子节点v；<br>&emsp;$f[u] = \sum_{}f[v]$;<br>&emsp;$g[u] = \sum_{}g[v]$;<br>若u是关键点：<br>&emsp;则需要截断子树中未被截断的点：<br>&emsp;&emsp;$f[u] += g[u]$;<br>&emsp;&emsp;$g[u] = 1$;<br>若u不是关键点：<br>&emsp;若子树中未被截断的点$&gt;1$，则点$u$需要放置：<br>&emsp;&emsp;$f[u] += 1$;<br>&emsp;&emsp;$g[u] = 0$;<br>&emsp;若子树中未被截断的点$&lt;=1$，不需要改动；  </p><h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><p>由于所给数据的范围对$k$是有限制的，所以对给出的关键点构造虚树，然后再$dp$；</p><p>代码$lca$部分采用树剖；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="comment">// 建树和树剖所用数组----------------- </span></span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> dep[MS],fa[MS],zson[MS],sz[MS];</span><br><span class="line"><span class="keyword">int</span> top[MS],val[MS],dfn[MS],tot;</span><br><span class="line"><span class="comment">// ----------------------------------- </span></span><br><span class="line"><span class="keyword">int</span> p[MS],mark[MS];</span><br><span class="line"><span class="keyword">int</span> sta[MS],stp;</span><br><span class="line"><span class="keyword">int</span> tmp[MS],cnt;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vx[MS];</span><br><span class="line"><span class="keyword">int</span> ff[MS],gg[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line">dep[u] = dep[f]+<span class="number">1</span>;</span><br><span class="line">fa[u] = f;</span><br><span class="line">zson[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> maxnzson = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != f)&#123;</span><br><span class="line"><span class="built_in">dfs1</span>(v,u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line"><span class="keyword">if</span>(sz[v] &gt; maxnzson)&#123;</span><br><span class="line">maxnzson = sz[v];</span><br><span class="line">zson[u] = v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> tp)</span></span>&#123;</span><br><span class="line">top[u] = tp;</span><br><span class="line">dfn[u] = ++tot;</span><br><span class="line">val[tot] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(zson[u]) <span class="built_in">dfs2</span>(zson[u],tp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != fa[u] &amp;&amp; v != zson[u])&#123;</span><br><span class="line"><span class="built_in">dfs2</span>(v,v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> __lca(<span class="keyword">int</span> u,<span class="keyword">int</span> v)&#123;</span><br><span class="line"><span class="keyword">while</span>(top[u] != top[v])&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[ top[u] ] &lt; dep[ top[v] ]) <span class="built_in">swap</span>(u,v);</span><br><span class="line">u = fa[top[u]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dep[u] &lt; dep[v]) <span class="keyword">return</span> u;</span><br><span class="line"><span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> t1,<span class="keyword">int</span> t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> dfn[t1] &lt; dfn[t2];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; <span class="comment">// 插入点x </span></span><br><span class="line"><span class="keyword">if</span>(x == <span class="number">1</span>) <span class="keyword">return</span>; <span class="comment">// 根节点 </span></span><br><span class="line"><span class="keyword">if</span>(stp == <span class="number">1</span>)&#123; <span class="comment">// 栈中元素只有一个 </span></span><br><span class="line">sta[++stp] = x;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> lca = __lca(x,sta[stp]);</span><br><span class="line"><span class="keyword">if</span>(lca == sta[stp])&#123; <span class="comment">// 栈顶元素是x的父亲 </span></span><br><span class="line">sta[++stp] = x;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 依次弹出栈中元素，使得dfn[栈顶] &lt;= dfn[x] &lt;= dfn[栈次顶]</span></span><br><span class="line"><span class="keyword">while</span>(stp&gt;<span class="number">1</span> &amp;&amp; dfn[lca] &lt;= dfn[sta[stp<span class="number">-1</span>]])&#123;</span><br><span class="line"><span class="keyword">int</span> u = sta[stp<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">int</span> v = sta[stp];</span><br><span class="line">tmp[++cnt] = v;</span><br><span class="line">vx[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vx[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">stp--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断栈顶是不是x的父亲 </span></span><br><span class="line"><span class="keyword">if</span>(lca != sta[stp])&#123;</span><br><span class="line"><span class="keyword">int</span> u = lca;</span><br><span class="line"><span class="keyword">int</span> v = sta[stp];</span><br><span class="line">tmp[++cnt] = v;</span><br><span class="line">vx[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vx[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">sta[stp] = lca;</span><br><span class="line">&#125;</span><br><span class="line">sta[++stp] = x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line">stp = <span class="number">1</span>;</span><br><span class="line">sta[stp] = <span class="number">1</span>; <span class="comment">// 构建虚树所用栈，此栈存储的数永远是树上同一条链 </span></span><br><span class="line">cnt = <span class="number">1</span>;</span><br><span class="line">tmp[cnt] = <span class="number">1</span>; <span class="comment">// tmp数组存储虚树所用节点，方便清理 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="built_in">insert</span>(p[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(stp&gt;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> u = sta[stp<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">int</span> v = sta[stp];</span><br><span class="line">tmp[++cnt] = v;</span><br><span class="line">vx[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vx[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">stp--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:vx[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v == f) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">cal</span>(v,u);</span><br><span class="line">ff[u] += ff[v];</span><br><span class="line">gg[u] += gg[v];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(mark[u])&#123;</span><br><span class="line">ff[u] += gg[u];</span><br><span class="line">gg[u] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(gg[u] &gt; <span class="number">1</span>)&#123;</span><br><span class="line">ff[u] += <span class="number">1</span>;</span><br><span class="line">gg[u] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clean</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)&#123;</span><br><span class="line">vx[tmp[i]].<span class="built_in">clear</span>();</span><br><span class="line">ff[tmp[i]] = gg[tmp[i]] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">mark[p[i]] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 树剖 </span></span><br><span class="line"><span class="built_in">dfs1</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">dfs2</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i];</span><br><span class="line">mark[p[i]] = <span class="number">1</span>; <span class="comment">// 标记关键点 </span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// -1的情况特判 </span></span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(mark[ fa[p[i]] ] &amp;&amp; fa[p[i]] != p[i])&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// 所给关键点按dfs序排序 </span></span><br><span class="line"><span class="built_in">sort</span>(p+<span class="number">1</span>,p+k+<span class="number">1</span>,cmp); </span><br><span class="line"><span class="comment">// 构建虚树 </span></span><br><span class="line"><span class="built_in">build</span>();</span><br><span class="line"><span class="comment">// 树形dp </span></span><br><span class="line"><span class="built_in">cal</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">cout &lt;&lt; ff[<span class="number">1</span>] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 清空所用数组 </span></span><br><span class="line"><span class="built_in">clean</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】两圆面积并</title>
      <link href="/2021/06/05/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E4%B8%A4%E5%9C%86%E9%9D%A2%E7%A7%AF%E5%B9%B6/"/>
      <url>/2021/06/05/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E4%B8%A4%E5%9C%86%E9%9D%A2%E7%A7%AF%E5%B9%B6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi acos(-1.0)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line">&#125; point;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">AREA</span><span class="params">(point a, <span class="keyword">double</span> r1, point b, <span class="keyword">double</span> r2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> d = <span class="built_in">sqrt</span>((a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y));</span><br><span class="line"><span class="keyword">if</span> (d &gt;= r1+r2)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (r1&gt;r2) &#123;</span><br><span class="line"><span class="keyword">double</span> tmp = r1;</span><br><span class="line">r1 = r2;</span><br><span class="line">r2 = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(r2 - r1 &gt;= d)</span><br><span class="line"><span class="keyword">return</span> pi*r1*r1;</span><br><span class="line"><span class="keyword">double</span> ang1=<span class="built_in">acos</span>((r1*r1+d*d-r2*r2)/(<span class="number">2</span>*r1*d));</span><br><span class="line"><span class="keyword">double</span> ang2=<span class="built_in">acos</span>((r2*r2+d*d-r1*r1)/(<span class="number">2</span>*r2*d));</span><br><span class="line"><span class="keyword">return</span> ang1*r1*r1 + ang2*r2*r2 - r1*d*<span class="built_in">sin</span>(ang1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">point a, b;</span><br><span class="line">a.x=<span class="number">2</span>, a.y=<span class="number">2</span>;</span><br><span class="line">b.x=<span class="number">7</span>, b.y=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">double</span> result = <span class="built_in">AREA</span>(a, <span class="number">3</span>, b, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>, result);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】两圆交点</title>
      <link href="/2021/06/05/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E4%B8%A4%E5%9C%86%E4%BA%A4%E7%82%B9/"/>
      <url>/2021/06/05/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E4%B8%A4%E5%9C%86%E4%BA%A4%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;Pair&gt; <span class="title">calc</span><span class="params">(<span class="keyword">double</span> x1 , <span class="keyword">double</span> y1 , <span class="keyword">double</span> r1 , <span class="keyword">double</span> x2 , <span class="keyword">double</span> y2 , <span class="keyword">double</span> r2)</span></span>&#123;</span><br><span class="line"> x1-=x2,y1-=y2;</span><br><span class="line"> <span class="keyword">double</span> S=x1*x1+y1*y1,a=(S+r2*r2-r1*r1)/<span class="number">2</span>,D=S*r2*r2-a*a;</span><br><span class="line"> <span class="keyword">if</span>(D&lt;<span class="number">0</span>) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line"> <span class="keyword">double</span> A1=a*x1,B1=y1*<span class="built_in">sqrt</span>(D);</span><br><span class="line"> <span class="keyword">double</span> A2=a*y1,B2=x1*<span class="built_in">sqrt</span>(D);</span><br><span class="line"> <span class="keyword">return</span> &#123;&#123;(A1+B1)/S+x2,(A2-B2)/S+y2&#125;,&#123;(A1-B1)/S+x2,(A2+B2)/S+y2&#125;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】极角排序模板</title>
      <link href="/2021/06/05/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E6%9E%81%E8%A7%92%E6%8E%92%E5%BA%8F%E6%A8%A1%E6%9D%BF/"/>
      <url>/2021/06/05/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E6%9E%81%E8%A7%92%E6%8E%92%E5%BA%8F%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span> &#123;</span> <span class="comment">//存储点</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cross</span><span class="params">(<span class="keyword">double</span> x1,<span class="keyword">double</span> y1,<span class="keyword">double</span> x2,<span class="keyword">double</span> y2)</span></span>&#123; <span class="comment">//计算叉积</span></span><br><span class="line"><span class="keyword">return</span> (x1*y2-x2*y1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">compare</span><span class="params">(point a,point b,point c)</span> </span>&#123; <span class="comment">//计算极角</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">cross</span>((b.x-a.x),(b.y-a.y),(c.x-a.x),(c.y-a.y));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="atan2"><a href="#atan2" class="headerlink" title="atan2"></a>atan2</h1><p>快，精度问题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(point a,point b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">atan2</span>(a.y,a.x)!=<span class="built_in">atan2</span>(b.y,b.x))</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">atan2</span>(a.y,a.x)&lt;<span class="built_in">atan2</span>(b.y,b.x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="利用叉积按极角从小到大排序"><a href="#利用叉积按极角从小到大排序" class="headerlink" title="利用叉积按极角从小到大排序"></a>利用叉积按极角从小到大排序</h1><p>较atan2慢，精度高</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(point a,point b)</span> </span>&#123;</span><br><span class="line">point c;<span class="comment">//原点</span></span><br><span class="line">c.x = <span class="number">0</span>;</span><br><span class="line">c.y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">compare</span>(c,a,b)==<span class="number">0</span>)<span class="comment">//计算叉积，函数在上面有介绍，如果叉积相等，按照X从小到大排序</span></span><br><span class="line"><span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">compare</span>(c,a,b)&gt;<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="先按象限从小到大排序-再按极角从小到大排序"><a href="#先按象限从小到大排序-再按极角从小到大排序" class="headerlink" title="先按象限从小到大排序 再按极角从小到大排序"></a>先按象限从小到大排序 再按极角从小到大排序</h1><p>特殊需求的时候才会用到;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp3</span><span class="params">(point a,point b)</span> </span>&#123; <span class="comment">//先按象限从小到大排序 再按极角从小到大排序</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">Quadrant</span>(a)==<span class="built_in">Quadrant</span>(b))<span class="comment">//返回值就是象限</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">cmp1</span>(a,b);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">Quadrant</span>(a)&lt;<span class="built_in">Quadrant</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="汇总"><a href="#汇总" class="headerlink" title="汇总"></a>汇总</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span> &#123;</span> <span class="comment">//存储点</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cross</span><span class="params">(<span class="keyword">double</span> x1,<span class="keyword">double</span> y1,<span class="keyword">double</span> x2,<span class="keyword">double</span> y2)</span> </span>&#123; <span class="comment">//计算叉积</span></span><br><span class="line"><span class="keyword">return</span> (x1*y2-x2*y1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">compare</span><span class="params">(point a,point b,point c)</span> </span>&#123; <span class="comment">//计算极角</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">cross</span>((b.x-a.x),(b.y-a.y),(c.x-a.x),(c.y-a.y));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(point a,point b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">atan2</span>(a.y,a.x)!=<span class="built_in">atan2</span>(b.y,b.x))</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">atan2</span>(a.y,a.x)&lt;<span class="built_in">atan2</span>(b.y,b.x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(point a,point b)</span> </span>&#123;</span><br><span class="line">point c;<span class="comment">//原点</span></span><br><span class="line">c.x = <span class="number">0</span>;</span><br><span class="line">c.y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">compare</span>(c,a,b)==<span class="number">0</span>)<span class="comment">//计算叉积，函数在上面有介绍，如果叉积相等，按照X从小到大排序</span></span><br><span class="line"><span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">compare</span>(c,a,b)&gt;<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Quadrant</span><span class="params">(point a)</span>　　 </span>&#123; <span class="comment">//象限排序，注意包含四个坐标轴</span></span><br><span class="line"><span class="keyword">if</span>(a.x&gt;<span class="number">0</span>&amp;&amp;a.y&gt;=<span class="number">0</span>)  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a.x&lt;=<span class="number">0</span>&amp;&amp;a.y&gt;<span class="number">0</span>)  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(a.x&lt;<span class="number">0</span>&amp;&amp;a.y&lt;=<span class="number">0</span>)  <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(a.x&gt;=<span class="number">0</span>&amp;&amp;a.y&lt;<span class="number">0</span>)  <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp3</span><span class="params">(point a,point b)</span> </span>&#123; <span class="comment">//先按象限从小到大排序 再按极角从小到大排序</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">Quadrant</span>(a)==<span class="built_in">Quadrant</span>(b))<span class="comment">//返回值就是象限</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">cmp1</span>(a,b);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">Quadrant</span>(a)&lt;<span class="built_in">Quadrant</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【数论】__int128模板 输入输出</title>
      <link href="/2021/06/05/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91__int128%E6%A8%A1%E6%9D%BF%20%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/"/>
      <url>/2021/06/05/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91__int128%E6%A8%A1%E6%9D%BF%20%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> __int128 <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">__int128 x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">f=<span class="number">-1</span>;</span><br><span class="line">ch=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">ch=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(__int128 x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">x=-x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">__int128 a = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">write</span>(a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】POJ.2069 最小球覆盖</title>
      <link href="/2021/06/05/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91POJ.2069%20%E6%9C%80%E5%B0%8F%E7%90%83%E8%A6%86%E7%9B%96/"/>
      <url>/2021/06/05/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91POJ.2069%20%E6%9C%80%E5%B0%8F%E7%90%83%E8%A6%86%E7%9B%96/</url>
      
        <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=2069" target="_blank">题链</a></p><h1 id="退火法"><a href="#退火法" class="headerlink" title="退火法"></a>退火法</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 50</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point3D</span> &#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y,z;</span><br><span class="line">&#125; data[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dis</span><span class="params">(point3D a,point3D b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)+(a.z-b.z)*(a.z-b.z));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> step=<span class="number">100</span>,ans=<span class="number">1e30</span>,mt;</span><br><span class="line">point3D z;</span><br><span class="line">z.x=z.y=z.z=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(step&gt;eps) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">dis</span>(z,data[s])&lt;<span class="built_in">dis</span>(z,data[i])) s=i;</span><br><span class="line">mt=<span class="built_in">dis</span>(z,data[s]);</span><br><span class="line">ans=<span class="built_in">min</span>(ans,mt);</span><br><span class="line">z.x+=(data[s].x-z.x)/mt*step;</span><br><span class="line">z.y+=(data[s].y-z.y)/mt*step;</span><br><span class="line">z.z+=(data[s].z-z.z)/mt*step;</span><br><span class="line">step*=<span class="number">0.98</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> ans;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n),n) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf&quot;</span>,&amp;data[i].x,&amp;data[i].y,&amp;data[i].z);</span><br><span class="line">ans=<span class="built_in">solve</span>();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.5f\n&quot;</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】AcWing 3028. 最小圆覆盖</title>
      <link href="/2021/06/05/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91AcWing%203028.%20%E6%9C%80%E5%B0%8F%E5%9C%86%E8%A6%86%E7%9B%96/"/>
      <url>/2021/06/05/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91AcWing%203028.%20%E6%9C%80%E5%B0%8F%E5%9C%86%E8%A6%86%E7%9B%96/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.acwing.com/problem/content/3031/" target="_blank">题链</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span><span class="comment">//O(n)，最小圆覆盖</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-12</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x, y;</span><br><span class="line">&#125; s[<span class="number">500005</span>];</span><br><span class="line">node o;<span class="comment">//圆心坐标</span></span><br><span class="line"><span class="keyword">double</span> ri;<span class="comment">//半径</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dis</span><span class="params">(node a, node b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getr</span><span class="params">(node p1, node p2, node p3)</span> </span>&#123;<span class="comment">//三个点求三角形圆心坐标和半径</span></span><br><span class="line">    <span class="keyword">double</span> a, b, c, d, e, f;</span><br><span class="line">    a = p2.y - p1.y;</span><br><span class="line">    b = p3.y - p1.y;</span><br><span class="line">    c = p2.x - p1.x;</span><br><span class="line">    d = p3.x - p1.x;</span><br><span class="line">    f = p3.x * p3.x + p3.y * p3.y - p1.x * p1.x - p1.y * p1.y;</span><br><span class="line">    e = p2.x * p2.x + p2.y * p2.y - p1.x * p1.x - p1.y * p1.y;</span><br><span class="line">    </span><br><span class="line">    o.x = (a * f - b * e) / (<span class="number">2</span> * a * d - <span class="number">2</span> * b * c);</span><br><span class="line">    o.y = (d * e - c * f) / (<span class="number">2</span> * a * d - <span class="number">2</span> * b * c);</span><br><span class="line">    ri = <span class="built_in">dis</span>(o, p1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>,&amp;s[i].x,&amp;s[i].y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">random_shuffle</span>(s + <span class="number">1</span>, s + n + <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    o = s[<span class="number">1</span>];</span><br><span class="line">    ri = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">dis</span>(s[i], o) &gt; ri + eps) &#123;</span><br><span class="line">            o = s[i];</span><br><span class="line">            ri = <span class="number">0</span>;<span class="comment">//第一个点为圆心</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">dis</span>(o, s[j]) &gt; ri + eps) &#123;</span><br><span class="line">                    o.x = (s[i].x + s[j].x) / <span class="number">2</span>;</span><br><span class="line">                    o.y = (s[i].y + s[j].y) / <span class="number">2</span>;</span><br><span class="line">                    ri = <span class="built_in">dis</span>(o, s[j]);<span class="comment">//第一个点和第二个点中点为圆心，距离为直径</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; j; k++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">dis</span>(o, s[k]) &gt; ri + eps) &#123;</span><br><span class="line">                            <span class="built_in">getr</span>(s[i], s[j], s[k]);<span class="comment">//三点定圆</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.10f\n&quot;</span>,ri);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.10f %.10f\n&quot;</span>,o.x,o.y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【最小生成树】洛谷 P2872 Building Roads S</title>
      <link href="/2021/06/04/ACM/%E3%80%90%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P2872%20Building%20Roads%20S/"/>
      <url>/2021/06/04/ACM/%E3%80%90%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P2872%20Building%20Roads%20S/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2872" target="_blank">题链</a></p><p>先求出每两个点的距离，再根据已有的边，将其赋值为$0$，然后跑一遍最小生成树；</p><h1 id="Kruskal"><a href="#Kruskal" class="headerlink" title="$Kruskal$"></a>$Kruskal$</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2e6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">&#125;p[MS];</span><br><span class="line"><span class="keyword">double</span> dis[MS][MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">double</span> w;</span><br><span class="line">&#125;e[MS*MS];</span><br><span class="line"><span class="keyword">int</span> fa[MS];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(nod t1,nod t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> t1.w &lt; t2.w; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x*x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">qdis</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>( <span class="built_in">sqr</span>(t1.x-t2.x) + <span class="built_in">sqr</span>(t1.y-t2.y) );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x == fa[x]) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">fa[<span class="built_in">find</span>(y)] = <span class="built_in">find</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">p[i] = &#123;x,y&#125;;</span><br><span class="line">fa[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">dis[i][j] = <span class="built_in">qdis</span>(p[i],p[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line"><span class="keyword">if</span>(u &gt; v) <span class="built_in">swap</span>(u,v);</span><br><span class="line">dis[u][v] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">e[++tot] = &#123;i,j,dis[i][j]&#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(e+<span class="number">1</span>,e+tot+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">int</span> cc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot &amp;&amp; cc &lt; n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">nod t = e[i];</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">find</span>(t.u) != <span class="built_in">find</span>(t.v))&#123;</span><br><span class="line">ans += t.w;</span><br><span class="line"><span class="built_in">merge</span>(t.u,t.v);</span><br><span class="line">cc++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,ans);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Prim"><a href="#Prim" class="headerlink" title="$Prim$"></a>$Prim$</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">&#125;a[MS];</span><br><span class="line"><span class="keyword">double</span> p[MS][MS];</span><br><span class="line"><span class="keyword">int</span> v[MS];</span><br><span class="line"><span class="keyword">double</span> dis[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> poi;</span><br><span class="line"><span class="keyword">double</span> val;</span><br><span class="line">&#125;;</span><br><span class="line">priority_queue&lt;nod &gt; Q;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (nod t1,nod t2)&#123;</span><br><span class="line"><span class="keyword">return</span> t1.val &gt; t2.val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x*x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">qdis</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>( <span class="built_in">sqr</span>(t1.x-t2.x) + <span class="built_in">sqr</span>(t1.y-t2.y) );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">dis[i] = MAXN;</span><br><span class="line">&#125;</span><br><span class="line">dis[x] = <span class="number">0</span>;</span><br><span class="line">Q.<span class="built_in">push</span>(&#123;x,<span class="number">0</span>&#125;);</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">nod t = Q.<span class="built_in">top</span>();</span><br><span class="line">Q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span>(v[t.poi]) <span class="keyword">continue</span>;</span><br><span class="line">v[t.poi] = <span class="number">1</span>;</span><br><span class="line">ans += t.val;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[i] &gt; p[t.poi][i])&#123;</span><br><span class="line">dis[i] = p[t.poi][i];</span><br><span class="line"><span class="keyword">if</span>(!v[i])&#123;</span><br><span class="line">Q.<span class="built_in">push</span>(&#123;i,p[t.poi][i]&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">a[i] = &#123;x,y&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">p[j][i] = p[i][j] = <span class="built_in">qdis</span>(a[i],a[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">p[v][u] = p[u][v] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="built_in">bfs</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,ans);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最小生成树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【重链剖分】洛谷 P3258 松鼠的新家</title>
      <link href="/2021/06/04/ACM/%E3%80%90%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P3258%20%E6%9D%BE%E9%BC%A0%E7%9A%84%E6%96%B0%E5%AE%B6/"/>
      <url>/2021/06/04/ACM/%E3%80%90%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P3258%20%E6%9D%BE%E9%BC%A0%E7%9A%84%E6%96%B0%E5%AE%B6/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3605" target="_blank">题链</a></p><p>树剖板题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2e6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 300009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS];</span><br><span class="line">vector&lt;LL &gt; vc[MS];</span><br><span class="line">LL fa[MS],sz[MS],dep[MS],zson[MS];</span><br><span class="line">LL tot,top[MS],dfn[MS],w[MS];</span><br><span class="line">LL p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL la[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(LL x,LL f)</span></span>&#123;</span><br><span class="line">sz[x] = <span class="number">1</span>;</span><br><span class="line">dep[x] = dep[f]+<span class="number">1</span>;</span><br><span class="line">fa[x] = f;</span><br><span class="line"><span class="keyword">int</span> maxzson = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i:vc[x])&#123;</span><br><span class="line"><span class="keyword">if</span>(i != f)&#123;</span><br><span class="line"><span class="built_in">dfs1</span>(i,x);</span><br><span class="line">sz[x] += sz[i];</span><br><span class="line"><span class="keyword">if</span>(sz[i] &gt; maxzson)&#123;</span><br><span class="line">maxzson = sz[i];</span><br><span class="line">zson[x] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(LL x,LL tp)</span></span>&#123;</span><br><span class="line">dfn[x] = ++tot;</span><br><span class="line">top[x] = tp;</span><br><span class="line">w[x] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(zson[x]) <span class="built_in">dfs2</span>(zson[x],tp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i:vc[x])&#123;</span><br><span class="line"><span class="keyword">if</span>(i != fa[x] &amp;&amp; i != zson[x])&#123;</span><br><span class="line"><span class="built_in">dfs2</span>(i,i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(la[rt])&#123;</span><br><span class="line">p[ls] += la[rt];</span><br><span class="line">p[rs] += la[rt];</span><br><span class="line">la[ls] += la[rt];</span><br><span class="line">la[rs] += la[rt];</span><br><span class="line">la[rt] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt] += val;</span><br><span class="line">la[rt] += val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> p[rt];</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="keyword">return</span> <span class="built_in">query</span>(pos,l,m,ls);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(pos,m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">op</span><span class="params">(LL x,LL y)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(top[x] != top[y])&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[ top[x] ] &lt; dep[ top[y] ]) <span class="built_in">swap</span>(x,y);</span><br><span class="line"><span class="built_in">update</span>(dfn[top[x]],dfn[x],<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">x = fa[top[x]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dep[x] &gt; dep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line"><span class="built_in">update</span>(dfn[x],dfn[y],<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs1</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">dfs2</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL u = a[i<span class="number">-1</span>];</span><br><span class="line">LL v = a[i];</span><br><span class="line"><span class="built_in">op</span>(u,v);</span><br><span class="line"><span class="built_in">update</span>(dfn[v],dfn[v],<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL ans = <span class="built_in">query</span>(dfn[i],<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> 树剖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【重链剖分】洛谷 P2590 树的统计</title>
      <link href="/2021/06/04/ACM/%E3%80%90%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P2590%20%E6%A0%91%E7%9A%84%E7%BB%9F%E8%AE%A1/"/>
      <url>/2021/06/04/ACM/%E3%80%90%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P2590%20%E6%A0%91%E7%9A%84%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2590" target="_blank">题链</a></p><p>树链剖分模板题，注意$a_i$数据范围就好</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2e6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 30009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS];</span><br><span class="line">vector&lt;LL &gt; vc[MS];</span><br><span class="line">LL sz[MS];</span><br><span class="line">LL fa[MS];</span><br><span class="line">LL dep[MS];</span><br><span class="line">LL zson[MS];</span><br><span class="line">LL tot;</span><br><span class="line">LL dfn[MS];</span><br><span class="line">LL top[MS];</span><br><span class="line">LL w[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL maxn,val;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(LL x,LL f)</span></span>&#123;</span><br><span class="line">sz[x] = <span class="number">1</span>;</span><br><span class="line">fa[x] = f;</span><br><span class="line">dep[x] = dep[f]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> maxzson = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i:vc[x])&#123;</span><br><span class="line"><span class="keyword">if</span>(i != f)&#123;</span><br><span class="line"><span class="built_in">dfs1</span>(i,x);</span><br><span class="line">sz[x] += sz[i];</span><br><span class="line"><span class="keyword">if</span>(sz[i] &gt;= maxzson)&#123;</span><br><span class="line">maxzson = sz[i];</span><br><span class="line">zson[x] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(LL x,LL tp)</span></span>&#123;</span><br><span class="line">dfn[x] = ++tot;</span><br><span class="line">top[x] = tp;</span><br><span class="line">w[tot] = a[x];</span><br><span class="line"><span class="keyword">if</span>(zson[x]) <span class="built_in">dfs2</span>(zson[x],tp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i:vc[x])&#123;</span><br><span class="line"><span class="keyword">if</span>(i != zson[x] &amp;&amp; i != fa[x])&#123;</span><br><span class="line"><span class="built_in">dfs2</span>(i,i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].val = p[ls].val + p[rs].val;</span><br><span class="line">p[rt].maxn = <span class="built_in">max</span>(p[ls].maxn,p[rs].maxn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt] = &#123;w[l],w[l]&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt] = &#123;val,val&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">update</span>(pos,l,m,ls,val);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(pos,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &lt; L) <span class="keyword">return</span> <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(m &gt;= R) <span class="keyword">return</span> <span class="built_in">query</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">node t1 = <span class="built_in">query</span>(L,R,l,m,ls);</span><br><span class="line">node t2 = <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line">node ans;</span><br><span class="line">ans.val = t1.val + t2.val;</span><br><span class="line">ans.maxn = <span class="built_in">max</span>(t1.maxn,t2.maxn);</span><br><span class="line"><span class="keyword">return</span> ans; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">op23</span><span class="params">(LL x,LL y)</span></span>&#123;</span><br><span class="line">node ans = &#123;-(LL)MAXN,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">while</span>(top[x] != top[y])&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[ top[x] ] &lt; dep[ top[y] ]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">node cc = <span class="built_in">query</span>(dfn[top[x]],dfn[x],<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">ans.val += cc.val;</span><br><span class="line">ans.maxn = <span class="built_in">max</span>(ans.maxn,cc.maxn); </span><br><span class="line">x = fa[top[x]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dep[x] &gt; dep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">node cc = <span class="built_in">query</span>(dfn[x],dfn[y],<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">ans.val += cc.val;</span><br><span class="line">ans.maxn = <span class="built_in">max</span>(ans.maxn,cc.maxn);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(LL pos,LL val)</span></span>&#123;</span><br><span class="line"><span class="built_in">update</span>(dfn[pos],<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs1</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">dfs2</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10</span>];</span><br><span class="line">LL x,y;</span><br><span class="line">cin &gt;&gt; s &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">&#x27;Q&#x27;</span>)&#123;</span><br><span class="line">node ans = <span class="built_in">op23</span>(x,y);</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">1</span>] == <span class="string">&#x27;M&#x27;</span>) cout &lt;&lt; ans.maxn &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[<span class="number">1</span>] == <span class="string">&#x27;S&#x27;</span>) cout &lt;&lt; ans.val &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">&#x27;C&#x27;</span>)&#123;</span><br><span class="line"><span class="built_in">change</span>(x,y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> 树剖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组】洛谷 P3605 Promotion Counting P</title>
      <link href="/2021/06/03/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91%E6%B4%9B%E8%B0%B7%20P3605%20Promotion%20Counting%20P/"/>
      <url>/2021/06/03/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91%E6%B4%9B%E8%B0%B7%20P3605%20Promotion%20Counting%20P/</url>
      
        <content type="html"><![CDATA[<h1 id="—–"><a href="#—–" class="headerlink" title="—–"></a>—–</h1><p><a href="https://www.luogu.com.cn/problem/P3605" target="_blank">题链</a></p><h1 id="–解法一"><a href="#–解法一" class="headerlink" title="–解法一"></a>–解法一</h1><p>跑一边$dfs$序，按照权值大小对$n$个点从大到小排好遍历，对于第$i$个点只要求它子树的和就行；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL val,id;</span><br><span class="line">&#125;a[MS];</span><br><span class="line">LL b[MS],tb;</span><br><span class="line">LL dfn[MS];</span><br><span class="line">LL sz[MS];</span><br><span class="line">vector&lt;LL &gt; vc[MS];</span><br><span class="line">LL p[MS];</span><br><span class="line">queue&lt;LL &gt; Q;</span><br><span class="line">LL ac[MS];</span><br><span class="line">LL tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> t1.val &gt; t2.val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">lowbit</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(LL pos,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=n;pos+=<span class="built_in">lowbit</span>(pos)) p[pos] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(LL pos)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos)) ans += p[pos];</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line">dfn[x] = ++tot;</span><br><span class="line">sz[x] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i:vc[x])&#123;</span><br><span class="line"><span class="built_in">dfs</span>(i);</span><br><span class="line">sz[x] += sz[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i].val;</span><br><span class="line">a[i].id = i;</span><br><span class="line">b[i] = a[i].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line">tb = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(b[i] != b[i<span class="number">-1</span>]) b[++tb] = b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">a[i].val = <span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+tb+<span class="number">1</span>,a[i].val) - b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">vc[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">node t = a[i];</span><br><span class="line">LL tl = dfn[t.id];</span><br><span class="line">LL tr = tl+sz[t.id]<span class="number">-1</span>;</span><br><span class="line">LL ans = <span class="built_in">query</span>(tr) - <span class="built_in">query</span>(tl);</span><br><span class="line">ac[t.id] = ans;</span><br><span class="line"><span class="built_in">add</span>(dfn[t.id],<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="–解法二"><a href="#–解法二" class="headerlink" title="–解法二"></a>–解法二</h1><p>离散化+树状数组，$dfs$求解；</p><p>$dfs$时，每碰到一个点就将它的权值记录在树状数组中，此时会有一个问题，有两颗子树互不影响，记两颗子树的头节点为$t1,t2$，$dfs$时会先遍历第一颗子树，此时到第二颗时，显然第二颗也就是$t2$的答案应该与之前维护的权值无关，此时可以两眼一闭查一下树状数组中比$t2$大的个数，然后把$t2$的子节点全部遍历完后再查一次比$t2$大的个数，两次的差值就是$t2$的答案；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS];</span><br><span class="line">LL b[MS],tb;</span><br><span class="line">vector&lt;LL &gt; vc[MS];</span><br><span class="line">LL p[MS];</span><br><span class="line">LL ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">lowbit</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(LL pos,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=n;pos+=<span class="built_in">lowbit</span>(pos)) p[pos] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(LL pos)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos)) ans += p[pos];</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line">ac[x] = -(<span class="built_in">query</span>(n) - <span class="built_in">query</span>(a[x]));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i:vc[x])&#123;</span><br><span class="line"><span class="built_in">dfs</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">ac[x] += <span class="built_in">query</span>(n) - <span class="built_in">query</span>(a[x]);</span><br><span class="line"><span class="built_in">add</span>(a[x],<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">b[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line">tb = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(b[i] != b[i<span class="number">-1</span>]) b[++tb] = b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">a[i] = <span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+tb+<span class="number">1</span>,a[i]) - b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">vc[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树 优先队列】洛谷 P2048 超级钢琴</title>
      <link href="/2021/06/03/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E3%80%91%E6%B4%9B%E8%B0%B7%20P2048%20%E8%B6%85%E7%BA%A7%E9%92%A2%E7%90%B4/"/>
      <url>/2021/06/03/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E3%80%91%E6%B4%9B%E8%B0%B7%20P2048%20%E8%B6%85%E7%BA%A7%E9%92%A2%E7%90%B4/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2048" target="_blank">题链</a></p><p>求其前缀和，对于每一个$i$，可选值的范围是$[i+L-1,i+R-1]$，假设选了$pos$，那么得到的贡献就是$a[pos]-a[i-1]$，也就是说需要选择前$m$大的值相加；</p><p>如果对于一个$i$，我在它可选值范围内选了$pos$，得到贡献后，对于$i$的下一个最大值可能在$[i-L+1,pos-1]$内，或者$[pos+1,i+R-1]$内；</p><p>用优先队列维护元组{$i$,$i$的可选值范围,该范围内最大值的位置$pos$}，按$a[pos] - a[i-1]$的值从大到小；</p><p>考虑用线段树维护区间最大值和最大值所在位置；</p><p>一开始就将每一个$i$的元组存入优先队列，于是每次都从堆顶拿一个元组处理并加上贡献即可；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2e6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL cl,cr;</span><br><span class="line">LL a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL pos,val;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line">LL o,l,r,pos,val;</span><br><span class="line">&#125;;</span><br><span class="line">priority_queue&lt;nod &gt; Q;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (nod t1,nod t2)&#123;</span><br><span class="line"><span class="keyword">return</span> t1.val-a[t1.o<span class="number">-1</span>] &lt; t2.val-a[t2.o<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].val = <span class="built_in">max</span>(p[ls].val,p[rs].val);</span><br><span class="line"><span class="keyword">if</span>(p[ls].val &gt;= p[rs].val)</span><br><span class="line">p[rt].pos = p[ls].pos;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">p[rt].pos = p[rs].pos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt] = &#123;l,a[l]&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &lt; L) <span class="keyword">return</span> <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(m &gt;= R) <span class="keyword">return</span> <span class="built_in">query</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">node ans;</span><br><span class="line">node t1 = <span class="built_in">query</span>(L,R,l,m,ls);</span><br><span class="line">node t2 = <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line">ans.val = <span class="built_in">max</span>(t1.val,t2.val);</span><br><span class="line"><span class="keyword">if</span>(t1.val &gt;= t2.val) </span><br><span class="line">ans.pos = t1.pos;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">ans.pos = t2.pos;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; cl &gt;&gt; cr;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">a[i] += a[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+cl<span class="number">-1</span>&lt;=n;i++)&#123;</span><br><span class="line">LL tl = i+cl<span class="number">-1</span>;</span><br><span class="line">LL tr = <span class="built_in">min</span>(i+cr<span class="number">-1</span>,n);</span><br><span class="line">node t = <span class="built_in">query</span>(tl,tr,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">Q.<span class="built_in">push</span>(&#123;i,tl,tr,t.pos,t.val&#125;);</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">nod cc = Q.<span class="built_in">top</span>();</span><br><span class="line">Q.<span class="built_in">pop</span>();</span><br><span class="line">ans += cc.val - a[cc.o<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(cc.l &lt;= cc.pos<span class="number">-1</span>)&#123;</span><br><span class="line">node ql = <span class="built_in">query</span>(cc.l,cc.pos<span class="number">-1</span>,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">Q.<span class="built_in">push</span>(&#123;cc.o,cc.l,cc.pos<span class="number">-1</span>,ql.pos,ql.val&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cc.pos+<span class="number">1</span> &lt;= cc.r)&#123;</span><br><span class="line">node qr = <span class="built_in">query</span>(cc.pos+<span class="number">1</span>,cc.r,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">Q.<span class="built_in">push</span>(&#123;cc.o,cc.pos+<span class="number">1</span>,cc.r,qr.pos,qr.val&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优先队列 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组 线段树】洛谷 P3586 LOG</title>
      <link href="/2021/06/02/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%20%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3586%20LOG/"/>
      <url>/2021/06/02/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%20%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3586%20LOG/</url>
      
        <content type="html"><![CDATA[<h1 id="—–"><a href="#—–" class="headerlink" title="—–"></a>—–</h1><p><a href="https://www.luogu.com.cn/problem/P3586" target="_blank">题链</a></p><p>题意：判断序列能否选择$c$个数字同时$-1$并执行$s$次，操作单点修改；</p><p>对于序列中$&gt;=s$的数字，相当于那些数字就等于$s$，毕竟执行$s$次也不会把这些数字删成$0$；</p><p>结论就是把那些超过$s$的数字看作$s$，如果序列的总和$&gt;=c*s$的话，就是可行的，否则不可行；</p><p>把每个数想象成不同颜色的楼房，比如 $7$ $9$ $3$ $2$ 表示四栋楼房高度，询问能否每次选择$3$个数字$-1$并执行$5$次，就是选择$3$栋楼房砍去最上层；</p><p>$7$ $9$ $3$ $2$ 转化为 $5$ $5$ $3$ $2$，因为每次都得选择$3$个不同颜色的楼房，不妨把颜色 $3$，$4$ 的楼房叠在一起，那么序列就变成 $5$ $5$ $5$，每次砍去最上层且最上层颜色都不同；</p><p>也就是说把后一栋楼房的高度叠到前一栋楼房上，最高高度是$s$，这样能保证每次选择都是$c$个不同颜色楼房；</p><p>所以序列总和$&gt;=c*s$则可行；</p><h1 id="–动态开点权值线段树"><a href="#–动态开点权值线段树" class="headerlink" title="–动态开点权值线段树"></a>–动态开点权值线段树</h1><p>吸氧才过的最后一个点…</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">LL cnt,val;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"><span class="keyword">int</span> root;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> &amp;rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!p[rt].l &amp;&amp; !p[rt].r)&#123;</span><br><span class="line">rt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!p[rt].l)&#123;</span><br><span class="line">p[rt].cnt = p[p[rt].r].cnt;</span><br><span class="line">p[rt].val = p[p[rt].r].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!p[rt].r)&#123;</span><br><span class="line">p[rt].cnt = p[p[rt].l].cnt;</span><br><span class="line">p[rt].val = p[p[rt].l].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">p[rt].cnt = p[p[rt].l].cnt + p[p[rt].r].cnt;</span><br><span class="line">p[rt].val = p[p[rt].l].val + p[p[rt].r].val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> &amp;rt,<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL val,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt) rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line"><span class="keyword">if</span>(t)&#123;</span><br><span class="line">p[rt].cnt++;</span><br><span class="line">p[rt].val += val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">p[rt].cnt--;</span><br><span class="line">p[rt].val -= val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p[rt].cnt == <span class="number">0</span>)&#123;</span><br><span class="line">rt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">update</span>(p[rt].l,pos,l,m,val,t);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(p[rt].r,pos,m+<span class="number">1</span>,r,val,t);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">get_cnt</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt) <span class="keyword">return</span> &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &lt; L) <span class="keyword">return</span> <span class="built_in">get_cnt</span>(p[rt].r,L,R,m+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(m &gt;= R) <span class="keyword">return</span> <span class="built_in">get_cnt</span>(p[rt].l,L,R,l,m);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">node ans;</span><br><span class="line">node t1 = <span class="built_in">get_cnt</span>(p[rt].l,L,R,l,m);</span><br><span class="line">node t2 = <span class="built_in">get_cnt</span>(p[rt].r,L,R,m+<span class="number">1</span>,r);</span><br><span class="line">ans.cnt = t1.cnt + t2.cnt;</span><br><span class="line">ans.val = t1.val + t2.val;</span><br><span class="line">ans.l = p[rt].l;</span><br><span class="line">ans.r = p[rt].r;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//LL ans = 0;</span></span><br><span class="line"><span class="comment">//if(m &gt;= L) ans += get_cnt(p[rt].l,L,R,l,m);</span></span><br><span class="line"><span class="comment">//if(m &lt;  R) ans += get_cnt(p[rt].r,L,R,m+1,r);</span></span><br><span class="line"><span class="comment">//return ans;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line">LL pos,val,c,s;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="string">&#x27;U&#x27;</span>)&#123;</span><br><span class="line">cin &gt;&gt; pos &gt;&gt; val;</span><br><span class="line"><span class="keyword">if</span>(a[pos] != <span class="number">-1</span>)</span><br><span class="line"><span class="built_in">update</span>(root,a[pos],<span class="number">0</span>,MAXN,a[pos],<span class="number">0</span>);</span><br><span class="line">a[pos] = val;</span><br><span class="line"><span class="built_in">update</span>(root,a[pos],<span class="number">0</span>,MAXN,a[pos],<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">cin &gt;&gt; c &gt;&gt; s;</span><br><span class="line">LL sum = p[root].val;</span><br><span class="line">node tt = <span class="built_in">get_cnt</span>(root,s,MAXN,<span class="number">0</span>,MAXN);</span><br><span class="line">sum -= tt.val;</span><br><span class="line">sum += tt.cnt*s;</span><br><span class="line"><span class="keyword">if</span>(sum &gt;= c*s)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;TAK\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;NIE\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="–树状数组"><a href="#–树状数组" class="headerlink" title="–树状数组"></a>–树状数组</h1><p>把操作离线，数据离散化处理</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS],ta;</span><br><span class="line">LL v[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line">LL x,y;</span><br><span class="line">&#125;b[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line">LL cnt,val;</span><br><span class="line">&#125;p[MS];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">lowbit</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(LL pos,LL val,LL t)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=m;pos+=<span class="built_in">lowbit</span>(pos))&#123;</span><br><span class="line"><span class="keyword">if</span>(t)&#123;</span><br><span class="line">p[pos].cnt++;</span><br><span class="line">p[pos].val += val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">p[pos].cnt--;</span><br><span class="line">p[pos].val -= val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">nod <span class="title">query</span><span class="params">(LL pos)</span></span>&#123;</span><br><span class="line">nod ans = &#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos))&#123;</span><br><span class="line">ans.cnt += p[pos].cnt;</span><br><span class="line">ans.val += p[pos].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line">LL x,y;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; x &gt;&gt; y;</span><br><span class="line">b[i] = &#123;op,x,y&#125;;</span><br><span class="line">a[i] = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+m+<span class="number">1</span>);</span><br><span class="line">ta = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] != a[i<span class="number">-1</span>]) a[++ta] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) v[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">node t = b[i];</span><br><span class="line"><span class="keyword">if</span>(t.op == <span class="string">&#x27;U&#x27;</span>)&#123;</span><br><span class="line">LL pos;</span><br><span class="line"><span class="keyword">if</span>(v[b[i].x] != <span class="number">-1</span>)&#123;</span><br><span class="line">pos = <span class="built_in">lower_bound</span>(a+<span class="number">1</span>,a+ta+<span class="number">1</span>,v[b[i].x]) - a;</span><br><span class="line"><span class="built_in">add</span>(pos,v[b[i].x],<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">v[b[i].x] = b[i].y;</span><br><span class="line">pos = <span class="built_in">lower_bound</span>(a+<span class="number">1</span>,a+ta+<span class="number">1</span>,v[b[i].x]) - a;</span><br><span class="line"><span class="built_in">add</span>(pos,v[b[i].x],<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">nod sum = <span class="built_in">query</span>(m);</span><br><span class="line">LL pos = <span class="built_in">lower_bound</span>(a+<span class="number">1</span>,a+ta+<span class="number">1</span>,b[i].y) - a;</span><br><span class="line">nod tt = <span class="built_in">query</span>(pos<span class="number">-1</span>);</span><br><span class="line">LL cc = tt.val + (sum.cnt-tt.cnt)*b[i].y;</span><br><span class="line"><span class="keyword">if</span>(cc &gt;= b[i].x*b[i].y)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;TAK\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;NIE\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组】洛谷 P4113 采花</title>
      <link href="/2021/06/02/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91%E6%B4%9B%E8%B0%B7%20P4113%20%E9%87%87%E8%8A%B1/"/>
      <url>/2021/06/02/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91%E6%B4%9B%E8%B0%B7%20P4113%20%E9%87%87%E8%8A%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="—–"><a href="#—–" class="headerlink" title="—–"></a>—–</h1><p><a href="https://www.luogu.com.cn/problem/P4113" target="_blank">题链</a></p><p>可将询问按$L$从小到大排序，每次将序列中花朵第二次出现的位置置为$1$，用树状数组维护；</p><h1 id="–树状数组"><a href="#–树状数组" class="headerlink" title="–树状数组"></a>–树状数组</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2e6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 2000009</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL a[MS];</span><br><span class="line">LL fr[MS]; <span class="comment">// 记录第一次出现的位置 </span></span><br><span class="line">LL aft[MS]; <span class="comment">// 记录后一个相同值出现的位置 </span></span><br><span class="line">LL v[MS];</span><br><span class="line">LL p[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line">&#125;ask[MS];</span><br><span class="line">LL ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> t1.l &lt; t2.l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">lowbit</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> pos,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=n;pos+=<span class="built_in">lowbit</span>(pos)) p[pos] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos)) ans += p[pos];</span><br><span class="line"><span class="keyword">return</span> ans; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">if</span>(!fr[a[i]]) fr[a[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">v[i] = n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">aft[i] = v[a[i]];</span><br><span class="line">v[a[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line">aft[n+<span class="number">1</span>] = n+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(fr[i])&#123;</span><br><span class="line"><span class="built_in">add</span>(aft[fr[i]],<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">ask[i] = &#123;l,r,i&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(ask+<span class="number">1</span>,ask+k+<span class="number">1</span>,cmp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,L=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(L &lt; ask[i].l)&#123;</span><br><span class="line"><span class="built_in">add</span>(aft[L],<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">add</span>(aft[aft[L]],<span class="number">1</span>);</span><br><span class="line">L++;</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="built_in">query</span>(ask[i].r);</span><br><span class="line">ac[ask[i].id] = ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="动态开点线段树"><a href="#动态开点线段树" class="headerlink" title="动态开点线段树"></a>动态开点线段树</h1><p>额…复习一下；吸氧过</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2e6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 2000009</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL a[MS];</span><br><span class="line">LL fr[MS];</span><br><span class="line">LL aft[MS];</span><br><span class="line">LL v[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line">&#125;ask[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">LL val;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"><span class="keyword">int</span> root;</span><br><span class="line">LL ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> t1.l &lt; t2.l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> &amp;rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!p[rt].l &amp;&amp; !p[rt].r)&#123;</span><br><span class="line">rt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!p[rt].l)&#123;</span><br><span class="line">p[rt].val = p[p[rt].r].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!p[rt].r)&#123;</span><br><span class="line">p[rt].val = p[p[rt].l].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">p[rt].val = p[p[rt].l].val + p[p[rt].r].val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> &amp;rt,<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt) rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].val = val;</span><br><span class="line"><span class="keyword">if</span>(!p[rt].val) rt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">update</span>(p[rt].l,pos,l,m,val);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(p[rt].r,pos,m+<span class="number">1</span>,r,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">query</span>(p[rt].l,L,R,l,m);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">query</span>(p[rt].r,L,R,m+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">v[i] = n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!fr[a[i]]) fr[a[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">aft[i] = v[a[i]];</span><br><span class="line">v[a[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line">aft[n+<span class="number">1</span>] = n+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(fr[i] &amp;&amp; aft[fr[i]] != n+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">update</span>(root,aft[fr[i]],<span class="number">1</span>,MAXN,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">ask[i] = &#123;l,r,i&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(ask+<span class="number">1</span>,ask+k+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,L=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(L &lt; ask[i].l)&#123;</span><br><span class="line"><span class="keyword">if</span>(aft[L] != n+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">update</span>(root,aft[L],<span class="number">1</span>,MAXN,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(aft[aft[L]] != n+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">update</span>(root,aft[aft[L]],<span class="number">1</span>,MAXN,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">L++;</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="built_in">query</span>(root,ask[i].l,ask[i].r,<span class="number">1</span>,MAXN);</span><br><span class="line">ac[ask[i].id] = ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【模拟退火】洛谷 P1337 平衡点 吊打XXX</title>
      <link href="/2021/06/01/ACM/%E3%80%90%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB%E3%80%91%E6%B4%9B%E8%B0%B7%20P1337%20%E5%B9%B3%E8%A1%A1%E7%82%B9%20%E5%90%8A%E6%89%93XXX/"/>
      <url>/2021/06/01/ACM/%E3%80%90%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB%E3%80%91%E6%B4%9B%E8%B0%B7%20P1337%20%E5%B9%B3%E8%A1%A1%E7%82%B9%20%E5%90%8A%E6%89%93XXX/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1337" target="_blank">题链</a></p><p>随即确定一个点，将其他点对该点产生的力正交分解，试能越小越稳定；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y,w;</span><br><span class="line">&#125;p[MS];</span><br><span class="line">node ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cal</span><span class="params">(node t)</span></span>&#123;<span class="comment">// 计算试能</span></span><br><span class="line"><span class="keyword">double</span> cc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">double</span> dx = p[i].x - t.x;</span><br><span class="line"><span class="keyword">double</span> dy = p[i].y - t.y;</span><br><span class="line">cc += <span class="built_in">sqrt</span>(dx*dx+dy*dy)*p[i].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">simulate</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">double</span> T=<span class="number">3000</span>,r=<span class="number">0.9</span>;T&gt;<span class="number">1e-15</span>;T*=r)&#123;</span><br><span class="line">node o;</span><br><span class="line">o.x = ans.x + T*(<span class="built_in">rand</span>()*<span class="number">2</span>-RAND_MAX);</span><br><span class="line">o.y = ans.y + T*(<span class="built_in">rand</span>()*<span class="number">2</span>-RAND_MAX);</span><br><span class="line">o.w = <span class="built_in">cal</span>(o);</span><br><span class="line"><span class="keyword">double</span> cha = o.w - ans.w;</span><br><span class="line"><span class="keyword">if</span>(cha &lt; <span class="number">0</span>)&#123;</span><br><span class="line">ans = o;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">exp</span>(-cha/T)*RAND_MAX&gt;<span class="built_in">rand</span>())&#123;</span><br><span class="line">ans.x = o.x;</span><br><span class="line">ans.y = o.y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="built_in">srand</span>(<span class="built_in"><span class="keyword">unsigned</span></span>(<span class="built_in">time</span>(<span class="number">0</span>)));</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">double</span> x,y,w;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; w;</span><br><span class="line">p[i] = &#123;x,y,w&#125;;</span><br><span class="line">ans.x += x;</span><br><span class="line">ans.y += y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ans.x /= n;</span><br><span class="line">ans.y /= n;</span><br><span class="line">ans.w = <span class="built_in">cal</span>(ans);</span><br><span class="line">LL cnt = <span class="number">300</span>;</span><br><span class="line"><span class="keyword">while</span>(cnt--) <span class="built_in">simulate</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.3f %.3f\n&quot;</span>,ans.x,ans.y);</span><br><span class="line"><span class="comment">//cout &lt;&lt; ans.x &lt;&lt; &quot; &quot; &lt;&lt; ans.y &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟退火 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护最大子段和】洛谷 P3582 KIN</title>
      <link href="/2021/05/30/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%91%E6%B4%9B%E8%B0%B7%20P3582%20KIN/"/>
      <url>/2021/05/30/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%91%E6%B4%9B%E8%B0%B7%20P3582%20KIN/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3582" target="_blank">题链</a></p><p>线段树维护区间最大字段和；</p><p><a href="https://ctz45562.github.io/2019/03/04/%E9%A2%98%E8%A7%A3-%E6%B4%9B%E8%B0%B7-P3582-%E3%80%90-POI2015-KIN%E3%80%91/" target="_blank">讲的非常好</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS];</span><br><span class="line">LL w[MS];</span><br><span class="line">LL pre[MS];</span><br><span class="line">LL v[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL lmax,rmax;</span><br><span class="line">LL maxn;</span><br><span class="line">LL sum;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].sum = p[ls].sum + p[rs].sum;</span><br><span class="line">p[rt].lmax = <span class="built_in">max</span>(p[ls].lmax ,p[ls].sum + p[rs].lmax);</span><br><span class="line">p[rt].rmax = <span class="built_in">max</span>(p[rs].rmax ,p[rs].sum + p[ls].rmax);</span><br><span class="line">p[rt].maxn = <span class="built_in">max</span>(p[rt].lmax ,p[rt].rmax);</span><br><span class="line">p[rt].maxn = <span class="built_in">max</span>(p[rt].maxn ,p[ls].rmax + p[rs].lmax);</span><br><span class="line">p[rt].maxn = <span class="built_in">max</span>(p[rt].maxn ,<span class="built_in">max</span>(p[ls].maxn ,p[rs].maxn));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt] = &#123;val,val,val,val&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">update</span>(pos,l,m,ls,val);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(pos,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">pre[i] = v[a[i]];</span><br><span class="line">v[a[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line">pre[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cin &gt;&gt; w[i];</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">update</span>(i,<span class="number">1</span>,n,<span class="number">1</span>,w[a[i]]);</span><br><span class="line"><span class="keyword">if</span>(pre[i] != <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">update</span>(pre[i],<span class="number">1</span>,n,<span class="number">1</span>,-w[a[i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(pre[pre[i]] != <span class="number">0</span> &amp;&amp; pre[pre[i]] != <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">update</span>(pre[pre[i]],<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">ans = <span class="built_in">max</span>(ans,p[<span class="number">1</span>].maxn);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护最大子段和】ACwing 245. 你能回答这些问题吗</title>
      <link href="/2021/05/30/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%91ACwing%20245.%20%E4%BD%A0%E8%83%BD%E5%9B%9E%E7%AD%94%E8%BF%99%E4%BA%9B%E9%97%AE%E9%A2%98%E5%90%97/"/>
      <url>/2021/05/30/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%91ACwing%20245.%20%E4%BD%A0%E8%83%BD%E5%9B%9E%E7%AD%94%E8%BF%99%E4%BA%9B%E9%97%AE%E9%A2%98%E5%90%97/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.acwing.com/problem/content/246/" target="_blank">题链</a></p><p>线段树维护节点从左边最大，从右边最大，最大子段和，总和，区间最大值；</p><p>如果区间最大值小于 $0$，输出区间最大值；</p><p>否则输出最大子段和；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL lmax,rmax;</span><br><span class="line">LL maxn;</span><br><span class="line">LL sum;</span><br><span class="line">LL maxval;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].sum = p[ls].sum + p[rs].sum;</span><br><span class="line">p[rt].maxval = <span class="built_in">max</span>(p[ls].maxval,p[rs].maxval);</span><br><span class="line">p[rt].lmax = <span class="built_in">max</span>(p[ls].lmax ,p[ls].sum + p[rs].lmax);</span><br><span class="line">p[rt].rmax = <span class="built_in">max</span>(p[rs].rmax ,p[rs].sum + p[ls].rmax);</span><br><span class="line">p[rt].maxn = <span class="built_in">max</span>(p[rt].lmax,p[rt].rmax);</span><br><span class="line">p[rt].maxn = <span class="built_in">max</span>(p[rt].maxn,<span class="built_in">max</span>(p[ls].maxn,p[rs].maxn));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">LL x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">p[rt] = &#123;<span class="built_in">max</span>(<span class="number">0ll</span>,x),<span class="built_in">max</span>(<span class="number">0ll</span>,x),<span class="built_in">max</span>(<span class="number">0ll</span>,x),x,x&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt] = &#123;<span class="built_in">max</span>(<span class="number">0ll</span>,val),<span class="built_in">max</span>(<span class="number">0ll</span>,val),<span class="built_in">max</span>(<span class="number">0ll</span>,val),val,val&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">update</span>(pos,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  pos) <span class="built_in">update</span>(pos,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &lt; L) <span class="keyword">return</span> <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(m &gt;= R) <span class="keyword">return</span> <span class="built_in">query</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">node tl = <span class="built_in">query</span>(L,R,l,m,ls);</span><br><span class="line">node tr = <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line">node ans;</span><br><span class="line">ans.sum = tl.sum + tr.sum;</span><br><span class="line">ans.maxval = <span class="built_in">max</span>(tl.maxval,tr.maxval);</span><br><span class="line">ans.lmax = <span class="built_in">max</span>(tl.lmax ,tl.sum + tr.lmax);</span><br><span class="line">ans.rmax = <span class="built_in">max</span>(tr.rmax ,tr.sum + tl.rmax);</span><br><span class="line">ans.maxn = <span class="built_in">max</span>(ans.lmax,ans.rmax);</span><br><span class="line">ans.maxn = <span class="built_in">max</span>(ans.maxn ,<span class="built_in">max</span>(tl.maxn ,tr.maxn));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> op,l,r,pos,val;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">if</span>(l &gt; r) <span class="built_in">swap</span>(l,r);</span><br><span class="line">node ans = <span class="built_in">query</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(ans.maxval &lt; <span class="number">0</span>)&#123;</span><br><span class="line">cout &lt;&lt; ans.maxval &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; ans.maxn &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">cin &gt;&gt; pos &gt;&gt; val;</span><br><span class="line"><span class="built_in">update</span>(pos,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】洛谷 P3964 松鼠聚会</title>
      <link href="/2021/05/27/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E6%B4%9B%E8%B0%B7%20P3964%20%E6%9D%BE%E9%BC%A0%E8%81%9A%E4%BC%9A/"/>
      <url>/2021/05/27/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E6%B4%9B%E8%B0%B7%20P3964%20%E6%9D%BE%E9%BC%A0%E8%81%9A%E4%BC%9A/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3964" target="_blank">题链</a></p><p>题意：给定$n$个点，从中选择一个点$poi$，使得其他点到$x$的切比雪夫距离之和最小；</p><p>学习有关二维坐标系上有关<a href="https://www.cnblogs.com/Tecode/p/14818577.html" target="_blank">曼哈顿距离与切比雪夫距离相互转化</a>后；</p><p>可将题给求切比雪夫距离转化成求曼哈顿距离，相当于改变题意；</p><p>也就是说题意可变成 “ 给定$n$个点，从中选择一个点$x$，使得其他点到$poi$的曼哈顿距离之和最小 ”；</p><p>可通过枚举每一个点作为$poi$，求其他点到x的曼哈顿距离之和；</p><p>由于曼哈顿距离的性质，可将x方向上的坐标和y方向上的坐标分离，分别求其他点与$poi$的$x$方向上的贡献，$y$方向上的贡献，然后相加记录最小值；</p><p>计算贡献时可用前缀和维护减小复杂度；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL px[MS],py[MS]; </span><br><span class="line">LL gx[MS],gy[MS];</span><br><span class="line">LL qzx[MS],qzy[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL x,y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">px[i] = gx[i] = x+y;</span><br><span class="line">py[i] = gy[i] = x-y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(gx+<span class="number">1</span>,gx+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">qzx[i] = qzx[i<span class="number">-1</span>] + gx[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(gy+<span class="number">1</span>,gy+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">qzy[i] = qzy[i<span class="number">-1</span>] + gy[i];</span><br><span class="line">&#125;</span><br><span class="line">LL ans = MAXN;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="comment">// 当前点在排序后的数组位置 </span></span><br><span class="line">LL xpos = <span class="built_in">lower_bound</span>(gx+<span class="number">1</span>,gx+n+<span class="number">1</span>,px[i]) - gx;</span><br><span class="line">LL ypos = <span class="built_in">lower_bound</span>(gy+<span class="number">1</span>,gy+n+<span class="number">1</span>,py[i]) - gy;</span><br><span class="line"><span class="comment">// 比当前点小的x值贡献 + 比当前点大的x值贡献 </span></span><br><span class="line">LL xval = px[i]*xpos-qzx[xpos] + qzx[n]-qzx[xpos]-(n-xpos)*px[i];</span><br><span class="line">LL yval = py[i]*ypos-qzy[ypos] + qzy[n]-qzy[ypos]-(n-ypos)*py[i];</span><br><span class="line">ans = <span class="built_in">min</span>(ans,xval+yval);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans/<span class="number">2</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】欧几里得距离、曼哈顿距离、切比雪夫距离</title>
      <link href="/2021/05/27/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E8%B7%9D%E7%A6%BB%E3%80%81%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB%E3%80%81%E5%88%87%E6%AF%94%E9%9B%AA%E5%A4%AB%E8%B7%9D%E7%A6%BB/"/>
      <url>/2021/05/27/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E8%B7%9D%E7%A6%BB%E3%80%81%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB%E3%80%81%E5%88%87%E6%AF%94%E9%9B%AA%E5%A4%AB%E8%B7%9D%E7%A6%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="–概述"><a href="#–概述" class="headerlink" title="–概述"></a>–概述</h1><p><img src="https://img2020.cnblogs.com/blog/2062718/202105/2062718-20210527164212430-1129404647.png"></p><h1 id="–关于转化"><a href="#–关于转化" class="headerlink" title="–关于转化"></a>–关于转化</h1><p><a href="https://www.cnblogs.com/zwfymqz/p/8253530.html" target="_blank">曼哈顿距离、切比雪夫距离相互转化</a></p><h1 id="–例题"><a href="#–例题" class="headerlink" title="–例题"></a>–例题</h1><p><a href="https://www.luogu.com.cn/problem/P3964" target="_blank">洛谷P3964 [TJOI2013]松鼠聚会</a></p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【DP】The 15-th Beihang University Collegiate Programming Contest (BCPC 2020) - Final I - Poison AND^OR Affection</title>
      <link href="/2021/05/27/ACM/%E3%80%90DP%E3%80%91The%2015-th%20Beihang%20University%20Collegiate%20Programming%20Contest%20(BCPC%202020)%20-%20Final%20I%20-%20Poison%20AND%5EOR%20Affection/"/>
      <url>/2021/05/27/ACM/%E3%80%90DP%E3%80%91The%2015-th%20Beihang%20University%20Collegiate%20Programming%20Contest%20(BCPC%202020)%20-%20Final%20I%20-%20Poison%20AND%5EOR%20Affection/</url>
      
        <content type="html"><![CDATA[<p><a href="http://codeforces.com/gym/102889/problem/I" target="_blank">题链</a></p><p><img src="https://img2020.cnblogs.com/blog/2062718/202105/2062718-20210527113144801-1421840002.png"></p><p>做法1 写T了；</p><p>这是做法2；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 2009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> pos;</span><br><span class="line">LL val;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node &gt; vc[MS];</span><br><span class="line">LL dp[MS][MS]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL t = <span class="number">-1</span> ,t1 = a[i] ,t2 = a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line">t1 &amp;= a[j];</span><br><span class="line">t2 |= a[j];</span><br><span class="line">LL cc = t1^t2;</span><br><span class="line"><span class="keyword">if</span>(cc != t)&#123;</span><br><span class="line">t = cc;</span><br><span class="line">vc[i].<span class="built_in">push_back</span>(&#123;j,cc&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">vc[i].<span class="built_in">push_back</span>(&#123;<span class="number">1</span>,<span class="number">-1</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-- 初始化第 1 层信息 </span></span><br><span class="line">LL t1 = a[<span class="number">1</span>], t2 = a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">t1 &amp;= a[i];</span><br><span class="line">t2 |= a[i];</span><br><span class="line">LL cc = t1^t2;</span><br><span class="line">dp[<span class="number">1</span>][i] = cc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//--  计算每一层 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123; <span class="comment">//-- (j&lt;=i)时 dp[i][j] 都设为 0 </span></span><br><span class="line">dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>]; <span class="comment">//-- 将第 j 个元素作为单个一组 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;vc[j].<span class="built_in">size</span>()<span class="number">-1</span>;k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vc[j][k].pos &lt;= i<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">dp[i][j] = <span class="built_in">max</span>(dp[i][j] ,dp[i<span class="number">-1</span>][vc[j][k].pos<span class="number">-1</span>] + vc[j][k].val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; dp[m][n] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组】第十八届同济大学程序设计竞赛暨高校网络友谊赛 E、不平衡的字符串</title>
      <link href="/2021/05/25/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91%E7%AC%AC%E5%8D%81%E5%85%AB%E5%B1%8A%E5%90%8C%E6%B5%8E%E5%A4%A7%E5%AD%A6%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AB%9E%E8%B5%9B%E6%9A%A8%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E5%8F%8B%E8%B0%8A%E8%B5%9B%20E%E3%80%81%E4%B8%8D%E5%B9%B3%E8%A1%A1%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2021/05/25/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91%E7%AC%AC%E5%8D%81%E5%85%AB%E5%B1%8A%E5%90%8C%E6%B5%8E%E5%A4%A7%E5%AD%A6%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AB%9E%E8%B5%9B%E6%9A%A8%E9%AB%98%E6%A0%A1%E7%BD%91%E7%BB%9C%E5%8F%8B%E8%B0%8A%E8%B5%9B%20E%E3%80%81%E4%B8%8D%E5%B9%B3%E8%A1%A1%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="–-原题解"><a href="#–-原题解" class="headerlink" title="– 原题解"></a>– 原题解</h1><p><a href="https://ac.nowcoder.com/acm/contest/16832/E" target="_blank">题链</a></p><p><img src="https://img2020.cnblogs.com/blog/2062718/202105/2062718-20210525151834582-1646019613.png"></p><h1 id="–-对于化简后的式子的理解"><a href="#–-对于化简后的式子的理解" class="headerlink" title="– 对于化简后的式子的理解"></a>– 对于化简后的式子的理解</h1><p>$p[i]$ 是下标 $i$ 之前有多少个与当前询问字母相同的字母；</p><p>将 $a<em>i-b</em>p[i]$ 记为式子① ，将 $c<em>i-d</em>p[i]$ 记为式子②；</p><p>为这两个式子构建两颗权值树状数组一二；</p><p>对于每一个新加入的 $p[i]$，用式子②计算权值$val2$插入到第二颗树状数组中，先查找第二颗树状数组中查找 $&lt;= val2$ 的值有多少，即为满足条件②的以 $i$ 为结尾的子段个数；</p><p>对于每一个新加入的 $p[i]$，用式子①计算权值$val1$插入到第一颗树状数组中，再查找第一颗树状数组中查找 $&lt;= val1$ 的值有多少，即为不满足条件①的以 $i$ 为结尾的子段个数；</p><p>因为满足条件②的一定包含（满足或不满足）条件①的个数，所以两者相减就是 满足①②的 以 $i$ 为结尾的字段数量；</p><h1 id="–代码"><a href="#–代码" class="headerlink" title="–代码"></a>–代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 50009</span></span><br><span class="line"> </span><br><span class="line">LL n,m;</span><br><span class="line"><span class="keyword">char</span> s[MS]; </span><br><span class="line">LL qz[MS];</span><br><span class="line">LL ab[MS];</span><br><span class="line">LL cd[MS];</span><br><span class="line">LL tp[MS],tot;</span><br><span class="line">LL p[<span class="number">3</span>][MS];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">lowbit</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(LL rt,LL pos,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=n;pos+=<span class="built_in">lowbit</span>(pos))&#123;</span><br><span class="line">p[rt][pos] += val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(LL rt,LL pos)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos))&#123;</span><br><span class="line">ans += p[rt][pos];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">cin &gt;&gt; s+<span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">char</span> vs;</span><br><span class="line">LL a,b,c,d;</span><br><span class="line">cin &gt;&gt; vs &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">qz[i] = qz[i<span class="number">-1</span>] + (s[i] == vs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-- a*i - b*qz[i] 离散化 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">ab[i] = a*i - b*qz[i];</span><br><span class="line">tp[i] = ab[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(tp,tp+n+<span class="number">1</span>);</span><br><span class="line">tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(tp[i] != tp[i<span class="number">-1</span>]) tp[++tot] = tp[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">ab[i] = <span class="built_in">lower_bound</span>(tp,tp+tot+<span class="number">1</span>,ab[i]) - tp + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-- c*i - d*qz[i] 离散化</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cd[i] = c*i - d*qz[i];</span><br><span class="line">tp[i] = cd[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(tp,tp+n+<span class="number">1</span>);</span><br><span class="line">tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(tp[i] != tp[i<span class="number">-1</span>]) tp[++tot] = tp[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cd[i] = <span class="built_in">lower_bound</span>(tp,tp+tot+<span class="number">1</span>,cd[i]) - tp + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//--</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++) p[<span class="number">1</span>][i] = p[<span class="number">2</span>][i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">add</span>(<span class="number">1</span>,ab[i],<span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(<span class="number">2</span>,cd[i],<span class="number">1</span>);</span><br><span class="line">LL t2 = <span class="built_in">query</span>(<span class="number">2</span>,cd[i]);</span><br><span class="line">LL t1 = <span class="built_in">query</span>(<span class="number">1</span>,ab[i]);</span><br><span class="line">ans += t2-t1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树 DP】Codeforces Round 721 (Div. 2) E. Partition Game</title>
      <link href="/2021/05/24/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20DP%E3%80%91Codeforces%20Round%20721%20(Div.%202)%20E.%20Partition%20Game/"/>
      <url>/2021/05/24/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20DP%E3%80%91Codeforces%20Round%20721%20(Div.%202)%20E.%20Partition%20Game/</url>
      
        <content type="html"><![CDATA[<h1 id="—题意"><a href="#—题意" class="headerlink" title="—题意"></a>—题意</h1><p><a href="https://codeforces.ml/contest/1527/problem/E" target="_blank">题链</a></p><p>题意：定义一个数字 <strong>$num$</strong> 在一个数组中的贡献为 <strong>最后一次出现的下标</strong> 减去 <strong>第一次出现的下标</strong>；</p><p>定义一个数组的价值 <strong>$cost$</strong> 为该数组中出现过的数字 <strong>$num$</strong> 的价值总和；</p><p>如数组 $[2,2,3,2,3]$，**$cost$** $= (4-1)+(5-3) = 5$；</p><p>给定 <strong>$n$</strong> ,<strong>$mv</strong>,以及长度为 <strong>$n$</strong> 的数组 **$a[]$**；</p><p>求将 <strong>$a[]$</strong> 分成 <strong>$m$</strong> 段数组产生的最小 <strong>$cost$</strong> 总和；</p><h1 id="—瞎想"><a href="#—瞎想" class="headerlink" title="—瞎想"></a>—瞎想</h1><p>$dp[i][j]$ 表示将前 $j$ 个数字分为 $i$ 段产生的最小 $cost$；</p><p>$c[i][j]$ 表示数组下标 $[i,j]$ 划分为一段的贡献；</p><p>那么 $dp[i][j] = min( dp[i-1][k] + c[k+1][j] )$ 其中 $k$ 小于 $j$，按照这样暴力来一遍，哦吼~,T飞!；</p><p>既然 $dp$ 方程写出来了，考虑如何优化；</p><h1 id="—优化"><a href="#—优化" class="headerlink" title="—优化"></a>—优化</h1><p>对于上面所举的例子 $[2,2,3,2,3]$，也可以等于 $cost = (2-1)+(4-2)+(5-3)$；</p><p>也就是将某个数字的 <strong>$num$</strong> 细分，数字 $2$ 就是 ( 这次出现位置 $-$ 上次出现位置 ) 的总和；</p><p>$dp[i]$ 都是由 $dp[i-1]$ 而来的，也就是外层 $for$ 层数 $i$ ；</p><p>内层 $for$ 新加入的数字 $a[j]$，也就是移动 $j$ 指针，考虑 $dp$ 式子右侧中 $dp[i-1][k] + c[k+1][j]，(k &lt; j)$；</p><p>每移动一次 $j$ 指针，记 $a[j]$ 上一次出现的位置为 $pos$，如果将 $[pos,j]$ 作为新的一段，那么 $dp[i-1][ 0 ~ pos-1 ]$ 的值都需要加上 $j-pos$；</p><p>此时的 $k$ 在 $[0,j-1]$ 范围内，需要查找 $[0,j-1]$ 范围内的最小值；</p><p>所以用线段树维护区间最小值来优化$dp$，每次移动 $j$ 指针复杂度为$logn$，全局 $O(nmlogn)$；</p><h1 id="—代码"><a href="#—代码" class="headerlink" title="—代码"></a>—代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="comment">// notice</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 35009</span></span><br><span class="line"> </span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS]; <span class="comment">// 原数组 </span></span><br><span class="line">LL tpos[MS];</span><br><span class="line">LL pre[MS]; <span class="comment">// 记录位置 i 的上一次出现相同数字的位置 </span></span><br><span class="line">LL p[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 用于线段树 </span></span><br><span class="line">LL la[MS&lt;&lt;<span class="number">2</span>]; </span><br><span class="line">LL dp[<span class="number">109</span>][MS];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 线段树这五个函数为模板，不需要为题设做任何改变 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = la[rt] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = <span class="built_in">min</span>(p[ls],p[rs]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(la[rt])&#123;</span><br><span class="line">p[ls] += la[rt];</span><br><span class="line">p[rs] += la[rt];</span><br><span class="line">la[ls] += la[rt];</span><br><span class="line">la[rs] += la[rt];</span><br><span class="line">la[rt] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt] += val;</span><br><span class="line">la[rt] += val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">LL ans = MAXN;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">min</span>(ans,<span class="built_in">query</span>(L,R,l,m,ls));</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">min</span>(ans,<span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123; <span class="comment">// 求上一次出现的 pos </span></span><br><span class="line">pre[i] = tpos[a[i]];</span><br><span class="line">tpos[a[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">0</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123; <span class="comment">// 预先将上一层 dp 信息存入线段树 </span></span><br><span class="line"><span class="built_in">update</span>(j,j,<span class="number">0</span>,n,<span class="number">1</span>,dp[i<span class="number">-1</span>][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(pre[j]) <span class="built_in">update</span>(<span class="number">0</span>,pre[j]<span class="number">-1</span>,<span class="number">0</span>,n,<span class="number">1</span>,j-pre[j]);</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">1</span>) dp[i][j] = <span class="built_in">query</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,n,<span class="number">1</span>); <span class="comment">// 分为 1 段的时候需要初始化 </span></span><br><span class="line"><span class="keyword">else</span> dp[i][j] = <span class="built_in">query</span>(<span class="number">0</span>,j<span class="number">-1</span>,<span class="number">0</span>,n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;==== &quot; &lt;&lt; i &lt;&lt; &quot; ====\n&quot;;</span></span><br><span class="line"><span class="comment">//for(int j=1;j&lt;=n;j++)&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; dp[i][j] &lt;&lt; &quot; &quot;;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; dp[m][n] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【主席树】洛谷 P3919 【模板】可持久化线段树 1（可持久化数组）</title>
      <link href="/2021/05/18/ACM/%E3%80%90%E4%B8%BB%E5%B8%AD%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3919%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E7%BA%BF%E6%AE%B5%E6%A0%91%201%EF%BC%88%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E7%BB%84%EF%BC%89/"/>
      <url>/2021/05/18/ACM/%E3%80%90%E4%B8%BB%E5%B8%AD%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3919%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E7%BA%BF%E6%AE%B5%E6%A0%91%201%EF%BC%88%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E7%BB%84%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3919" target="_blank">题链</a></p><p>原来这才是可持久化的基础之基础</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;ext/rope&gt; </span></span><br><span class="line"><span class="comment">//using namespace __gnu_cxx; </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,val;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> rtpos[MS];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].val = a[l];</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[rt].l = <span class="built_in">build</span>(l,m);</span><br><span class="line">p[rt].r = <span class="built_in">build</span>(m+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> lart,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line">p[rt] = p[lart];</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].val = val;</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) p[rt].l = <span class="built_in">update</span>(pos,l,m,p[lart].l,val);</span><br><span class="line"><span class="keyword">else</span> p[rt].r = <span class="built_in">update</span>(pos,m+<span class="number">1</span>,r,p[lart].r,val);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> p[rt].val;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="keyword">return</span> <span class="built_in">query</span>(pos,l,m,p[rt].l);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(pos,m+<span class="number">1</span>,r,p[rt].r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line">rtpos[<span class="number">0</span>] = <span class="built_in">build</span>(<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> vis,op,pos,val;</span><br><span class="line">    cin &gt;&gt; vis &gt;&gt; op &gt;&gt; pos;</span><br><span class="line">    <span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">    cin &gt;&gt; val;</span><br><span class="line">    rtpos[i] = <span class="built_in">update</span>(pos,<span class="number">1</span>,n,rtpos[vis],val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">rtpos[i] = rtpos[vis];</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(pos,<span class="number">1</span>,n,rtpos[i]) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主席树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【重链剖分】The 15-th Beihang University Collegiate Programming Contest (BCPC 2020) - Final H、宝可梦与分支进化</title>
      <link href="/2021/05/18/ACM/%E3%80%90%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86%E3%80%91The%2015-th%20Beihang%20University%20Collegiate%20Programming%20Contest%20(BCPC%202020)%20-%20Final%20H%E3%80%81%E5%AE%9D%E5%8F%AF%E6%A2%A6%E4%B8%8E%E5%88%86%E6%94%AF%E8%BF%9B%E5%8C%96/"/>
      <url>/2021/05/18/ACM/%E3%80%90%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86%E3%80%91The%2015-th%20Beihang%20University%20Collegiate%20Programming%20Contest%20(BCPC%202020)%20-%20Final%20H%E3%80%81%E5%AE%9D%E5%8F%AF%E6%A2%A6%E4%B8%8E%E5%88%86%E6%94%AF%E8%BF%9B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p><a href="https://vjudge.net/problem/Gym-102889H" target="_blank">题链</a></p><p>$dp[x]$ 表示以 $x$ 为进化终点能取得的最大进化次数；</p><p>可以发现 $dp[x]$ 等于 树上$x$的前缀最大值 $+1$;</p><p>但是不可能递归寻找$x$的父亲直到根节点，因为会超时；</p><p>所以采用重链剖分+线段树维护前缀最大值，复杂度$O(nlogn*logn)$；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> fa[MS];</span><br><span class="line"><span class="keyword">int</span> sz[MS];</span><br><span class="line"><span class="keyword">int</span> dep[MS];</span><br><span class="line"><span class="keyword">int</span> zson[MS];</span><br><span class="line"><span class="keyword">int</span> tim;</span><br><span class="line"><span class="keyword">int</span> top[MS];</span><br><span class="line"><span class="keyword">int</span> dfn[MS];</span><br><span class="line"><span class="keyword">int</span> val[MS];</span><br><span class="line"><span class="keyword">int</span> p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">fa[u] = f;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line">dep[u] = dep[f]+<span class="number">1</span>;</span><br><span class="line">zson[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> maxn_zson = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v == f) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dfs1</span>(v,u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line"><span class="keyword">if</span>(sz[v] &gt; maxn_zson)&#123;</span><br><span class="line">zson[u] = v;</span><br><span class="line">maxn_zson = sz[v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> tp)</span></span>&#123;</span><br><span class="line">dfn[u] = ++tim;</span><br><span class="line">top[u] = tp;</span><br><span class="line">val[tim] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(zson[u]) <span class="built_in">dfs2</span>(zson[u],tp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v == fa[u] || v == zson[u]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dfs2</span>(v,v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt] = val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">update</span>(pos,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  pos) <span class="built_in">update</span>(pos,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line">p[rt] = <span class="built_in">max</span>(p[ls],p[rs]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">max</span>(ans,<span class="built_in">query</span>(L,R,l,m,ls));</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">max</span>(ans,<span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_max</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x == fa[x]) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 如果是根节点则无前缀，返回 0 </span></span><br><span class="line">x = fa[x]; <span class="comment">// 从x的父亲为起点，向上跳 </span></span><br><span class="line"><span class="keyword">int</span> ans = <span class="built_in">query</span>(dfn[x],dfn[x],<span class="number">1</span>,n,<span class="number">1</span>); <span class="comment">// 初值为父亲的值 </span></span><br><span class="line"><span class="keyword">while</span>(x != fa[x])&#123; <span class="comment">// 一直跳到根节点 </span></span><br><span class="line">ans = <span class="built_in">max</span>(ans, <span class="built_in">query</span>(dfn[top[x]],dfn[x],<span class="number">1</span>,n,<span class="number">1</span>) );</span><br><span class="line">x = fa[top[x]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">vc[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs1</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">dfs2</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">int</span> cc = <span class="built_in">get_max</span>(x)+<span class="number">1</span>; <span class="comment">// 求 x 的前缀最大值（不含 x ） </span></span><br><span class="line"><span class="built_in">update</span>(dfn[x],<span class="number">1</span>,n,<span class="number">1</span>,cc);</span><br><span class="line">ans = <span class="built_in">max</span>(ans,cc);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> 树剖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【重链剖分】洛谷 P3379 【模板】最近公共祖先（LCA）</title>
      <link href="/2021/05/18/ACM/%E3%80%90%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P3379%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%EF%BC%88LCA%EF%BC%89/"/>
      <url>/2021/05/18/ACM/%E3%80%90%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P3379%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%EF%BC%88LCA%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3379" target="_blank">题链</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,rt;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS]; </span><br><span class="line"><span class="keyword">int</span> fa[MS];</span><br><span class="line"><span class="keyword">int</span> sz[MS];</span><br><span class="line"><span class="keyword">int</span> zson[MS];</span><br><span class="line"><span class="keyword">int</span> dep[MS];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tim;</span><br><span class="line"><span class="keyword">int</span> top[MS];</span><br><span class="line"><span class="keyword">int</span> dfn[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123; <span class="comment">// dfs1 =&gt; fa[] ,sz[] ,zson[] ,dep[]</span></span><br><span class="line">fa[u] = f;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line">dep[u] = dep[f]+<span class="number">1</span>;</span><br><span class="line">zson[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> maxn_zson = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v == f) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dfs1</span>(v,u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line"><span class="keyword">if</span>(sz[v] &gt; maxn_zson)&#123;</span><br><span class="line">zson[u] = v;</span><br><span class="line">maxn_zson = sz[v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> tp)</span></span>&#123; <span class="comment">// dfs2 =&gt; tim ,top[] ,dfn[]</span></span><br><span class="line">dfn[u] = ++tim;</span><br><span class="line">top[u] = tp;</span><br><span class="line"><span class="keyword">if</span>(zson[u]) <span class="built_in">dfs2</span>(zson[u],tp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != fa[u] &amp;&amp; v != zson[u])&#123;</span><br><span class="line"><span class="built_in">dfs2</span>(v,v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(top[u] != top[v])&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[ top[u] ] &lt; dep[ top[v] ]) <span class="built_in">swap</span>(u,v); <span class="comment">// ***选择 *链头深度大 的向上跳 </span></span><br><span class="line">u = fa[top[u]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dep[u] &lt; dep[v]) <span class="keyword">return</span> u; <span class="comment">// 深度小的为 LCA </span></span><br><span class="line"><span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; rt;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs1</span>(rt,rt);</span><br><span class="line"><span class="built_in">dfs2</span>(rt,rt);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">cout &lt;&lt; <span class="built_in">cal</span>(u,v) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> 树剖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【重链剖分】洛谷 P3384 【模板】轻重链剖分</title>
      <link href="/2021/05/18/ACM/%E3%80%90%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P3384%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E8%BD%BB%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86/"/>
      <url>/2021/05/18/ACM/%E3%80%90%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P3384%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E8%BD%BB%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3384" target="_blank">题链</a></p><p>学习自<a href="https://www.bilibili.com/video/BV1Qt411u77f" target="_blank">大型同性交友网站</a>，这个$B$<br>站$up$主讲的非常好！</p><p>终于学会了第一个维护树上问题的方法，我好兴奋啊！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="comment">//#define mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"></span><br><span class="line">LL mod;</span><br><span class="line"><span class="keyword">int</span> n,m,rt,k;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line">LL w[MS]; <span class="comment">// w[i] = 点 i 权值 </span></span><br><span class="line"><span class="keyword">int</span> fa[MS];<span class="comment">// fa[i] = 点 i 父亲 </span></span><br><span class="line"><span class="keyword">int</span> sz[MS]; <span class="comment">// sz[i] = 包含点 i 的子树大小 </span></span><br><span class="line"><span class="keyword">int</span> zson[MS]; <span class="comment">// zson[i] = 点 i 的重子节点 </span></span><br><span class="line"><span class="keyword">int</span> dep[MS];  <span class="comment">// dep[i] = 点 i 的深度 </span></span><br><span class="line"><span class="keyword">int</span> tim; <span class="comment">// dfs序时间戳 </span></span><br><span class="line"><span class="keyword">int</span> top[MS]; <span class="comment">// top[i] = 点 i 的链头 </span></span><br><span class="line"><span class="keyword">int</span> dfn[MS]; <span class="comment">// dfn[i] = 点 i 的时间戳 </span></span><br><span class="line">LL val[MS]; <span class="comment">// val[i] = 时间戳为 i 对应点的权值 </span></span><br><span class="line">LL p[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 用于线段树维护区间总和 </span></span><br><span class="line">LL la[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123; <span class="comment">// 第一遍 dfs =&gt; fa[] ,sz[] ,zson[] ,dep[] </span></span><br><span class="line">fa[u] = f;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line">dep[u] = dep[f] + <span class="number">1</span>;</span><br><span class="line">zson[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> maxn_zson = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v == f) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dfs1</span>(v,u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line"><span class="keyword">if</span>(sz[v] &gt; maxn_zson)&#123;</span><br><span class="line">zson[u] = v;</span><br><span class="line">maxn_zson = sz[v];</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> tp)</span></span>&#123; <span class="comment">//第二遍 dfs =&gt; top[] ,dfn[] ,val[] </span></span><br><span class="line">dfn[u] = ++tim;</span><br><span class="line">top[u] = tp;</span><br><span class="line">val[tim] = w[u];</span><br><span class="line"><span class="keyword">if</span>(zson[u]) <span class="built_in">dfs2</span>(zson[u],tp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v != fa[u] &amp;&amp; v != zson[u])&#123;</span><br><span class="line"><span class="built_in">dfs2</span>(v,v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = p[ls] + p[rs];</span><br><span class="line">p[rt] %= mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(la[rt])&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[ls] += (m-l+<span class="number">1</span>)*la[rt]; p[ls] %= mod;</span><br><span class="line">p[rs] += (r-m)*la[rt];  p[rs] %= mod;</span><br><span class="line">la[ls] += la[rt]; la[ls] %= mod;</span><br><span class="line">la[rs] += la[rt]; la[rs] %= mod;</span><br><span class="line">la[rt] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt] = val[l];</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL tar)</span></span>&#123; <span class="comment">// 区间更新 </span></span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt] += (r-l+<span class="number">1</span>)*tar; p[rt] %= mod;</span><br><span class="line">la[rt] += tar; la[rt] %= mod;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,tar);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,tar);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123; <span class="comment">// 区间查询 </span></span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt] % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">query</span>(L,R,l,m,ls) ,ans %= mod;</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">query</span>(L,R,m+<span class="number">1</span>,r,rs) ,ans %= mod;</span><br><span class="line"><span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">op1</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,LL z)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(top[x] != top[y])&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[ top[x] ] &lt; dep[ top[y] ]) <span class="built_in">swap</span>(x,y); <span class="comment">// ***选择 *链头深度大 的向上跳 </span></span><br><span class="line"><span class="built_in">update</span>(dfn[top[x]],dfn[x],<span class="number">1</span>,n,<span class="number">1</span>,z);</span><br><span class="line">x = fa[top[x]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dep[x] &gt; dep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line"><span class="built_in">update</span>(dfn[x],dfn[y],<span class="number">1</span>,n,<span class="number">1</span>,z);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">op2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(top[x] != top[y])&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[ top[x] ] &lt; dep[ top[y] ]) <span class="built_in">swap</span>(x,y); <span class="comment">// ***选择 *链头深度大 的向上跳 </span></span><br><span class="line">ans += <span class="built_in">query</span>(dfn[top[x]],dfn[x],<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">ans %= mod;</span><br><span class="line">x = fa[top[x]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dep[x] &gt; dep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">ans += <span class="built_in">query</span>(dfn[x],dfn[y],<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">op3</span><span class="params">(<span class="keyword">int</span> x,LL z)</span></span>&#123;</span><br><span class="line"><span class="built_in">update</span>(dfn[x],dfn[x]+sz[x]<span class="number">-1</span>,<span class="number">1</span>,n,<span class="number">1</span>,z);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">op4</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">query</span>(dfn[x],dfn[x]+sz[x]<span class="number">-1</span>,<span class="number">1</span>,n,<span class="number">1</span>) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; rt &gt;&gt; mod;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; w[i] ,w[i] %= mod;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123; <span class="comment">// 建图 </span></span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs1</span>(rt,rt);</span><br><span class="line"><span class="built_in">dfs2</span>(rt,rt);</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> op,x,y;</span><br><span class="line">LL z;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line"><span class="built_in">op1</span>(x,y,z);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">cout &lt;&lt; <span class="built_in">op2</span>(x,y) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">3</span>)&#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; z;</span><br><span class="line"><span class="built_in">op3</span>(x,z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">4</span>)&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">cout &lt;&lt; <span class="built_in">op4</span>(x) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> 树剖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【字典树】洛谷 P2922 Secret Message G</title>
      <link href="/2021/05/14/ACM/%E3%80%90%E5%AD%97%E5%85%B8%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P2922%20Secret%20Message%20G/"/>
      <url>/2021/05/14/ACM/%E3%80%90%E5%AD%97%E5%85%B8%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P2922%20Secret%20Message%20G/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2922" target="_blank">题链</a></p><p>维护两个数组$v1[]$,$v2[]$，$v1[]$用于标记，$v2[]$用于记录$v1$的后缀和;<br>对于一个询问，如果在字典树上向下查找直到查找不到时，此时答案就是访问到的$v1[]$的和，如果查找完了，也就是说字典树上还有比询问更长的串，则答案也是访问到的$v1[]$的和，但是得加上此时的后缀和$v2[]$，因为当前$v2[]$包含$v1[]$，所以还得减去$v1[]$；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 150000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">500009</span>][<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> v1[<span class="number">500009</span>];</span><br><span class="line"><span class="keyword">int</span> v2[<span class="number">500009</span>];</span><br><span class="line"><span class="keyword">int</span> step;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span>(!p[cc][x]) p[cc][x] = ++step;</span><br><span class="line">cc = p[cc][x];</span><br><span class="line">v2[cc]++;</span><br><span class="line">&#125;</span><br><span class="line">v1[cc]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span>(!p[cc][x])&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">continue</span>;</span><br><span class="line">cc = p[cc][x];</span><br><span class="line">ans += v1[cc];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125; </span><br><span class="line">ans += v2[cc];</span><br><span class="line">ans -= v1[cc];</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line">cin &gt;&gt; len;</span><br><span class="line"><span class="built_in">insert</span>(len);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line">cin &gt;&gt; len;</span><br><span class="line">cout &lt;&lt; <span class="built_in">find</span>(len) &lt;&lt; <span class="string">&quot;\n&quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 字典树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【字典树】洛谷 P3879 阅读理解</title>
      <link href="/2021/05/14/ACM/%E3%80%90%E5%AD%97%E5%85%B8%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3879%20%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3/"/>
      <url>/2021/05/14/ACM/%E3%80%90%E5%AD%97%E5%85%B8%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3879%20%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3879" target="_blank">题链</a></p><p>字典树模板题；</p><p>总结：字典树数组长度应大于等于所有字符串总和长度，数组最后一维取决于字符集的大小；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 150000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> v[<span class="number">1009</span>][<span class="number">5009</span>];</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">1009</span>][<span class="number">5009</span>][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> step;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> cc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=h;k++)&#123;</span><br><span class="line"><span class="keyword">int</span> x = s[k]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!p[i][cc][x]) p[i][cc][x] = ++step;</span><br><span class="line">cc = p[i][cc][x];</span><br><span class="line">&#125;</span><br><span class="line">v[i][cc]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> cc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=h;j++)&#123;</span><br><span class="line"><span class="keyword">int</span> x = s[j]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!p[i][cc][x])&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cc = p[i][cc][x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!v[i][cc]) flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line">step = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">cin &gt;&gt; s+<span class="number">1</span>;</span><br><span class="line"><span class="built_in">insert</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">cin &gt;&gt; s+<span class="number">1</span>;</span><br><span class="line"><span class="built_in">find</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 字典树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【分块】洛古 P3396 哈希冲突</title>
      <link href="/2021/05/12/ACM/%E3%80%90%E5%88%86%E5%9D%97%E3%80%91%E6%B4%9B%E5%8F%A4%20P3396%20%E5%93%88%E5%B8%8C%E5%86%B2%E7%AA%81/"/>
      <url>/2021/05/12/ACM/%E3%80%90%E5%88%86%E5%9D%97%E3%80%91%E6%B4%9B%E5%8F%A4%20P3396%20%E5%93%88%E5%B8%8C%E5%86%B2%E7%AA%81/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3396" target="_blank">题链</a></p><p>$p[i][j]$ 表示 $mod$ 为 $i$,池子为 $j$ 的总和，可以预处理 $mod$ 在 $[1,1000]$ 范围内的答案，$O(1)$回答每个询问；</p><p>如果询问的范围超过了 $1000$，则暴力跑一边即可；</p><p>复杂度顶得住…</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 150009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">1009</span>][<span class="number">1009</span>]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">1001</span>;j++)&#123;</span><br><span class="line">p[j][i%j] += a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1001</span>;i++)&#123;</span><br><span class="line">p[i][pos%i] -= a[pos];</span><br><span class="line">p[i][pos%i] += val;</span><br><span class="line">&#125;</span><br><span class="line">a[pos] = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line"><span class="keyword">int</span> x,tar;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; x &gt;&gt; tar;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(x &gt;= <span class="number">1001</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=tar;i&lt;=n;i+=x)&#123;</span><br><span class="line">ans += a[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; p[x][tar] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">update</span>(x,tar);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【莫队】洛谷 P4168 蒲公英</title>
      <link href="/2021/05/12/ACM/%E3%80%90%E8%8E%AB%E9%98%9F%E3%80%91%E6%B4%9B%E8%B0%B7%20P4168%20%E8%92%B2%E5%85%AC%E8%8B%B1/"/>
      <url>/2021/05/12/ACM/%E3%80%90%E8%8E%AB%E9%98%9F%E3%80%91%E6%B4%9B%E8%B0%B7%20P4168%20%E8%92%B2%E5%85%AC%E8%8B%B1/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4168" target="_blank">题链</a></p><h1 id="——"><a href="#——" class="headerlink" title="——"></a>——</h1><p>题意在线求区间众数，若有多个输出权值最小的那个；</p><p>离线可采用莫队，在线由于区间众数不满足区间可加性（或许我不知道，不会维护），所以采用分块方式来写；</p><h1 id="——-1"><a href="#——-1" class="headerlink" title="——"></a>——</h1><p>对于数据范围首先离散化，对长度为 $n$ 的数组分为 $\sqrt(n)$ 块，预处理出第 $i$ 块到第 $j$ 块的区间众数答案；</p><p>预处理出数组每一个不同值的位置，$vector$存储；</p><p>对于一个询问$[l,r]$，若 $l$ 所在的块和 $r$ 所在的块距离 $&lt;= 1$，则暴力求解 $[l,r]$ 的答案；</p><p>否则可以将 $[l,r]$ 划分为 $[l,L)$,$[L,R]$,$(R,r]$ 三个块，其中 $[L,R]$ 是指 $[l,r]$ 之间所有的块；</p><p>可以发现ans要么是预处理出的 $[L,R]$ 的答案，要么$ans$是在，$[l,L)$ ,$(R,r]$ 之中，对于这两个区间，遍历每个值，用刚才存位置的 $vector$ 二分查找出现次数；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 40009</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> sqMS = <span class="built_in">sqrt</span>(MS)+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[MS]; <span class="comment">// 原数组 </span></span><br><span class="line"><span class="keyword">int</span> b[MS],tb;</span><br><span class="line"><span class="keyword">int</span> c[MS]; <span class="comment">// 离散化数组 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> size,bknum; <span class="comment">// 块大小，块数 </span></span><br><span class="line"><span class="keyword">int</span> bkl[MS],bkr[MS]; <span class="comment">// 第 i 块左右区间 </span></span><br><span class="line"><span class="keyword">int</span> belong[MS]; <span class="comment">// i 位置所属块号 </span></span><br><span class="line"></span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS]; <span class="comment">// 存 c[i] 位置 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cnt[MS]; <span class="comment">// 计数 </span></span><br><span class="line"><span class="keyword">int</span> p[sqMS][sqMS]; <span class="comment">// i 块 ~ j 块 的区间众数 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">a_hash_c</span><span class="params">()</span></span>&#123; <span class="comment">// 离散化 </span></span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line">tb = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(b[i] != b[i<span class="number">-1</span>]) b[++tb] = b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">c[i] = <span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+tb+<span class="number">1</span>,a[i]) - b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_bk</span><span class="params">()</span></span>&#123; <span class="comment">// 预处理块 </span></span><br><span class="line">size = <span class="built_in">sqrt</span>(n);</span><br><span class="line">bknum = n/size;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bknum;i++)&#123;</span><br><span class="line">bkl[i] = (i<span class="number">-1</span>)*size+<span class="number">1</span>;</span><br><span class="line">bkr[i] = i*size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(bkr[bknum] &lt; n)&#123;</span><br><span class="line">bknum++;</span><br><span class="line">bkl[bknum] = bkr[bknum<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">bkr[bknum] = n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bknum;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=bkl[i];j&lt;=bkr[i];j++)&#123;</span><br><span class="line">belong[j] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_numpos</span><span class="params">()</span></span>&#123; <span class="comment">// 存每个数位置 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">vc[c[i]].<span class="built_in">push_back</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_p</span><span class="params">()</span></span>&#123; <span class="comment">// 预处理 i 块 ~ j 块 的区间众数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bknum;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cntans = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> cnt);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=bkl[i];j&lt;=n;j++)&#123;</span><br><span class="line">cnt[c[j]]++;</span><br><span class="line"><span class="keyword">if</span>(cntans &lt; cnt[c[j]] || (cntans == cnt[c[j]] &amp;&amp; ans &gt; c[j]))&#123;</span><br><span class="line">ans = c[j];</span><br><span class="line">cntans = cnt[c[j]];</span><br><span class="line">&#125;</span><br><span class="line">p[i][belong[j]] = ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">b[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">a_hash_c</span>();</span><br><span class="line"><span class="built_in">init_bk</span>();</span><br><span class="line"><span class="built_in">init_numpos</span>();</span><br><span class="line"><span class="built_in">init_p</span>();</span><br><span class="line"><span class="keyword">int</span> lastans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">l = (l+lastans<span class="number">-1</span>)%n+<span class="number">1</span>;</span><br><span class="line">r = (r+lastans<span class="number">-1</span>)%n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(l &gt; r) <span class="built_in">swap</span>(l,r);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(belong[r] - belong[l] &lt;= <span class="number">1</span>)&#123; <span class="comment">// l,r之间没有完整块 </span></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cntans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> lpos = <span class="built_in">lower_bound</span>(vc[c[i]].<span class="built_in">begin</span>(),vc[c[i]].<span class="built_in">end</span>(),l) - vc[c[i]].<span class="built_in">begin</span>();</span><br><span class="line"><span class="keyword">int</span> rpos = <span class="built_in">upper_bound</span>(vc[c[i]].<span class="built_in">begin</span>(),vc[c[i]].<span class="built_in">end</span>(),r) - vc[c[i]].<span class="built_in">begin</span>();</span><br><span class="line"><span class="keyword">int</span> cc = rpos - lpos;</span><br><span class="line"><span class="keyword">if</span>(cc &gt; cntans || (cc == cntans &amp;&amp; c[i] &lt; ans))&#123;</span><br><span class="line">ans = c[i];</span><br><span class="line">cntans = cc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; b[ans] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">lastans = b[ans];</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> L = belong[l]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> R = belong[r]<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> ans = p[L][R]; <span class="comment">// 初始化为 l,r 之间的块的区间众数 </span></span><br><span class="line"><span class="keyword">int</span> lanspos = <span class="built_in">lower_bound</span>(vc[ans].<span class="built_in">begin</span>(),vc[ans].<span class="built_in">end</span>(),l) - vc[ans].<span class="built_in">begin</span>();</span><br><span class="line"><span class="keyword">int</span> ranspos = <span class="built_in">lower_bound</span>(vc[ans].<span class="built_in">begin</span>(),vc[ans].<span class="built_in">end</span>(),r) - vc[ans].<span class="built_in">begin</span>();</span><br><span class="line"><span class="keyword">int</span> cntans = ranspos - lanspos; <span class="comment">// [l,r] 区间内 ans 出现次数 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=bkl[L]<span class="number">-1</span>;i++)&#123; <span class="comment">// 暴力处理左边不完整块 </span></span><br><span class="line"><span class="keyword">int</span> lpos = <span class="built_in">lower_bound</span>(vc[c[i]].<span class="built_in">begin</span>(),vc[c[i]].<span class="built_in">end</span>(),l) - vc[c[i]].<span class="built_in">begin</span>();</span><br><span class="line"><span class="keyword">int</span> rpos = <span class="built_in">upper_bound</span>(vc[c[i]].<span class="built_in">begin</span>(),vc[c[i]].<span class="built_in">end</span>(),r) - vc[c[i]].<span class="built_in">begin</span>();</span><br><span class="line"><span class="keyword">int</span> cc = rpos - lpos;</span><br><span class="line"><span class="keyword">if</span>(cc &gt; cntans || (cc == cntans &amp;&amp; c[i] &lt; ans))&#123;</span><br><span class="line">ans = c[i];</span><br><span class="line">cntans = cc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=bkr[R]+<span class="number">1</span>;i&lt;=r;i++)&#123; <span class="comment">// 暴力处理右边不完整块</span></span><br><span class="line"><span class="keyword">int</span> lpos = <span class="built_in">lower_bound</span>(vc[c[i]].<span class="built_in">begin</span>(),vc[c[i]].<span class="built_in">end</span>(),l) - vc[c[i]].<span class="built_in">begin</span>();</span><br><span class="line"><span class="keyword">int</span> rpos = <span class="built_in">upper_bound</span>(vc[c[i]].<span class="built_in">begin</span>(),vc[c[i]].<span class="built_in">end</span>(),r) - vc[c[i]].<span class="built_in">begin</span>();</span><br><span class="line"><span class="keyword">int</span> cc = rpos - lpos;</span><br><span class="line"><span class="keyword">if</span>(cc &gt; cntans || (cc == cntans &amp;&amp; c[i] &lt; ans))&#123;</span><br><span class="line">ans = c[i];</span><br><span class="line">cntans = cc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; b[ans] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">lastans = b[ans];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分块 </tag>
            
            <tag> 莫队 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Manacher】洛谷 P3805 【模板】manacher算法</title>
      <link href="/2021/05/12/ACM/%E3%80%90Manacher%E3%80%91%E6%B4%9B%E8%B0%B7%20P3805%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91manacher%E7%AE%97%E6%B3%95/"/>
      <url>/2021/05/12/ACM/%E3%80%90Manacher%E3%80%91%E6%B4%9B%E8%B0%B7%20P3805%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91manacher%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3805" target="_blank">题链</a></p><p><a href="https://oi-wiki.org/string/manacher/" target="_blank">OI-wiki</a></p><p>字符串以 1 为开头写的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 22000009 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> mnc[MS];</span><br><span class="line"><span class="keyword">char</span> t[MS];</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line"><span class="keyword">int</span> tot,hs; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; t+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">strlen</span>(t+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=h;i++)&#123; <span class="comment">// 预处理原串 </span></span><br><span class="line">s[++tot] = <span class="number">0</span>;</span><br><span class="line">s[++tot] = t[i];</span><br><span class="line">&#125;</span><br><span class="line">s[++tot] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,l=<span class="number">1</span>,r=<span class="number">0</span>;i&lt;=tot;i++)&#123; <span class="comment">// manacher </span></span><br><span class="line"><span class="keyword">int</span> cc = i &gt; r? <span class="number">1</span> : <span class="built_in">min</span>(mnc[l+(r-i)] , r-i);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>&lt;=i-cc &amp;&amp; i+cc&lt;=tot &amp;&amp; s[i-cc] == s[i+cc]) cc++;</span><br><span class="line">mnc[i] = --cc; <span class="comment">// mnc[i]表示s[i]这个点向右最多能扩充几个 </span></span><br><span class="line"><span class="keyword">if</span>(i+cc &gt; r)&#123;</span><br><span class="line">r = i+cc;</span><br><span class="line">l = i-cc;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;i++)&#123;</span><br><span class="line">ans = <span class="built_in">max</span>(ans,mnc[i]);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树形DP】2021年东华大学金马程序设计联赛 G. IDEA&#39;s Tree</title>
      <link href="/2021/05/11/ACM/%E3%80%90%E6%A0%91%E5%BD%A2DP%E3%80%912021%E5%B9%B4%E4%B8%9C%E5%8D%8E%E5%A4%A7%E5%AD%A6%E9%87%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%81%94%E8%B5%9B%20G.%20IDEA&#39;s%20Tree/"/>
      <url>/2021/05/11/ACM/%E3%80%90%E6%A0%91%E5%BD%A2DP%E3%80%912021%E5%B9%B4%E4%B8%9C%E5%8D%8E%E5%A4%A7%E5%AD%A6%E9%87%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%81%94%E8%B5%9B%20G.%20IDEA&#39;s%20Tree/</url>
      
        <content type="html"><![CDATA[<p><a href="https://acm.ecnu.edu.cn/contest/405/problem/G/" target="_blank">题链</a></p><p>$dp[u][j]$表示 包含$u$这个节点 不包含$u$节点父亲 大小为$j$的连通块方案数；</p><p>设$v$是$u$的一个子节点，并且递归求解出$dp[v][j]$，递归终点就是$dp[v][1] = 1$，然后类似背包方法合并$dp[u][]$，$dp[v][]$；</p><p>记$cnt[i]$表示大小为i的连通块数量；</p><p>$cnt[i]$就是$dp$[ [1~n] ][i]的和；</p><p>$tot$ = $cnt$[ [1~n] ]之和；</p><p>$sum$ = $i*cnt$[ [1~n] ]之和；</p><p>求期望 $ans = （sum/tot）$%mod；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 5009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS]; </span><br><span class="line">LL dp[MS][MS];</span><br><span class="line"><span class="keyword">int</span> sz[MS];</span><br><span class="line">LL cnt[MS];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL x,LL y)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(;y;y&gt;&gt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(y&amp;<span class="number">1</span>) ans = (ans*x)%mod;</span><br><span class="line">x = (x*x)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">inv</span><span class="params">(LL x,LL y)</span></span>&#123; <span class="comment">// x/y;</span></span><br><span class="line"><span class="keyword">return</span>  ( (x%mod)*<span class="built_in">qpow</span>(y,mod<span class="number">-2</span>)%mod )%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">dp[u][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dfs</span>(v,u);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=sz[u];i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=sz[v];j++)&#123;</span><br><span class="line">dp[u][i+j] = (dp[u][i+j] + dp[u][i]*dp[v][j])%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">vc[i].<span class="built_in">push_back</span>(x);</span><br><span class="line">vc[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=sz[i];j++)&#123;</span><br><span class="line">cnt[j] = (cnt[j] + dp[i][j]) % mod;</span><br><span class="line">dp[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">LL sum = <span class="number">0</span> ,tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">sum = (sum + cnt[i]*i) % mod;</span><br><span class="line">tot = (tot + cnt[i]) % mod;</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="built_in">inv</span>(sum,tot);</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) vc[i].<span class="built_in">clear</span>() ,sz[i] = cnt[i] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树形DP】洛谷 P2014 选课</title>
      <link href="/2021/05/11/ACM/%E3%80%90%E6%A0%91%E5%BD%A2DP%E3%80%91%E6%B4%9B%E8%B0%B7%20P2014%20%E9%80%89%E8%AF%BE/"/>
      <url>/2021/05/11/ACM/%E3%80%90%E6%A0%91%E5%BD%A2DP%E3%80%91%E6%B4%9B%E8%B0%B7%20P2014%20%E9%80%89%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2014" target="_blank">题链</a></p><p>$dp[u][j]$表示$u$这个节点取$j$个物品的最大值（包含$u$点）；</p><p>设$v$是$u$的一个子节点，并且递归求解出$dp[v][j]$，递归终点就是$dp[v][1] = val[v]$（$val[v]$ 表示点$v$的权值），然后合并$u$，$v$；</p><p>答案就是$dp[0][m+1]$，从$0$号点选取$m+1$个物品的最大值（$0$号物品$val[0] = 0$）；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 309</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">vector&lt;<span class="keyword">int</span> &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> val[MS];</span><br><span class="line"><span class="keyword">int</span> dp[MS][MS];</span><br><span class="line"><span class="keyword">int</span> sz[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">dp[u][<span class="number">1</span>] = val[u];</span><br><span class="line">sz[u] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;v:vc[u])&#123;</span><br><span class="line"><span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dfs</span>(v,u);</span><br><span class="line">sz[u] += sz[v];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=sz[u];i&gt;=<span class="number">2</span>;i--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=sz[v];j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i-j&gt;=<span class="number">1</span>) dp[u][i] = <span class="built_in">max</span>(dp[u][i] , dp[u][i-j]+dp[v][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x,w;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; w;</span><br><span class="line">vc[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">val[i] = w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">-1</span>);</span><br><span class="line">cout &lt;&lt; dp[<span class="number">0</span>][m+<span class="number">1</span>] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【数论】求逆元</title>
      <link href="/2021/05/11/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E6%B1%82%E9%80%86%E5%85%83/"/>
      <url>/2021/05/11/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E6%B1%82%E9%80%86%E5%85%83/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL x,LL y)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(;y;y&gt;&gt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(y&amp;<span class="number">1</span>) ans = (ans*x)%mod;</span><br><span class="line">x = (x*x)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">inv</span><span class="params">(LL x,LL y)</span></span>&#123; <span class="comment">// x/y;</span></span><br><span class="line"><span class="keyword">return</span>  ( (x%mod)*<span class="built_in">qpow</span>(y,mod<span class="number">-2</span>)%mod )%mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【回滚莫队】mex</title>
      <link href="/2021/05/11/ACM/%E3%80%90%E5%9B%9E%E6%BB%9A%E8%8E%AB%E9%98%9F%E3%80%91mex/"/>
      <url>/2021/05/11/ACM/%E3%80%90%E5%9B%9E%E6%BB%9A%E8%8E%AB%E9%98%9F%E3%80%91mex/</url>
      
        <content type="html"><![CDATA[<p><a href="https://vjudge.net/problem/%E9%BB%91%E6%9A%97%E7%88%86%E7%82%B8-3585" target="_blank">题链</a></p><p>多次询问一个区间内最小没有出现过的自然数</p><p>回滚莫队：发现添加一个数难以维护，故只用删除操作来维护答案。用$cnt[]$来计数，一开始把$[1,n]$全部塞进去，记录全局答案$ANS$，只有新的询问所属的块与上次询问不同时更新$ANS$（因为该询问前面的块已经没有用了）；</p><p>什么时候更新答案$ans$呢？一开始$ans = ANS$的，每一次删除的时候，判断$cnt[x]$是否等于$0$，因为一开始$cnt[]$数组是记录了 $[$ 询问左区间的块的左区间$,n]$ 之间的所有数字的，所以删着删着如果$cnt[x] == 0$了，那么$ans = min(ans,x)$；</p><p>详细看代码；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> f1 first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> f2 second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS]; <span class="comment">// 原数组 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,id;</span><br><span class="line">&#125;ask[MS];</span><br><span class="line">LL size,bknum; <span class="comment">// 每一块的位置，总块数 </span></span><br><span class="line">LL bkl[MS],bkr[MS]; <span class="comment">// 分别记录第i块的左右区间 </span></span><br><span class="line">LL belong[MS]; <span class="comment">// 表示下标pos位置所属块号 </span></span><br><span class="line"></span><br><span class="line">LL ANS;</span><br><span class="line">LL cnp[MS]; <span class="comment">// 临时计数数组 用于暴力处理 cnp[i]表示i出现次数 </span></span><br><span class="line">LL cnt[MS]; <span class="comment">// 用于计数数组 cnt[i]表示i出现次数 </span></span><br><span class="line"></span><br><span class="line">LL ac[MS]; <span class="comment">// 记录答案 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_ANS</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] &gt; n+<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">cnt[a[i]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(cnt[ANS]) ANS++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_bk</span><span class="params">()</span></span>&#123;</span><br><span class="line">size = <span class="built_in">sqrt</span>(n);</span><br><span class="line">bknum = n/size;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bknum;i++)&#123;</span><br><span class="line">bkl[i] = (i<span class="number">-1</span>)*size+<span class="number">1</span>;</span><br><span class="line">bkr[i] = i*size; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(bkr[bknum] &lt; n)&#123;</span><br><span class="line">bknum++;</span><br><span class="line">bkl[bknum] = bkr[bknum<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">bkr[bknum] = n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bknum;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=bkl[i];j&lt;=bkr[i];j++)&#123;</span><br><span class="line">belong[j] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123; <span class="comment">// 按块排序，左区间从小到大，右区间从大到小 </span></span><br><span class="line"><span class="keyword">if</span>(belong[t1.l] != belong[t2.l]) <span class="keyword">return</span> t1.l &lt; t2.l;</span><br><span class="line"><span class="keyword">return</span> t1.r &gt; t2.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123; </span><br><span class="line"><span class="keyword">if</span>(a[pos] &gt; n+<span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">cnt[a[pos]]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">int</span> pos,LL &amp;ans)</span></span>&#123; <span class="comment">// 删除时更新答案 </span></span><br><span class="line"><span class="keyword">if</span>(a[pos] &gt; n+<span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">cnt[a[pos]]--;</span><br><span class="line"><span class="keyword">if</span>(cnt[a[pos]] == <span class="number">0</span>) ans = <span class="built_in">min</span>(ans,a[pos]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">init_ANS</span>(); <span class="comment">// 初始化全局答案 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">ask[i] = &#123;l,r,i&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">init_bk</span>(); <span class="comment">// 初始化 块 </span></span><br><span class="line"><span class="built_in">sort</span>(ask+<span class="number">1</span>,ask+m+<span class="number">1</span>,cmp); <span class="comment">// 对询问按 块 排序 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> L = <span class="number">1</span> ,R = n;</span><br><span class="line"><span class="keyword">int</span> lastbk = <span class="number">0</span>;</span><br><span class="line">LL ans = ANS;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(belong[ask[i].l] == belong[ask[i].r])&#123; <span class="comment">// 属于同一块 暴力处理 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=ask[i].l;j&lt;=ask[i].r;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j] &gt; n+<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">cnp[a[j]]++;</span><br><span class="line">&#125;</span><br><span class="line">LL tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(cnp[tmp]) tmp++;</span><br><span class="line">ac[ask[i].id] = tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=ask[i].l;j&lt;=ask[i].r;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j] &gt; n+<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">cnp[a[j]]--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(belong[ask[i].l] != lastbk)&#123; <span class="comment">// 新的左区间与上次的左区间块不同 </span></span><br><span class="line"><span class="keyword">while</span>(R &lt; n) <span class="built_in">add</span>(++R);</span><br><span class="line"><span class="keyword">while</span>(L &lt; bkl[belong[ask[i].l]]) <span class="built_in">remove</span>(L++,ANS); <span class="comment">// ***更新全局ANS </span></span><br><span class="line">lastbk = belong[ask[i].l];</span><br><span class="line">ans = ANS;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(R &gt; ask[i].r)&#123;</span><br><span class="line"><span class="built_in">remove</span>(R--,ans);</span><br><span class="line">&#125;</span><br><span class="line">LL tmp = ans; <span class="comment">// 左区间可能是乱序的，tmp作为临时记录 </span></span><br><span class="line"><span class="keyword">while</span>(L &lt; ask[i].l)&#123;</span><br><span class="line"><span class="built_in">remove</span>(L++,tmp);</span><br><span class="line">&#125;</span><br><span class="line">ac[ask[i].id] = tmp;</span><br><span class="line"><span class="comment">// 回滚 </span></span><br><span class="line"><span class="keyword">while</span>(L &gt; bkl[belong[ask[i].l]]) <span class="built_in">add</span>(--L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分块 </tag>
            
            <tag> 莫队 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【回滚莫队】洛谷 P3709 大爷的字符串题</title>
      <link href="/2021/05/10/ACM/%E3%80%90%E5%9B%9E%E6%BB%9A%E8%8E%AB%E9%98%9F%E3%80%91%E6%B4%9B%E8%B0%B7%20P3709%20%E5%A4%A7%E7%88%B7%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98/"/>
      <url>/2021/05/10/ACM/%E3%80%90%E5%9B%9E%E6%BB%9A%E8%8E%AB%E9%98%9F%E3%80%91%E6%B4%9B%E8%B0%B7%20P3709%20%E5%A4%A7%E7%88%B7%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="——"><a href="#——" class="headerlink" title="——-"></a>——-</h1><p><a href="https://www.luogu.com.cn/problem/P3709" target="_blank">题链</a></p><p>$1.$普通莫队：维护两个数组$v[i]$与$cnt[i]$，$v[i]$表示$i$出现次数，$cnt[i]$表示出现$i$次的数有多少个；</p><p>对于新加入的数很好更新，$ans = max(ans,v[x])$，对于删除的数x，若这个的数被删之前$v[x] = 1$了，删完后就没了，并且出现$ans$次的数的个数$cnt[ans] = 1$，那么$x$就是此时的众数，删了它，那么$ans–$；</p><p>$2.$回滚莫队：发现新增一个数字可以很好的维护$ans$，但是删除一个数字不好维护，所以使用回滚莫队；</p><h1 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h1><p>1.普通莫队：维护两个数组$v[i]$与$cnt[i]$，$v[i]$表示$i$出现次数，$cnt[i]$表示出现i次的数有多少个；</p><p>对于新加入的数很好更新，$ans = max(ans,v[x])$，对于删除的数$x$，若这个的数被删之前$v[x] = 1$了，删完后就没了，并且出现$ans$次的数的个数$cnt[ans] = 1$，那么$x$就是此时的众数，删了它，那么$ans–$；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="keyword">int</span> b[MS],tb;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,id;</span><br><span class="line">&#125;ask[MS];</span><br><span class="line"><span class="keyword">int</span> unit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> v[MS];</span><br><span class="line"><span class="keyword">int</span> cnt[MS];</span><br><span class="line"><span class="keyword">int</span> ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t1.l/unit != t2.l/unit) <span class="keyword">return</span> t1.l &lt; t2.l;</span><br><span class="line"><span class="keyword">return</span> t1.r &lt; t2.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">b[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line">tb = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(b[i] != b[i<span class="number">-1</span>]) b[++tb] = b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">a[i] = <span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+tb+<span class="number">1</span>,a[i])-b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">ask[i] = &#123;l,r,i&#125;;</span><br><span class="line">&#125;</span><br><span class="line">unit = <span class="built_in">sqrt</span>(n);</span><br><span class="line"><span class="built_in">sort</span>(ask+<span class="number">1</span>,ask+m+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> L = <span class="number">1</span> ,R = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l = ask[i].l;</span><br><span class="line"><span class="keyword">int</span> r = ask[i].r;</span><br><span class="line"><span class="keyword">int</span> id = ask[i].id;</span><br><span class="line"><span class="keyword">while</span>(L &lt; l)&#123;</span><br><span class="line"><span class="keyword">if</span>(ans == v[a[L]] &amp;&amp; cnt[v[a[L]]] == <span class="number">1</span>) ans--;</span><br><span class="line">cnt[v[a[L]]]--;</span><br><span class="line">v[a[L]]--;</span><br><span class="line">cnt[v[a[L]]]++;</span><br><span class="line">L++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(L &gt; l)&#123;</span><br><span class="line">L--;</span><br><span class="line">cnt[v[a[L]]]--;</span><br><span class="line">v[a[L]]++;</span><br><span class="line">cnt[v[a[L]]]++;</span><br><span class="line">ans = <span class="built_in">max</span>(ans,v[a[L]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(R &lt; r)&#123;</span><br><span class="line">R++;</span><br><span class="line">cnt[v[a[R]]]--;</span><br><span class="line">v[a[ R]]++;</span><br><span class="line">cnt[v[a[R]]]++;</span><br><span class="line">ans = <span class="built_in">max</span>(ans,v[a[R]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(R &gt; r)&#123;</span><br><span class="line"><span class="keyword">if</span>(ans == v[a[R]] &amp;&amp; cnt[v[a[R]]] == <span class="number">1</span>) ans--;</span><br><span class="line">cnt[v[a[R]]]--;</span><br><span class="line">v[a[R]]--;</span><br><span class="line">cnt[v[a[R]]]++;</span><br><span class="line">R--;</span><br><span class="line">&#125;</span><br><span class="line">ac[id] = ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cout &lt;&lt; -ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h1><p>$2.$回滚莫队：发现新增一个数字可以很好的维护$ans$，但是删除一个数字不好维护，所以使用回滚莫队；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> f1 first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> f2 second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS];</span><br><span class="line">LL b[MS],tb;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,id;</span><br><span class="line">&#125;ask[MS];</span><br><span class="line">LL size,bknum;</span><br><span class="line">LL bkl[MS],bkr[MS];</span><br><span class="line">LL belong[MS];</span><br><span class="line"></span><br><span class="line">LL cnt[MS];</span><br><span class="line">LL cnp[MS];</span><br><span class="line">LL ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_bk</span><span class="params">()</span></span>&#123;</span><br><span class="line">size = <span class="built_in">sqrt</span>(n);</span><br><span class="line">bknum = n/size;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bknum;i++)&#123;</span><br><span class="line">bkl[i] = (i<span class="number">-1</span>)*size+<span class="number">1</span>;</span><br><span class="line">bkr[i] = i*size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(bkr[bknum] &lt; n)&#123;</span><br><span class="line">bknum++;</span><br><span class="line">bkl[bknum] = bkr[bknum<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">bkr[bknum] = n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bknum;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=bkl[i];j&lt;=bkr[i];j++)&#123;</span><br><span class="line">belong[j] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(belong[t1.l] != belong[t2.l]) <span class="keyword">return</span> t1.l &lt; t2.l;</span><br><span class="line"><span class="keyword">return</span> t1.r &lt; t2.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">b[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line">tb = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(b[i] != b[i<span class="number">-1</span>]) b[++tb] = b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">a[i] = <span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+tb+<span class="number">1</span>,a[i]) - b;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">ask[i] = &#123;l,r,i&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">init_bk</span>();</span><br><span class="line"><span class="built_in">sort</span>(ask+<span class="number">1</span>,ask+m+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">int</span> L = <span class="number">1</span> ,R = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> lastbk = <span class="number">0</span>;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(belong[ask[i].l] == belong[ask[i].r])&#123;</span><br><span class="line">LL tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=ask[i].l;j&lt;=ask[i].r;j++)&#123;</span><br><span class="line">cnp[a[j]]++;</span><br><span class="line">tmp = <span class="built_in">max</span>(tmp,cnp[a[j]]);</span><br><span class="line">&#125;</span><br><span class="line">ac[ask[i].id] = tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=ask[i].l;j&lt;=ask[i].r;j++)&#123;</span><br><span class="line">cnp[a[j]]--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(belong[ask[i].l] != lastbk)&#123;</span><br><span class="line"><span class="keyword">for</span>(;L&lt;=bkr[belong[ask[i].l]];L++) cnt[a[L]]--;</span><br><span class="line"><span class="keyword">for</span>(;R&gt; bkr[belong[ask[i].l]];R--) cnt[a[R]]--;</span><br><span class="line">lastbk = belong[ask[i].l];</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(R &lt; ask[i].r)&#123;</span><br><span class="line">cnt[a[++R]]++;</span><br><span class="line">ans = <span class="built_in">max</span>(ans,cnt[a[R]]);</span><br><span class="line">&#125;</span><br><span class="line">LL tmp = ans;</span><br><span class="line"><span class="keyword">while</span>(L &gt; ask[i].l)&#123;</span><br><span class="line">cnt[a[--L]]++;</span><br><span class="line">tmp = <span class="built_in">max</span>(tmp,cnt[a[L]]);</span><br><span class="line">&#125;</span><br><span class="line">ac[ask[i].id] = tmp;</span><br><span class="line"><span class="keyword">for</span>(;L&lt;=bkr[belong[ask[i].l]];L++) cnt[a[L]]--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cout &lt;&lt; -ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分块 </tag>
            
            <tag> 莫队 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【回滚莫队】AT1219 歴史の研究</title>
      <link href="/2021/05/10/ACM/%E3%80%90%E5%9B%9E%E6%BB%9A%E8%8E%AB%E9%98%9F%E3%80%91AT1219%20%E6%AD%B4%E5%8F%B2%E3%81%AE%E7%A0%94%E7%A9%B6/"/>
      <url>/2021/05/10/ACM/%E3%80%90%E5%9B%9E%E6%BB%9A%E8%8E%AB%E9%98%9F%E3%80%91AT1219%20%E6%AD%B4%E5%8F%B2%E3%81%AE%E7%A0%94%E7%A9%B6/</url>
      
        <content type="html"><![CDATA[<p><a href="https://vjudge.net/problem/AtCoder-joisc2014_c" target="_blank">题链</a></p><p>题意询问区间最大价值，最大价值指区间中 $a[i]$出现次数$*a[i]$ 的最大值；</p><p>莫队解决：发现新增一个数字很好维护最大值（计数就行），但是删除一个数字困难，所以用到回滚莫队</p><p>这篇博客看的通俗易懂，代码也是~</p><p><a href="https://blog.csdn.net/weixin_34195364/article/details/93092669" target="_blank">回滚莫队</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL a[MS]; <span class="comment">// 原数组 </span></span><br><span class="line">LL b[MS],tb;<span class="comment">// 离散化所用临时数组 </span></span><br><span class="line">LL c[MS];<span class="comment">// 离散化后的数组 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,id;</span><br><span class="line">&#125;ask[MS];</span><br><span class="line">LL sizee,bknum; <span class="comment">// 每块大小，总块数 </span></span><br><span class="line">LL belong[MS]; <span class="comment">// 下标 i 所属区块标号 </span></span><br><span class="line">LL bkl[MS],bkr[MS]; <span class="comment">// 区块 i 的左右区间 </span></span><br><span class="line"></span><br><span class="line">LL cnp[MS]; <span class="comment">// 询问的左右区间所属同一块时暴力处理所用临时数组 </span></span><br><span class="line">LL cnt[MS]; <span class="comment">// cnt[i]表示 i 出现次数 </span></span><br><span class="line">LL ac[MS];  <span class="comment">// 记录答案 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(belong[t1.l] ^ belong[t2.l]) <span class="keyword">return</span> t1.l &lt; t2.l;</span><br><span class="line"><span class="keyword">return</span> t1.r &lt; t2.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_block</span><span class="params">()</span></span>&#123;</span><br><span class="line">sizee = <span class="built_in">sqrt</span>(n);</span><br><span class="line">bknum = n/sizee;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bknum;i++)&#123;</span><br><span class="line">bkl[i] = (i<span class="number">-1</span>)*sizee+<span class="number">1</span>;</span><br><span class="line">bkr[i] = i*sizee;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(bkr[bknum] &lt; n)&#123;</span><br><span class="line">bknum++;</span><br><span class="line">bkl[bknum] = bkr[bknum<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">bkr[bknum] = n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bknum;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=bkl[i];j&lt;=bkr[i];j++)&#123;</span><br><span class="line">belong[j] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">b[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 离散化 c[]为离散化后处理数组，a[]为原数组 </span></span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line">tb = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(b[i] != b[i<span class="number">-1</span>]) b[++tb] = b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;  </span><br><span class="line">c[i] = <span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+tb+<span class="number">1</span>,a[i]) - b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 离线处理询问，分块排序 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">ask[i] = &#123;l,r,i&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">init_block</span>(); <span class="comment">// 预处理下标所属的块，每块的区间 </span></span><br><span class="line"><span class="built_in">sort</span>(ask+<span class="number">1</span>,ask+m+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="comment">// 回滚莫队 </span></span><br><span class="line"><span class="keyword">int</span> L = <span class="number">1</span>,R = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> lastbk = <span class="number">0</span>;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123; </span><br><span class="line"><span class="keyword">if</span>(belong[ask[i].l] == belong[ask[i].r])&#123; <span class="comment">// 所属同一块的情况暴力处理 </span></span><br><span class="line">LL tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=ask[i].l;j&lt;=ask[i].r;j++)&#123;</span><br><span class="line">cnp[c[j]]++;</span><br><span class="line">tmp = <span class="built_in">max</span>(tmp,cnp[c[j]]*a[j]);</span><br><span class="line">&#125; </span><br><span class="line">ac[ask[i].id] = tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=ask[i].l;j&lt;=ask[i].r;j++)&#123;</span><br><span class="line">cnp[c[j]] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(belong[ask[i].l] != lastbk)&#123; <span class="comment">// 询问的左区间 与上一次询问左区间不同时 更新左右指针 </span></span><br><span class="line"><span class="keyword">for</span>(;L&lt;=bkr[belong[ask[i].l]];L++) cnt[c[L]]--; <span class="comment">// L 更新到区块右区间+1 </span></span><br><span class="line"><span class="keyword">for</span>(;R&gt; bkr[belong[ask[i].l]];R--) cnt[c[R]]--; <span class="comment">// R 更新到区块右区间 </span></span><br><span class="line">lastbk = belong[ask[i].l]; <span class="comment">// 更新区块 </span></span><br><span class="line">ans = <span class="number">0</span>; <span class="comment">// 记录ans归零 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 右指针直接右移，因为询问左区间同属于一个块的时，对于右区间排序是按照从小到大 </span></span><br><span class="line"><span class="keyword">while</span>(R &lt; ask[i].r)&#123;</span><br><span class="line">cnt[c[++R]]++;</span><br><span class="line">ans = <span class="built_in">max</span>(ans,cnt[c[R]]*a[R]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 由于询问的左区间同属于一个块，但可能不是有序的，所以临时记录答案，之后左指针得归位 </span></span><br><span class="line">LL tmp = ans;</span><br><span class="line"><span class="keyword">while</span>(L &gt; ask[i].l)&#123;</span><br><span class="line">cnt[c[--L]]++;</span><br><span class="line">tmp = <span class="built_in">max</span>(tmp,cnt[c[L]]*a[L]);</span><br><span class="line">&#125;</span><br><span class="line">ac[ask[i].id] = tmp;</span><br><span class="line"><span class="comment">// 回滚 </span></span><br><span class="line"><span class="keyword">while</span>(L &lt;= bkr[belong[ask[i].l]]) cnt[c[L++]]--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分块 </tag>
            
            <tag> 莫队 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【带修莫队】洛谷P1903 数颜色 维护队列</title>
      <link href="/2021/05/07/ACM/%E3%80%90%E5%B8%A6%E4%BF%AE%E8%8E%AB%E9%98%9F%E3%80%91%E6%B4%9B%E8%B0%B7P1903%20%E6%95%B0%E9%A2%9C%E8%89%B2%20%E7%BB%B4%E6%8A%A4%E9%98%9F%E5%88%97/"/>
      <url>/2021/05/07/ACM/%E3%80%90%E5%B8%A6%E4%BF%AE%E8%8E%AB%E9%98%9F%E3%80%91%E6%B4%9B%E8%B0%B7P1903%20%E6%95%B0%E9%A2%9C%E8%89%B2%20%E7%BB%B4%E6%8A%A4%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1903" target="_blank">题链</a></p><p>1、 $Q$ $L$ $R$代表询问你从第$L$支画笔到第$R$支画笔中共有几种不同颜色的画笔。</p><p>2、 $R$ $P$ $Col$ 把第$P$支画笔替换为颜色$Col$。</p><p>带修改莫队；</p><p>学玩普通莫队再看带修改莫队，<a href="https://oi-wiki.org/misc/modifiable-mo-algo/" target="_blank">OI-wiki</a>上讲的通俗易懂；</p><p>对比主要是这几点：</p><p>1.分块$unit = pow(n,2.0/3.0)$;</p><p>2.对询问排序是先排左区间是否在同一个块，再排右区间，然后是时间</p><p>3.将询问和修改划分成两个数组，莫队将左右指针移动到询问区间过后再考虑修改问题，已知本次询问的$time$，然后在修改数组上将$time$之前的修改都跑一遍，其中修改值与被修改值是$swap$相互替换，因为可能要回退，也就是换回来。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,id;</span><br><span class="line">&#125;ask[MS];</span><br><span class="line"><span class="keyword">int</span> asknum;</span><br><span class="line"><span class="keyword">int</span> unit;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> pos,tar,id;</span><br><span class="line">&#125;alt[MS];</span><br><span class="line"><span class="keyword">int</span> altnum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> v[MS];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ac[MS]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t1.l/unit != t2.l/unit) <span class="keyword">return</span> t1.l &lt; t2.l;</span><br><span class="line"><span class="keyword">if</span>(t1.r/unit != t2.r/unit) <span class="keyword">return</span> t1.r &lt; t2.r;</span><br><span class="line"><span class="keyword">return</span> t1.id &lt; t2.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="string">&#x27;Q&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">ask[++asknum] = &#123;l,r,i&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="string">&#x27;R&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> pos,tar;</span><br><span class="line">cin &gt;&gt; pos &gt;&gt; tar;</span><br><span class="line">alt[++altnum] = &#123;pos,tar,i&#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">unit = <span class="built_in">pow</span>(n,<span class="number">2.0</span>/<span class="number">3.0</span>);</span><br><span class="line"><span class="built_in">sort</span>(ask+<span class="number">1</span>,ask+asknum+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> L = <span class="number">1</span> ,R = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> time = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=asknum;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l = ask[i].l;</span><br><span class="line"><span class="keyword">int</span> r = ask[i].r;</span><br><span class="line"><span class="keyword">int</span> id = ask[i].id;</span><br><span class="line"><span class="keyword">while</span>(L &lt; l)&#123;</span><br><span class="line">v[a[L]]--;</span><br><span class="line"><span class="keyword">if</span>(v[a[L]] == <span class="number">0</span>) ans--;</span><br><span class="line">L++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(L &gt; l)&#123;</span><br><span class="line">L--;</span><br><span class="line">v[a[L]]++;</span><br><span class="line"><span class="keyword">if</span>(v[a[L]] == <span class="number">1</span>) ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(R &lt; r)&#123;</span><br><span class="line">R++;</span><br><span class="line">v[a[R]]++;</span><br><span class="line"><span class="keyword">if</span>(v[a[R]] == <span class="number">1</span>) ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(R &gt; r)&#123;</span><br><span class="line">v[a[R]]--;</span><br><span class="line"><span class="keyword">if</span>(v[a[R]] == <span class="number">0</span>) ans--;</span><br><span class="line">R--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(alt[time+<span class="number">1</span>].id &lt; id &amp;&amp; time+<span class="number">1</span> &lt;= altnum)&#123;</span><br><span class="line">time++;</span><br><span class="line"><span class="keyword">int</span> altpos = alt[time].pos;</span><br><span class="line"><span class="keyword">int</span> alttar = alt[time].tar;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= altpos &amp;&amp; altpos &lt;= R)&#123;</span><br><span class="line">v[a[altpos]]--;</span><br><span class="line"><span class="keyword">if</span>(v[a[altpos]] == <span class="number">0</span>) ans--;</span><br><span class="line"><span class="built_in">swap</span>(a[altpos],alt[time].tar);</span><br><span class="line">v[a[altpos]]++;</span><br><span class="line"><span class="keyword">if</span>(v[a[altpos]] == <span class="number">1</span>) ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">swap</span>(a[altpos],alt[time].tar);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(alt[time].id &gt; id)&#123;</span><br><span class="line"><span class="keyword">int</span> altpos = alt[time].pos;</span><br><span class="line"><span class="keyword">int</span> alttar = alt[time].tar;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= altpos &amp;&amp; altpos &lt;= R)&#123;</span><br><span class="line">v[a[altpos]]--;</span><br><span class="line"><span class="keyword">if</span>(v[a[altpos]] == <span class="number">0</span>) ans--;</span><br><span class="line"><span class="built_in">swap</span>(a[altpos],alt[time].tar);</span><br><span class="line">v[a[altpos]]++;</span><br><span class="line"><span class="keyword">if</span>(v[a[altpos]] == <span class="number">1</span>) ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">swap</span>(a[altpos],alt[time].tar);</span><br><span class="line">&#125;</span><br><span class="line">time--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ac[ask[i].id] = ans;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(ac[i])&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分块 </tag>
            
            <tag> 莫队 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组】SPOJ D-query</title>
      <link href="/2021/05/07/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91SPOJ%20D-query/"/>
      <url>/2021/05/07/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91SPOJ%20D-query/</url>
      
        <content type="html"><![CDATA[<h1 id="——"><a href="#——" class="headerlink" title="——-"></a>——-</h1><p><a href="https://vjudge.net/problem/SPOJ-DQUERY" target="_blank">题链</a></p><p>对于每一个$a[i]$可以记录它上一次出现的位置；</p><p>$1.$可以用树状数组解（离线）：对询问排序（询问的$r$从小到大），右指针移动则$add(R,1)$，然后对$a[R]$上一次出现的位置$add(pos,-1)$，对于一个询问则是$query(r)-query(l-1)$；</p><p>$2.$可以主席树记录原数组下标方式解（在线）：对于新加入的$a[i]$，在$i$这个位置$+1$，在$a[i]$上一次出现的位置$-1$，对于主席树的每一棵树$p[root]$就是$[1,r]$的种类数，对于每一个询问$[l,r]$，就是先得知插入$r$的版本号$root$，在这一棵树上求$[l,r]$的权值和；</p><p>$3.$可以主席树记录权值（在线）：对于每一个元素$a[i]$，记录这个元素下一次出现的位置$aft[i]$，对$aft[i]$建立主席树，此时问题就变成在$[l,r]$范围内查找大于$r$的数字个数。对于新加入的一个$aft[i]$，新建树链在$aft[i]$这个权值点$++$，询问就是普通主席树询问方式；</p><h1 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h1><p>$1.$可以用树状数组解（离线）：对询问排序（询问的$r$从小到大），右指针移动则$add(R,1)$，然后对$a[R]$上一次出现的位置$add(pos,-1)$，对于一个询问则是$query(r)-query(l-1)$；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ext/pb_ds/priority_queue.hpp&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL pos,l,r;</span><br><span class="line">&#125;cp[MS];</span><br><span class="line">LL ac[MS];</span><br><span class="line">LL a[MS];</span><br><span class="line">LL p[MS];</span><br><span class="line">LL lapos[MS]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">LL x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>) f = <span class="number">-1</span>;</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">x = (x&lt;&lt;<span class="number">1</span>) + (x&lt;&lt;<span class="number">3</span>) + (ch^<span class="number">48</span>);</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">lowbit</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a.r == b.r) <span class="keyword">return</span> a.l &lt; b.l;</span><br><span class="line"><span class="keyword">return</span> a.r &lt; b.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(LL pos,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=n;pos+=<span class="built_in">lowbit</span>(pos)) p[pos] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(LL pos)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos)) ans += p[pos];</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i] = <span class="built_in">read</span>();</span><br><span class="line">m = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cp[i].l = <span class="built_in">read</span>();</span><br><span class="line">cp[i].r = <span class="built_in">read</span>();</span><br><span class="line">cp[i].pos = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(cp+<span class="number">1</span>,cp+m+<span class="number">1</span>,cmp);</span><br><span class="line">LL apos = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(;apos&lt;=cp[i].r;apos++)&#123;</span><br><span class="line"><span class="keyword">if</span>(lapos[a[apos]])</span><br><span class="line"><span class="built_in">add</span>(lapos[a[apos]],<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">add</span>(apos,<span class="number">1</span>);</span><br><span class="line">lapos[a[apos]] = apos;</span><br><span class="line">&#125;</span><br><span class="line">ac[cp[i].pos] = <span class="built_in">get_sum</span>(cp[i].r) - <span class="built_in">get_sum</span>(cp[i].l<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h1><p>$2.$可以主席树记录原数组下标方式解（在线）：对于新加入的$a[i]$，在$i$这个位置$+1$，在$a[i]$上一次出现的位置$-1$，对于主席树的每一棵树$p[root]$就是$[1,r]$的种类数，对于每一个询问$[l,r]$，就是先得知插入$r$的版本号$root$，在这一棵树上求$[l,r]$的权值和；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 20000000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,val;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="keyword">int</span> pre[MS];</span><br><span class="line"><span class="keyword">int</span> rtpos[MS*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>) f = <span class="number">-1</span>;</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">x = (x&lt;&lt;<span class="number">1</span>) + (x&lt;&lt;<span class="number">3</span>) + (ch^<span class="number">48</span>);</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> rt;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[rt].l = <span class="built_in">build</span>(l,m);</span><br><span class="line">p[rt].r = <span class="built_in">build</span>(m+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].val = p[p[rt].l].val + p[p[rt].r].val;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> lart,<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line">p[rt] = p[lart];</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].val += val;</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) p[rt].l = <span class="built_in">update</span>(p[lart].l,pos,l,m,val);</span><br><span class="line"><span class="keyword">else</span> p[rt].r = <span class="built_in">update</span>(p[lart].r,pos,m+<span class="number">1</span>,r,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R) <span class="keyword">return</span> p[rt].val;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">query</span>(p[rt].l,L,R,l,m);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">query</span>(p[rt].r,L,R,m+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">a[i] = <span class="built_in">read</span>(); </span><br><span class="line">&#125;</span><br><span class="line">rtpos[<span class="number">0</span>] = <span class="built_in">build</span>(<span class="number">1</span>,n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(pre[a[i]] == <span class="number">0</span>)&#123;</span><br><span class="line">rtpos[i] = <span class="built_in">update</span>(rtpos[i<span class="number">-1</span>],i,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> tmp = <span class="built_in">update</span>(rtpos[i<span class="number">-1</span>],pre[a[i]],<span class="number">1</span>,n,<span class="number">-1</span>);</span><br><span class="line">rtpos[i] = <span class="built_in">update</span>(tmp,i,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">pre[a[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line">m = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">l = <span class="built_in">read</span>();</span><br><span class="line">r = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">query</span>(rtpos[r],l,r,<span class="number">1</span>,n));</span><br><span class="line"><span class="comment">//cout &lt;&lt; query(rtpos[r],l,r,1,n) &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h1><p>$3.$可以主席树记录权值（在线）：对于每一个元素$a[i]$，记录这个元素下一次出现的位置$aft[i]$，对$aft[i]$建立主席树，此时问题就变成在$[l,r]$范围内查找大于$r$的数字个数。对于新加入的一个$aft[i]$，新建树链在$aft[i]$这个权值点$++$，询问就是普通主席树询问方式；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 20000000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,val;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"><span class="keyword">int</span> aft[MS];</span><br><span class="line"><span class="keyword">int</span> pre[MS];</span><br><span class="line"><span class="keyword">int</span> rtpos[MS];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> rt;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[rt].l = <span class="built_in">build</span>(l,m);</span><br><span class="line">p[rt].r = <span class="built_in">build</span>(m+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].val = p[p[rt].l].val + p[p[rt].r].val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> lart,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line">p[rt] = p[lart];</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].val++;</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(pos &lt;= m) p[rt].l = <span class="built_in">update</span>(p[lart].l,l,m,pos);</span><br><span class="line"><span class="keyword">else</span> p[rt].r = <span class="built_in">update</span>(p[lart].r,m+<span class="number">1</span>,r,pos);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> tar)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> p[R].val-p[L].val;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(tar &lt;= m)&#123;</span><br><span class="line"><span class="keyword">int</span> x = p[p[R].r].val - p[p[L].r].val;</span><br><span class="line">ans += x + <span class="built_in">query</span>(p[L].l,p[R].l,l,m,tar);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">ans += <span class="built_in">query</span>(p[L].r,p[R].r,m+<span class="number">1</span>,r,tar);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">if</span>(pre[a[i]]) aft[pre[a[i]]] = i;</span><br><span class="line">pre[a[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!aft[i]) aft[i] = n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rtpos[<span class="number">0</span>] = <span class="built_in">build</span>(<span class="number">1</span>,n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">rtpos[i] = <span class="built_in">update</span>(rtpos[i<span class="number">-1</span>],<span class="number">1</span>,n+<span class="number">1</span>,aft[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(rtpos[l<span class="number">-1</span>],rtpos[r],<span class="number">1</span>,n+<span class="number">1</span>,r+<span class="number">1</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主席树 </tag>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组 莫队】2019CCPC湖南全国邀请赛 C - Chika and Friendly Pairs</title>
      <link href="/2021/05/06/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%20%E8%8E%AB%E9%98%9F%E3%80%912019CCPC%E6%B9%96%E5%8D%97%E5%85%A8%E5%9B%BD%E9%82%80%E8%AF%B7%E8%B5%9B%20C%20-%20Chika%20and%20Friendly%20Pairs/"/>
      <url>/2021/05/06/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%20%E8%8E%AB%E9%98%9F%E3%80%912019CCPC%E6%B9%96%E5%8D%97%E5%85%A8%E5%9B%BD%E9%82%80%E8%AF%B7%E8%B5%9B%20C%20-%20Chika%20and%20Friendly%20Pairs/</url>
      
        <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6534" target="_blank">题链</a></p><p>给你一个长度为$n$的序列，有$m$次查询操作，每次查询$[L,R]$区间的友好对的个数。</p><p>友好对的定义：满足$i$ &lt; $j$,且$|a_i-a_j|&lt;=K$。</p><p>考虑每添加一个元素，计算该元素范围内$[x-k,x+k]$有多少个数（对树状数组来一发询问即可 $query(r) - query(l-1)$ ），加上该贡献；</p><p>离散所给数组，将$a[i]-k$和$a[i]+k$也加入，也离散；</p><p>用树状数组以及莫队解决</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 27009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 20000000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS*<span class="number">3</span>]; </span><br><span class="line">LL a[MS];</span><br><span class="line">LL b[MS*<span class="number">3</span>],tb;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,id;</span><br><span class="line">&#125;ask[MS];</span><br><span class="line">LL unit;</span><br><span class="line">LL ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> pos,posl,posr;</span><br><span class="line">&#125;apos[MS];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">lowbit</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t1.l/unit == t2.l/unit) <span class="keyword">return</span> t1.r &lt; t2.r;</span><br><span class="line"><span class="keyword">return</span> t1.l/unit &lt; t2.l/unit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getposb</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+tb+<span class="number">1</span>,x)-b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> pos,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=tb;pos+=<span class="built_in">lowbit</span>(pos)) p[pos] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">getnum</span><span class="params">(<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line">LL ansl = <span class="number">0</span>;</span><br><span class="line">LL ansr = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> posl = apos[pos].posl<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> posr = apos[pos].posr;</span><br><span class="line"><span class="keyword">for</span>(;posl&gt;<span class="number">0</span>;posl-=<span class="built_in">lowbit</span>(posl)) ansl += p[posl];</span><br><span class="line"><span class="keyword">for</span>(;posr&gt;<span class="number">0</span>;posr-=<span class="built_in">lowbit</span>(posr)) ansr += p[posr];</span><br><span class="line"><span class="keyword">return</span> ansr - ansl - <span class="number">1ll</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">b[++tb] = a[i];</span><br><span class="line"><span class="keyword">if</span>(a[i]-k&gt;<span class="number">0</span>) b[++tb] = a[i]-k;</span><br><span class="line">b[++tb] = a[i]+k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+tb+<span class="number">1</span>);</span><br><span class="line">LL h = tb;</span><br><span class="line">tb = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=h;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(b[i] != b[i<span class="number">-1</span>]) b[++tb] = b[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> pos = <span class="built_in">getposb</span>(a[i]);</span><br><span class="line"><span class="keyword">int</span> posl = <span class="built_in">getposb</span>(a[i]-k);</span><br><span class="line"><span class="keyword">int</span> posr = <span class="built_in">getposb</span>(a[i]+k);</span><br><span class="line">apos[i] = &#123;pos,posl,posr&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">ask[i] = &#123;l,r,i&#125;;</span><br><span class="line">&#125;</span><br><span class="line">unit = <span class="built_in">sqrt</span>(n);</span><br><span class="line"><span class="built_in">sort</span>(ask+<span class="number">1</span>,ask+m+<span class="number">1</span>,cmp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> L = <span class="number">1</span>,R = <span class="number">0</span>;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l = ask[i].l;</span><br><span class="line"><span class="keyword">int</span> r = ask[i].r;</span><br><span class="line"><span class="keyword">while</span>(L &lt; l)&#123;</span><br><span class="line">ans -= <span class="built_in">getnum</span>(L);</span><br><span class="line"><span class="built_in">add</span>(apos[L].pos,<span class="number">-1</span>);</span><br><span class="line">L++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(L &gt; l)&#123;</span><br><span class="line">L--;</span><br><span class="line"><span class="built_in">add</span>(apos[L].pos,<span class="number">1</span>);</span><br><span class="line">ans += <span class="built_in">getnum</span>(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(R &lt; r)&#123;</span><br><span class="line">R++;</span><br><span class="line"><span class="built_in">add</span>(apos[R].pos,<span class="number">1</span>);</span><br><span class="line">ans += <span class="built_in">getnum</span>(R);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(R &gt; r)&#123;</span><br><span class="line">ans -= <span class="built_in">getnum</span>(R);</span><br><span class="line"><span class="built_in">add</span>(apos[R].pos,<span class="number">-1</span>);</span><br><span class="line">R--;</span><br><span class="line">&#125;</span><br><span class="line">ac[ask[i].id] = ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 莫队 </tag>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【最小生成树】洛谷 P3366 【模板】最小生成树</title>
      <link href="/2021/04/15/ACM/%E3%80%90%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3366%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
      <url>/2021/04/15/ACM/%E3%80%90%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3366%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3366" target="_blank">题链</a></p><h2 id="Kruskal"><a href="#Kruskal" class="headerlink" title="$Kruskal$"></a>$Kruskal$</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 200009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 0x3f3f3f3f</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v,val;</span><br><span class="line">&#125;p[MS];</span><br><span class="line"><span class="keyword">int</span> fa[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x == fa[x]) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">fa[<span class="built_in">find</span>(y)] = <span class="built_in">find</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node t1,node t2)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> t1.val &lt; t2.val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) fa[i] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i].u &gt;&gt; p[i].v &gt;&gt; p[i].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(p+<span class="number">1</span>,p+m+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">find</span>(p[i].u) != <span class="built_in">find</span>(p[i].v))&#123;</span><br><span class="line"><span class="built_in">merge</span>(p[i].u,p[i].v);</span><br><span class="line">ans += p[i].val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">find</span>(i) != <span class="built_in">find</span>(<span class="number">1</span>)) flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;orz\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Prim"><a href="#Prim" class="headerlink" title="$Prim$"></a>$Prim$</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 5009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 0x3f3f3f3f</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> to,val;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node &gt; vc[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> poi,val;</span><br><span class="line">&#125;;</span><br><span class="line">priority_queue&lt;nod &gt; Q;</span><br><span class="line"><span class="keyword">int</span> dis[MS];</span><br><span class="line"><span class="keyword">int</span> v[MS];</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (nod t1,nod t2)&#123;</span><br><span class="line"><span class="keyword">return</span> t1.val &gt; t2.val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v,w;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(&#123;v,w&#125;);</span><br><span class="line">vc[v].<span class="built_in">push_back</span>(&#123;u,w&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dis[i] = MAXN;</span><br><span class="line">dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">Q.<span class="built_in">push</span>(&#123;<span class="number">1</span>,<span class="number">0</span>&#125;);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">nod x = Q.<span class="built_in">top</span>();</span><br><span class="line">Q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span>(v[x.poi]) <span class="keyword">continue</span>;</span><br><span class="line">v[x.poi] = <span class="number">1</span>;</span><br><span class="line">ans += x.val; <span class="comment">// 答案 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;it:vc[x.poi])&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[it.to] &gt; it.val)&#123; <span class="comment">// 相比 Dijkstra 少了源点到 x.poi 的距离 </span></span><br><span class="line">dis[it.to] = it.val;</span><br><span class="line"><span class="keyword">if</span>(!v[it.to])&#123;</span><br><span class="line">Q.<span class="built_in">push</span>(&#123;it.to,dis[it.to]&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
            <tag> 最小生成树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【最短路】洛谷 P1346 电车</title>
      <link href="/2021/04/15/ACM/%E3%80%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E3%80%91%E6%B4%9B%E8%B0%B7%20P1346%20%E7%94%B5%E8%BD%A6/"/>
      <url>/2021/04/15/ACM/%E3%80%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E3%80%91%E6%B4%9B%E8%B0%B7%20P1346%20%E7%94%B5%E8%BD%A6/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1346" target="_blank">题链</a></p><p>$floyd$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 0x3f3f3f3f</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> st,ed;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">109</span>][<span class="number">109</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; st &gt;&gt; ed;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++) &#123;</span><br><span class="line">p[i][j] = MAXN;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) p[i][i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">1</span>) p[i][x] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> p[i][x] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++) &#123;</span><br><span class="line">p[i][j] = <span class="built_in">min</span>(p[i][j],p[i][k]+p[k][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(p[st][ed] == MAXN) cout &lt;&lt; <span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; p[st][ed] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
            <tag> 最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【最短路】洛谷 P4779 【模板】单源最短路径（标准版）</title>
      <link href="/2021/04/15/ACM/%E3%80%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E3%80%91%E6%B4%9B%E8%B0%B7%20P4779%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%EF%BC%88%E6%A0%87%E5%87%86%E7%89%88%EF%BC%89/"/>
      <url>/2021/04/15/ACM/%E3%80%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E3%80%91%E6%B4%9B%E8%B0%B7%20P4779%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%EF%BC%88%E6%A0%87%E5%87%86%E7%89%88%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4779" target="_blank">题链</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2147483647</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> st;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> to,val;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node &gt; vc[MS];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> poi,val;</span><br><span class="line">&#125;;</span><br><span class="line">priority_queue&lt;nod &gt; Q;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (nod t1,nod t2)&#123;</span><br><span class="line"><span class="keyword">return</span> t1.val &gt; t2.val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> dis[MS];</span><br><span class="line"><span class="keyword">bool</span> v[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// 除了源点，其余初值为 MAXN </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">v[i] = <span class="number">0</span>;</span><br><span class="line">dis[i] = MAXN;</span><br><span class="line">&#125; </span><br><span class="line">dis[st] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">Q.<span class="built_in">push</span>(&#123;st,<span class="number">0</span>&#125;);</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123; <span class="comment">// 选定权值最小的点，松弛其指向的点 </span></span><br><span class="line">nod x = Q.<span class="built_in">top</span>();</span><br><span class="line">Q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span>(v[x.poi]) <span class="keyword">continue</span>; </span><br><span class="line">v[x.poi] = <span class="number">1</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;it:vc[x.poi])&#123; <span class="comment">//松弛 </span></span><br><span class="line"><span class="keyword">if</span>(dis[it.to] &gt; dis[x.poi] + it.val)&#123;</span><br><span class="line">dis[it.to] = dis[x.poi] + it.val;</span><br><span class="line"><span class="keyword">if</span>(!v[it.to])&#123; <span class="comment">// 未被访问 </span></span><br><span class="line">Q.<span class="built_in">push</span>(&#123;it.to,dis[it.to]&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; st;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v,w;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(&#123;v,w&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">dijkstra</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cout &lt;&lt; dis[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
            <tag> 最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【最短路】洛谷 P3371 【模板】单源最短路径（弱化版）</title>
      <link href="/2021/04/15/ACM/%E3%80%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E3%80%91%E6%B4%9B%E8%B0%B7%20P3371%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%EF%BC%88%E5%BC%B1%E5%8C%96%E7%89%88%EF%BC%89/"/>
      <url>/2021/04/15/ACM/%E3%80%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E3%80%91%E6%B4%9B%E8%B0%B7%20P3371%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%EF%BC%88%E5%BC%B1%E5%8C%96%E7%89%88%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3371" target="_blank">题链</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 10009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2147483647</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> st;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> to,val;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node &gt; vc[MS];</span><br><span class="line"><span class="keyword">int</span> dis[MS];</span><br><span class="line"><span class="keyword">bool</span> v[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// 除了源点，其余初值为 MAXN </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">v[i] = <span class="number">0</span>;</span><br><span class="line">dis[i] = MAXN;</span><br><span class="line">&#125; </span><br><span class="line">dis[st] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(!v[st])&#123;</span><br><span class="line"><span class="keyword">int</span> minn = MAXN;</span><br><span class="line">v[st] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i:vc[st])&#123; <span class="comment">// 松弛 </span></span><br><span class="line"><span class="keyword">if</span>(!v[i.to] &amp;&amp; dis[st]+i.val &lt; dis[i.to])&#123;</span><br><span class="line">dis[i.to] = dis[st] + i.val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123; <span class="comment">// 取未被访问的最近的点 </span></span><br><span class="line"><span class="keyword">if</span>(!v[i] &amp;&amp; dis[i] &lt; minn)&#123;</span><br><span class="line">minn = dis[i];</span><br><span class="line">st = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; st;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> u,v,w;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">vc[u].<span class="built_in">push_back</span>(&#123;v,w&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">dijkstra</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cout &lt;&lt; dis[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
            <tag> 最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【主席树】2021 ICPC 昆明 M.Stone Games</title>
      <link href="/2021/04/12/ACM/%E3%80%90%E4%B8%BB%E5%B8%AD%E6%A0%91%E3%80%912021%20ICPC%20%E6%98%86%E6%98%8E%20M.Stone%20Games/"/>
      <url>/2021/04/12/ACM/%E3%80%90%E4%B8%BB%E5%B8%AD%E6%A0%91%E3%80%912021%20ICPC%20%E6%98%86%E6%98%8E%20M.Stone%20Games/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img2020.cnblogs.com/blog/2062718/202104/2062718-20210412181419317-790440584.png"></p><p><img src="https://img2020.cnblogs.com/blog/2062718/202104/2062718-20210412181434210-69591723.png"></p><p><img src="https://img2020.cnblogs.com/blog/2062718/202104/2062718-20210412181643354-526938537.png"></p><p>答案是对着这段区间 $[L,R]$ 不断询问直到不存在 $x+1$ 得来的；</p><p>例如一个区间有为 $1，2，4，4$；</p><p>首先询问 $1$，发现存在 $1$，$ans = 1$；</p><p>然后询问 $ans+1 = 2$，发现存在 $2$，则 $[1,3]$ 都能凑出，$ans = 3$；</p><p>接着询问 $ans+1 = 4$，发现存在两个 $4$，则 $[1,11]$ 都能凑出，$ans = 11$；</p><p>实际上 “发现存在” 这一步操作就是查找区间 $[1,ans+1]$ 的和 $sum$ 为多少，然后更新 $ans = sum$；</p><p>答案就是 $++ans$；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000000000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"><span class="keyword">int</span> rtpos[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">LL val;</span><br><span class="line">&#125;p[MS*<span class="number">40</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].val = p[p[rt].l].val + p[p[rt].r].val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> lart,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line">p[rt] = p[lart];</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">p[rt].val += pos;</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) p[rt].l = <span class="built_in">update</span>(p[lart].l,l,m,pos);</span><br><span class="line"><span class="keyword">else</span> p[rt].r = <span class="built_in">update</span>(p[lart].r,m+<span class="number">1</span>,r,pos);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">getsum</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL tar)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> p[R].val - p[L].val;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= tar) <span class="keyword">return</span> <span class="built_in">getsum</span>(p[L].l,p[R].l,l,m,tar);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> p[p[R].l].val - p[p[L].l].val + <span class="built_in">getsum</span>(p[L].r,p[R].r,m+<span class="number">1</span>,r,tar);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">rtpos[i] = <span class="built_in">update</span>(rtpos[i<span class="number">-1</span>],<span class="number">1</span>,MAXN,x);</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> L,R;</span><br><span class="line">cin &gt;&gt; L &gt;&gt; R;</span><br><span class="line">L = (L+ans)%n+<span class="number">1</span>;</span><br><span class="line">R = (R+ans)%n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(L &gt; R) <span class="built_in">swap</span>(L,R);</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">LL tmp = <span class="built_in">getsum</span>(rtpos[L<span class="number">-1</span>],rtpos[R],<span class="number">1</span>,MAXN,ans+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(tmp == ans) <span class="keyword">break</span>;</span><br><span class="line">ans = tmp;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ++ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主席树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【主席树】洛谷 P2468 粟粟的书架</title>
      <link href="/2021/04/12/ACM/%E3%80%90%E4%B8%BB%E5%B8%AD%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P2468%20%E7%B2%9F%E7%B2%9F%E7%9A%84%E4%B9%A6%E6%9E%B6/"/>
      <url>/2021/04/12/ACM/%E3%80%90%E4%B8%BB%E5%B8%AD%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P2468%20%E7%B2%9F%E7%B2%9F%E7%9A%84%E4%B9%A6%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2468" target="_blank">题链</a></p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><h2 id="前50-的数据"><a href="#前50-的数据" class="headerlink" title="前50%的数据"></a>前50%的数据</h2><p>$val[i][j][k]$ 表示 $[1,1]$<del>$[i,j]$ 大于等于 $k$ 的值 的总和；<br>$size[i][j][k]$ 表示 $[1,1]$</del>$[i,j]$ 大于等于 $k$ 的值 的个数；<br>在 $[1,1000]$ 之内二分查找；</p><h2 id="后50-的数据"><a href="#后50-的数据" class="headerlink" title="后50%的数据"></a>后50%的数据</h2><p>建立主席树（可持久化权值线段树），节点信息除了左右子节点还有 区间个数$size$ 与 区间和$val$;<br>当插入一个值 $pos$ 时，递归到末节点，$size++$，$val+=pos$；</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>若所给数字都是没有重复的，那查找就很好做；<br>但是题目说明有重复，假设题给目标值 $tar$，应当查找在所给区间从大到小选择数字，一选就是一打（一打意思就是选择一个数字 $num$，无论 $num$ 有几个都选上），选择直到刚刚好小于目标值，再选一个就超过目标值了；<br>记录现在已经选的数字总和 $sum$，数字个数 $size$，最小数字 $minn$ 和 再选择一个数字 $num$ 就超过题给目标值；<br>由于 $num$ 可能不止一个，所以得一次次选择 $num$ 直到达到目标值；  </p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 20000009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"><span class="keyword">int</span> rtpos[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line"><span class="keyword">int</span> size;</span><br><span class="line">&#125;p[MS*<span class="number">30</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].size = p[p[rt].l].size + p[p[rt].r].size;</span><br><span class="line">p[rt].val = p[p[rt].l].val + p[p[rt].r].val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[rt].l = <span class="built_in">build</span>(l,m);</span><br><span class="line">p[rt].r = <span class="built_in">build</span>(m+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> lart,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line">p[rt] = p[lart];</span><br><span class="line"><span class="keyword">if</span>(l == r &amp;&amp; l == pos)&#123;</span><br><span class="line">p[rt].size++;</span><br><span class="line">p[rt].val += pos;</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) p[rt].l = <span class="built_in">update</span>(p[lart].l,l,m,pos);</span><br><span class="line"><span class="keyword">else</span> p[rt].r = <span class="built_in">update</span>(p[lart].r,m+<span class="number">1</span>,r,pos);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getCnt</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> tar)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line"><span class="keyword">if</span>(tar &gt; <span class="number">0</span>) <span class="keyword">return</span> (tar<span class="number">-1</span>)/l+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> x = p[p[R].r].val - p[p[L].r].val;</span><br><span class="line"><span class="keyword">int</span> y = p[p[R].r].size - p[p[L].r].size;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x &gt;= tar) <span class="keyword">return</span> <span class="built_in">getCnt</span>(p[L].r,p[R].r,m+<span class="number">1</span>,r,tar);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> y + <span class="built_in">getCnt</span>(p[L].l,p[R].l,l,m,tar-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve1</span><span class="params">()</span></span>&#123;</span><br><span class="line">rtpos[<span class="number">0</span>] = <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1000</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">rtpos[i] = <span class="built_in">update</span>(rtpos[i<span class="number">-1</span>],<span class="number">1</span>,<span class="number">1000</span>,x);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line"><span class="keyword">int</span> L,R;</span><br><span class="line"><span class="keyword">int</span> tar;</span><br><span class="line">cin &gt;&gt; L &gt;&gt; L &gt;&gt; R &gt;&gt; R &gt;&gt; tar;</span><br><span class="line">L = rtpos[L<span class="number">-1</span>];</span><br><span class="line">R = rtpos[R];</span><br><span class="line"><span class="keyword">if</span>(p[R].val - p[L].val &lt; tar) cout &lt;&lt; <span class="string">&quot;Poor QLW\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="built_in">getCnt</span>(L,R,<span class="number">1</span>,<span class="number">1000</span>,tar) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">209</span>][<span class="number">209</span>];</span><br><span class="line"><span class="keyword">int</span> val[<span class="number">209</span>][<span class="number">209</span>][<span class="number">1009</span>];</span><br><span class="line"><span class="keyword">int</span> size[<span class="number">209</span>][<span class="number">209</span>][<span class="number">1009</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve2</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">cin &gt;&gt; a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> o=<span class="number">1</span>;o&lt;=<span class="number">1000</span>;o++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">val[i][j][o] = val[i<span class="number">-1</span>][j][o]+val[i][j<span class="number">-1</span>][o]-val[i<span class="number">-1</span>][j<span class="number">-1</span>][o];</span><br><span class="line">val[i][j][o] += (a[i][j] &gt;= o? a[i][j] : <span class="number">0</span>);</span><br><span class="line">size[i][j][o] = size[i<span class="number">-1</span>][j][o]+size[i][j<span class="number">-1</span>][o]-size[i<span class="number">-1</span>][j<span class="number">-1</span>][o];</span><br><span class="line">size[i][j][o] += (a[i][j] &gt;= o? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line"><span class="keyword">int</span> l1,r1,l2,r2;</span><br><span class="line"><span class="keyword">int</span> tar;</span><br><span class="line">cin &gt;&gt; l1 &gt;&gt; r1 &gt;&gt; l2 &gt;&gt; r2 &gt;&gt; tar;</span><br><span class="line"><span class="keyword">int</span> sumlr = val[l2][r2][<span class="number">1</span>]-val[l1<span class="number">-1</span>][r2][<span class="number">1</span>]-val[l2][r1<span class="number">-1</span>][<span class="number">1</span>]+val[l1<span class="number">-1</span>][r1<span class="number">-1</span>][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(sumlr &lt; tar)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Poor QLW\n&quot;</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>,r=<span class="number">1001</span>;</span><br><span class="line"><span class="keyword">int</span> ansval,anssize;</span><br><span class="line"><span class="keyword">int</span> sumval;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line"><span class="keyword">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> x = val[l2][r2][mid]-val[l1<span class="number">-1</span>][r2][mid]-val[l2][r1<span class="number">-1</span>][mid]+val[l1<span class="number">-1</span>][r1<span class="number">-1</span>][mid];</span><br><span class="line"><span class="keyword">int</span> y = size[l2][r2][mid]-size[l1<span class="number">-1</span>][r2][mid]-size[l2][r1<span class="number">-1</span>][mid]+size[l1<span class="number">-1</span>][r1<span class="number">-1</span>][mid];</span><br><span class="line"><span class="keyword">if</span>(x &gt;= tar) l = mid+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">sumval = x;</span><br><span class="line">ansval = mid;</span><br><span class="line">anssize = y;</span><br><span class="line">r = mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">anssize += (tar-sumval<span class="number">-1</span>)/(ansval<span class="number">-1</span>)+<span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; anssize &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">1</span>) <span class="built_in">solve1</span>();</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">solve2</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主席树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】洛谷 P3369 【模板】普通平衡树</title>
      <link href="/2021/04/11/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3369%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%99%AE%E9%80%9A%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
      <url>/2021/04/11/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3369%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%99%AE%E9%80%9A%E5%B9%B3%E8%A1%A1%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p>本题使用动态开点权值线段树…</p><p>数据范围是 $[-1e7,1e7]$ ，所以将其 $+(1e7+1)$ 让范围映射到 $[1,2e7+1]$ ,这样就在 $[1,2e7+1]$ 构建权值线段树，记 $2e7+1$ 为 $MAXN$；</p><p>先考虑前面 $4$ 种操作</p><p>插入和删除操作就是在线段树的叶子节点（递归的最底层）的位置 $+-1$，表示该点的个数，向上 $push_up$ 维护区间 $[L,R]$ 拥有的数字个数</p><p>根据所给数字，这里记作$tar$，求排名：就是求区间 $[1,tar-1]$ 有多少个数字，求出来要记得 $+1$，因为是 $tar$ 的排名</p><p>根据排名求数字，可以通过二分数字，对于每一个数字求排名，这样就可以用到步骤三写的函数</p><p>找前驱后继，这里记 $tar$ 为所要找的数字：</p><p>  除了以上维护的区间数字个数 $cnt$，再维护两个信息区间最大值 $maxn$ 和区间最小值 $minn$</p><p>  找前驱就是 $[1,tar-1]$ 找一个最大值，找后继就是 $[tar+1,MAXN]$ 找一个最小值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 20000009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"><span class="keyword">int</span> root;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> maxn,minn;</span><br><span class="line">&#125;p[MS*<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> &amp;rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!p[rt].l &amp;&amp; !p[rt].r)&#123; <span class="comment">// 无左右子节点，删除本节点 </span></span><br><span class="line">rt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!p[rt].l)&#123; <span class="comment">// 无左节点 </span></span><br><span class="line">p[rt].maxn = p[p[rt].r].maxn;</span><br><span class="line">p[rt].minn = p[p[rt].r].minn;</span><br><span class="line">p[rt].cnt = p[p[rt].r].cnt;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!p[rt].r)&#123; <span class="comment">// 无右节点 </span></span><br><span class="line">p[rt].maxn = p[p[rt].l].maxn;</span><br><span class="line">p[rt].minn = p[p[rt].l].minn;</span><br><span class="line">p[rt].cnt = p[p[rt].l].cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123; <span class="comment">// 左右节点都存在  </span></span><br><span class="line">p[rt].maxn = <span class="built_in">max</span>(p[p[rt].l].maxn,p[p[rt].r].maxn);</span><br><span class="line">p[rt].minn = <span class="built_in">min</span>(p[p[rt].l].minn,p[p[rt].r].minn);</span><br><span class="line">p[rt].cnt = p[p[rt].l].cnt + p[p[rt].r].cnt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> &amp;rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt) rt = ++tot; <span class="comment">// 动态开点 </span></span><br><span class="line"><span class="keyword">if</span>(l == r &amp;&amp; l == pos)&#123; </span><br><span class="line">p[rt].cnt += val; <span class="comment">// val对应 +-1 表示插入或删除 </span></span><br><span class="line"><span class="keyword">if</span>(p[rt].cnt &gt; <span class="number">0</span>) <span class="comment">// 本节点存在值 </span></span><br><span class="line">p[rt].maxn = p[rt].minn = l;</span><br><span class="line"><span class="keyword">else</span> rt = <span class="number">0</span>; <span class="comment">// 删除  </span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">update</span>(p[rt].l,l,m,pos,val);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(p[rt].r,m+<span class="number">1</span>,r,pos,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getRank</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123; <span class="comment">// 其实就是求 [L,R] 存在的节点总和 </span></span><br><span class="line"><span class="keyword">if</span>(!rt) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 不存在该节点 </span></span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt].cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">getRank</span>(L,R,l,m,p[rt].l);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">getRank</span>(L,R,m+<span class="number">1</span>,r,p[rt].r);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getFront</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123; <span class="comment">// 就是求 [L,R] 最大值 </span></span><br><span class="line"><span class="keyword">if</span>(!rt) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 不存在该节点 </span></span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt].maxn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">max</span>(ans,<span class="built_in">getFront</span>(L,R,l,m,p[rt].l)); </span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">max</span>(ans,<span class="built_in">getFront</span>(L,R,m+<span class="number">1</span>,r,p[rt].r));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLater</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123; <span class="comment">//  就是求 [L,R] 最小值 </span></span><br><span class="line"><span class="keyword">if</span>(!rt) <span class="keyword">return</span> MAXN; <span class="comment">// 不存在该节点 </span></span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt].minn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = MAXN;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">min</span>(ans,<span class="built_in">getLater</span>(L,R,l,m,p[rt].l));</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">min</span>(ans,<span class="built_in">getLater</span>(L,R,m+<span class="number">1</span>,r,p[rt].r));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line"><span class="keyword">int</span> op,tar,rank;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; tar;</span><br><span class="line">rank = tar;</span><br><span class="line">tar += <span class="number">10000001</span>; <span class="comment">// [1,2e7+1]</span></span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">update</span>(root,<span class="number">1</span>,MAXN,tar,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">update</span>(root,<span class="number">1</span>,MAXN,tar,<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">3</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(tar == <span class="number">1</span>) cout &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="built_in">getRank</span>(<span class="number">1</span>,tar<span class="number">-1</span>,<span class="number">1</span>,MAXN,root)+<span class="number">1</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">4</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>,r=<span class="number">20000001</span>;</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line"><span class="keyword">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> num = <span class="built_in">getRank</span>(<span class="number">1</span>,mid,<span class="number">1</span>,MAXN,root);</span><br><span class="line"><span class="keyword">if</span>(num &gt;= rank) ans = mid ,r = mid<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> l = mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans<span class="number">-10000001</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">5</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="built_in">getFront</span>(<span class="number">1</span>,tar<span class="number">-1</span>,<span class="number">1</span>,MAXN,root);</span><br><span class="line">cout &lt;&lt; ans<span class="number">-10000001</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">6</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="built_in">getLater</span>(tar+<span class="number">1</span>,MAXN,<span class="number">1</span>,MAXN,root);</span><br><span class="line">cout &lt;&lt; ans<span class="number">-10000001</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 关于各函数调用： </span></span><br><span class="line"><span class="comment">// rt位置，一定要填 root，而不是单纯的 1；</span></span><br><span class="line"><span class="comment">// 因为当一个数插入又删除导致整棵树为空后，再次插入时树根节点不再是 1 </span></span><br><span class="line"><span class="comment">// 相当于之前的空树都不要了； </span></span><br><span class="line"><span class="comment">// root 始终指向线段树的根节点；</span></span><br><span class="line"><span class="comment">// 每一次树空了 root就会变化； </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input： </span></span><br><span class="line"><span class="comment">20</span></span><br><span class="line"><span class="comment">1 9508226</span></span><br><span class="line"><span class="comment">1 -9775935</span></span><br><span class="line"><span class="comment">2 9508226</span></span><br><span class="line"><span class="comment">2 -9775935</span></span><br><span class="line"><span class="comment">1 -6414629</span></span><br><span class="line"><span class="comment">3 -6414629</span></span><br><span class="line"><span class="comment">2 -6414629</span></span><br><span class="line"><span class="comment">1 -1847925</span></span><br><span class="line"><span class="comment">5 3248500</span></span><br><span class="line"><span class="comment">2 -1847925</span></span><br><span class="line"><span class="comment">1 -2757289</span></span><br><span class="line"><span class="comment">1 -7942063</span></span><br><span class="line"><span class="comment">1 -5545399</span></span><br><span class="line"><span class="comment">2 -7942063</span></span><br><span class="line"><span class="comment">1 6169408</span></span><br><span class="line"><span class="comment">5 -648755</span></span><br><span class="line"><span class="comment">1 -275474</span></span><br><span class="line"><span class="comment">1 -9836404</span></span><br><span class="line"><span class="comment">1 -3389358</span></span><br><span class="line"><span class="comment">1 -8467606</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output：</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">-1847925</span></span><br><span class="line"><span class="comment">-2757289</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】求逆序对</title>
      <link href="/2021/04/11/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/"/>
      <url>/2021/04/11/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/</url>
      
        <content type="html"><![CDATA[<p>普通线段树是预先处理出值域的范围。像二叉树一样建树，有时通过将所给序列离线离散化以减小普通线段树的值域。</p><p>当所给序列不允许离线而且值域比较大时，动态开点线段树可以 $O(nlogm)$ 维护线段树，$m$ 是值域，假象一开始有一颗 $[1,m]$的线段树，当然是不去建它的。</p><p>对于普通线段树都有修改操作，则如将 $a[x]$ 加上 $val$，$x$ 对应原数组下标，就去递归这颗 $[1,m]$ 的线段树直到下标 $x$，只有递归过程中碰到未建立的节点就新建节点。</p><p>例如求逆序对：</p><p><a href="https://www.luogu.com.cn/problem/P1908" target="_blank">题链</a></p><p>一步步遍历所给序列 $a[x]$，将 $[1,m]$ 的线段树第 $x$ 位上加上 $1$，然后 $push_up$，每一步都求当前 $a[x]$ 前面有几个比 $a[x]$ 大的，相当于求线段树上 $[ a[x]+1,m ]$（$m$是值域）的和，递归求解就好。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000000009</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"><span class="keyword">int</span> root;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">LL sum;</span><br><span class="line">&#125;p[MS*<span class="number">40</span>];</span><br><span class="line"><span class="keyword">int</span> a[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].sum = p[p[rt].l].sum + p[p[rt].r].sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> &amp;rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt) rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(l == r &amp;&amp; l == pos)&#123;</span><br><span class="line">p[rt].sum++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) <span class="built_in">update</span>(p[rt].l,l,m,pos);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(p[rt].r,m+<span class="number">1</span>,r,pos);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">get_sum</span>(L,R,l,m,p[rt].l);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">get_sum</span>(L,R,m+<span class="number">1</span>,r,p[rt].r);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line"><span class="built_in">update</span>(root,<span class="number">1</span>,MAXN,a[i]);</span><br><span class="line">ans += <span class="built_in">get_sum</span>(a[i]+<span class="number">1</span>,MAXN,<span class="number">1</span>,MAXN,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【优先队列】洛谷 P2827 蚯蚓</title>
      <link href="/2021/03/31/ACM/%E3%80%90%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E3%80%91%E6%B4%9B%E8%B0%B7%20P2827%20%E8%9A%AF%E8%9A%93/"/>
      <url>/2021/03/31/ACM/%E3%80%90%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E3%80%91%E6%B4%9B%E8%B0%B7%20P2827%20%E8%9A%AF%E8%9A%93/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2827" target="_blank">题链</a></p><p>最长的蚯蚓被砍两截之后，其余的蚯蚓长度会增加，与其加其余蚯蚓不如对这两只蚯蚓操作，可定义一个$buff$表示其余蚯蚓需要增加多少长度，当拿出最长的那只蚯蚓时，就需要加上$buff$，当然被剪断的变成两条就需要减去当前$buff$再压入队列，保证下次拿出来时加上$buff$是应有的长度；</p><p>一个队列存原数组，另外两个队列分别存砍断的蚯蚓的两部分，可知这两个队列是递减的，所以普通队列就行；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//#include&lt;ext/rope&gt;</span></span><br><span class="line"><span class="comment">//using namespace __gnu_cxx;</span></span><br><span class="line"><span class="comment">//#include &lt;ext/pb_ds/priority_queue.hpp&gt;</span></span><br><span class="line"><span class="comment">//using namespace __gnu_pbds;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 7000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod1 39989</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod2 1000000000</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL ac[MS];</span><br><span class="line">LL p[MS];</span><br><span class="line">priority_queue&lt;LL,vector&lt;LL&gt;,less&lt;LL&gt; &gt; QQ;</span><br><span class="line">queue&lt;LL&gt; Q[<span class="number">3</span>];</span><br><span class="line">stack&lt;LL &gt; sta;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">which</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(Q[<span class="number">1</span>].<span class="built_in">empty</span>() &amp;&amp; Q[<span class="number">2</span>].<span class="built_in">empty</span>()) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(!Q[<span class="number">0</span>].<span class="built_in">empty</span>() &amp;&amp; Q[<span class="number">0</span>].<span class="built_in">front</span>() &gt;= <span class="built_in">max</span>(Q[<span class="number">2</span>].<span class="built_in">front</span>(),Q[<span class="number">1</span>].<span class="built_in">front</span>())) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(Q[<span class="number">1</span>].<span class="built_in">front</span>() &gt;= Q[<span class="number">2</span>].<span class="built_in">front</span>()) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">LL num,u,v,t;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; num &gt;&gt; u &gt;&gt; v &gt;&gt; t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(p+<span class="number">1</span>,p+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">Q[<span class="number">0</span>].<span class="built_in">push</span>(p[i]);</span><br><span class="line">&#125;</span><br><span class="line">LL buff = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> wh = <span class="built_in">which</span>();</span><br><span class="line">ac[i] = Q[wh].<span class="built_in">front</span>()+buff;</span><br><span class="line">LL t1 = ac[i]*u/v;</span><br><span class="line">LL t2 = ac[i]-t1;</span><br><span class="line">Q[wh].<span class="built_in">pop</span>();</span><br><span class="line">buff += num;</span><br><span class="line">Q[<span class="number">1</span>].<span class="built_in">push</span>(t2-buff);</span><br><span class="line">Q[<span class="number">2</span>].<span class="built_in">push</span>(t1-buff);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i%t == <span class="number">0</span>) cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">2</span>;i++)</span><br><span class="line"><span class="keyword">while</span>(!Q[i].<span class="built_in">empty</span>())&#123;</span><br><span class="line">QQ.<span class="built_in">push</span>(Q[i].<span class="built_in">front</span>());</span><br><span class="line">Q[i].<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;!QQ.<span class="built_in">empty</span>();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i%t == <span class="number">0</span>) cout &lt;&lt; QQ.<span class="built_in">top</span>()+buff &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">QQ.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优先队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【并查集】洛谷 P4185 MooTube G</title>
      <link href="/2021/03/31/ACM/%E3%80%90%E5%B9%B6%E6%9F%A5%E9%9B%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P4185%20MooTube%20G/"/>
      <url>/2021/03/31/ACM/%E3%80%90%E5%B9%B6%E6%9F%A5%E9%9B%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P4185%20MooTube%20G/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4185" target="_blank">题链</a></p><p>利用并查集，只有当该边的权值大于等于$k$值时才合并；</p><p>将输入扒下来按相关度从大到小排序，一个个更新即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//#include&lt;ext/rope&gt;</span></span><br><span class="line"><span class="comment">//using namespace __gnu_cxx;</span></span><br><span class="line"><span class="comment">//#include &lt;ext/pb_ds/priority_queue.hpp&gt;</span></span><br><span class="line"><span class="comment">//using namespace __gnu_pbds;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod1 39989</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod2 1000000000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> fa[MS];</span><br><span class="line"><span class="keyword">int</span> size[MS];</span><br><span class="line"><span class="keyword">int</span> ac[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v,val;</span><br><span class="line">&#125;p[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> k,poi,pos;</span><br><span class="line">&#125;a[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x == fa[x]) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> fx = <span class="built_in">find</span>(x);</span><br><span class="line"><span class="keyword">int</span> fy = <span class="built_in">find</span>(y);</span><br><span class="line">fa[fy] = fx;</span><br><span class="line">size[fx] += size[fy];</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i].u &gt;&gt; p[i].v &gt;&gt; p[i].val;</span><br><span class="line"><span class="keyword">if</span>(p[i].u &gt; p[i].v) <span class="built_in">swap</span>(p[i].u,p[i].v);</span><br><span class="line">fa[i] = i;</span><br><span class="line">size[i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">size[n] = <span class="number">1</span>;</span><br><span class="line">fa[n] = n;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(p+<span class="number">1</span>,p+n+<span class="number">1</span>,[](node t1,node t2)&#123;<span class="keyword">return</span> t1.val &gt; t2.val;&#125;);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i].k &gt;&gt; a[i].poi;</span><br><span class="line">a[i].pos = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+m+<span class="number">1</span>,[](nod t1,nod t2)&#123;<span class="keyword">return</span> t1.k &gt; t2.k;&#125;);</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">1</span>,j=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(;j&lt;=n &amp;&amp; p[j].val&gt;=a[i].k;j++)&#123;</span><br><span class="line"><span class="built_in">merge</span>(p[j].u,p[j].v);</span><br><span class="line">&#125;</span><br><span class="line">ac[a[i].pos] = size[<span class="built_in">find</span>(a[i].poi)] - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Rope】洛谷 P3391 【模板】文艺平衡树</title>
      <link href="/2021/03/29/ACM/%E3%80%90Rope%E3%80%91%E6%B4%9B%E8%B0%B7%20P3391%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%96%87%E8%89%BA%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
      <url>/2021/03/29/ACM/%E3%80%90Rope%E3%80%91%E6%B4%9B%E8%B0%B7%20P3391%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%96%87%E8%89%BA%E5%B9%B3%E8%A1%A1%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3391" target="_blank">题链</a></p><p>用的是 $STL$ $rope$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/assoc_container.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/tree_policy.hpp&gt;</span> <span class="comment">//用 tree</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/hash_policy.hpp&gt;</span> <span class="comment">//用 hash</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/trie_policy.hpp&gt;</span> <span class="comment">//用 trie 字典树 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/pb_ds/priority_queue.hpp&gt;</span> <span class="comment">//用 priority_queue</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/rope&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod1 39989</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod2 1000000000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">rope&lt;<span class="keyword">int</span>&gt; rp[<span class="number">3</span>]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">rp[<span class="number">0</span>].<span class="built_in">push_back</span>(i);</span><br><span class="line">rp[<span class="number">1</span>].<span class="built_in">push_front</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">rp[<span class="number">2</span>] = rp[<span class="number">0</span>];</span><br><span class="line">rp[<span class="number">0</span>].<span class="built_in">replace</span>(l<span class="number">-1</span>,r-l+<span class="number">1</span>,rp[<span class="number">1</span>].<span class="built_in">substr</span>(n-r,r-l+<span class="number">1</span>));</span><br><span class="line">rp[<span class="number">1</span>].<span class="built_in">replace</span>(n-r,r-l+<span class="number">1</span>,rp[<span class="number">2</span>].<span class="built_in">substr</span>(l<span class="number">-1</span>,r-l+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;rp[<span class="number">0</span>].<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">cout &lt;&lt; rp[<span class="number">0</span>][i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 平衡树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Treap平衡树】洛谷 P3369 【模板】普通平衡树（Treap）</title>
      <link href="/2021/03/29/ACM/%E3%80%90Treap%E5%B9%B3%E8%A1%A1%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3369%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%99%AE%E9%80%9A%E5%B9%B3%E8%A1%A1%E6%A0%91%EF%BC%88Treap%EF%BC%89/"/>
      <url>/2021/03/29/ACM/%E3%80%90Treap%E5%B9%B3%E8%A1%A1%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3369%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%99%AE%E9%80%9A%E5%B9%B3%E8%A1%A1%E6%A0%91%EF%BC%88Treap%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3369" target="_blank">题链</a></p><p>$Treap$平衡树</p><p>zw:别把线段树宏定义的$ls$ $rs$用在平衡树上… 没发现难找</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;ext/pb_ds/priority_queue.hpp&gt;</span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//using namespace __gnu_pbds;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod1 39989</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod2 1000000000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r; <span class="comment">// 左右孩子编号 </span></span><br><span class="line"><span class="keyword">int</span> val,dat; <span class="comment">// 键值，用于模仿堆的权值 </span></span><br><span class="line"><span class="keyword">int</span> size,cnt;<span class="comment">// 以该节点为根的树的大小，该节点的数的数量 </span></span><br><span class="line">&#125;p[MS];</span><br><span class="line"><span class="keyword">int</span> tot,root; <span class="comment">// 总编号，根节点编号 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> val)</span></span>&#123; <span class="comment">// 新增节点返回节点编号 </span></span><br><span class="line">p[++tot] = &#123;<span class="number">0</span>,<span class="number">0</span>,val,<span class="built_in">rand</span>(),<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">return</span> tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123; <span class="comment">// 设置初始两个节点，正负无穷 </span></span><br><span class="line">root = <span class="built_in">add</span>(-INF);</span><br><span class="line">p[root].r = <span class="built_in">add</span>(INF);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123; <span class="comment">// 更新 </span></span><br><span class="line">p[rt].size = p[p[rt].l].size + p[p[rt].r].size + p[rt].cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rank_val</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> rank)</span></span>&#123; <span class="comment">// 排名 -&gt; 值 </span></span><br><span class="line"><span class="keyword">if</span>(rt == <span class="number">0</span>) <span class="keyword">return</span> INF;</span><br><span class="line"><span class="keyword">if</span>(p[p[rt].l].size &gt;= rank) <span class="keyword">return</span> <span class="built_in">rank_val</span>(p[rt].l,rank);</span><br><span class="line"><span class="keyword">if</span>(p[p[rt].l].size + p[rt].cnt &gt;= rank) <span class="keyword">return</span> p[rt].val;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">rank_val</span>(p[rt].r,rank - p[p[rt].l].size - p[rt].cnt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">val_rank</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123; <span class="comment">// 值 -&gt; 排名 </span></span><br><span class="line"><span class="keyword">if</span>(rt == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(p[rt].val == val) <span class="keyword">return</span> p[p[rt].l].size + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(p[rt].val &gt; val) <span class="keyword">return</span> <span class="built_in">val_rank</span>(p[rt].l,val);</span><br><span class="line"><span class="keyword">return</span> p[p[rt].l].size + p[rt].cnt + <span class="built_in">val_rank</span>(p[rt].r,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">left_rotate</span><span class="params">(<span class="keyword">int</span> &amp;rt)</span></span>&#123; <span class="comment">// 左旋 逆时针 </span></span><br><span class="line"><span class="keyword">int</span> rrs = p[rt].r;</span><br><span class="line">p[rt].r = p[rrs].l;</span><br><span class="line">p[rrs].l = rt;</span><br><span class="line">rt = rrs;</span><br><span class="line"><span class="built_in">push_up</span>(p[rt].l);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">right_rotate</span><span class="params">(<span class="keyword">int</span> &amp;rt)</span></span>&#123; <span class="comment">// 右旋 顺时针 </span></span><br><span class="line"><span class="keyword">int</span> lls = p[rt].l;</span><br><span class="line">p[rt].l = p[lls].r;</span><br><span class="line">p[lls].r = rt;</span><br><span class="line">rt = lls;</span><br><span class="line"><span class="built_in">push_up</span>(p[rt].r);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> &amp;rt,<span class="keyword">int</span> val)</span></span>&#123; <span class="comment">// 插入 rt为引用 根节点的位置可能会变</span></span><br><span class="line"><span class="keyword">if</span>(rt == <span class="number">0</span>)&#123; <span class="comment">// 无该值则新增 </span></span><br><span class="line">rt = <span class="built_in">add</span>(val);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p[rt].val == val)&#123; <span class="comment">// 有该值则数量++ </span></span><br><span class="line">p[rt].cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(val &lt; p[rt].val)&#123;</span><br><span class="line"><span class="built_in">insert</span>(p[rt].l,val);</span><br><span class="line"><span class="keyword">if</span>(p[p[rt].l].dat &gt; p[rt].dat) <span class="built_in">right_rotate</span>(rt); <span class="comment">// 右旋以满足大根堆性质 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">insert</span>(p[rt].r,val);</span><br><span class="line"><span class="keyword">if</span>(p[p[rt].r].dat &gt; p[rt].dat) <span class="built_in">left_rotate</span>(rt); <span class="comment">// 左旋以满足大根堆性质 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_up</span>(rt); <span class="comment">// 不忘更新 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getfront</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123; <span class="comment">//前驱 </span></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">1</span>; <span class="comment">// p[1].val  = -INF;</span></span><br><span class="line"><span class="keyword">while</span>(rt)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].val == val)&#123; <span class="comment">// 找到对应值 </span></span><br><span class="line"><span class="keyword">if</span>(p[rt].l != <span class="number">0</span>)&#123; <span class="comment">// 寻找左子树最大值 </span></span><br><span class="line">rt = p[rt].l;</span><br><span class="line"><span class="keyword">while</span>(p[rt].r != <span class="number">0</span>) rt = p[rt].r;</span><br><span class="line">ans = rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p[ans].val &lt; p[rt].val &amp;&amp; p[rt].val &lt; val) ans = rt; <span class="comment">// 边查找边更新 </span></span><br><span class="line"><span class="keyword">if</span>(val &lt; p[rt].val) rt = p[rt].l;</span><br><span class="line"><span class="keyword">else</span> rt = p[rt].r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> p[ans].val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getnext</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123; <span class="comment">// 后继 </span></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(rt)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].val == val)&#123; <span class="comment">// 找到对应值 </span></span><br><span class="line"><span class="keyword">if</span>(p[rt].r != <span class="number">0</span>)&#123; <span class="comment">// 寻找右子树最小值 </span></span><br><span class="line">rt = p[rt].r;</span><br><span class="line"><span class="keyword">while</span>(p[rt].l != <span class="number">0</span>) rt = p[rt].l;</span><br><span class="line">ans = rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(val &lt; p[rt].val &amp;&amp; p[rt].val &lt; p[ans].val) ans = rt; <span class="comment">// 边查找边更新 </span></span><br><span class="line"><span class="keyword">if</span>(val &lt; p[rt].val) rt = p[rt].l;</span><br><span class="line"><span class="keyword">else</span> rt = p[rt].r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> p[ans].val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">int</span> &amp;rt,<span class="keyword">int</span> val)</span></span>&#123; <span class="comment">//删除 rt为引用 根节点的位置可能会变 </span></span><br><span class="line"><span class="keyword">if</span>(rt == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(p[rt].val == val)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[rt].cnt &gt; <span class="number">1</span>)&#123; <span class="comment">// 若有多个值则删数量即可 </span></span><br><span class="line">p[rt].cnt--;</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p[rt].l || p[rt].r)&#123; <span class="comment">// 使需要被删除的数向下旋 到达叶子节点即可直接删除 左右旋保持堆性质 </span></span><br><span class="line"><span class="keyword">if</span>(p[rt].r == <span class="number">0</span> || p[p[rt].l].dat &gt; p[p[rt].r].dat)&#123;</span><br><span class="line"><span class="built_in">right_rotate</span>(rt);</span><br><span class="line"><span class="built_in">remove</span>(p[rt].r,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">left_rotate</span>(rt);</span><br><span class="line"><span class="built_in">remove</span>(p[rt].l,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> rt = <span class="number">0</span>; <span class="comment">// 直接删除叶子节点 </span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(val &lt; p[rt].val) <span class="built_in">remove</span>(p[rt].l,val);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">remove</span>(p[rt].r,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">build</span>();</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line"><span class="keyword">int</span> op,x;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>) <span class="built_in">insert</span>(root,x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) <span class="built_in">remove</span>(root,x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">3</span>) cout &lt;&lt; <span class="built_in">val_rank</span>(root,x)<span class="number">-1</span> &lt;&lt; endl; <span class="comment">// 初始时有一个无穷小 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">4</span>) cout &lt;&lt; <span class="built_in">rank_val</span>(root,x+<span class="number">1</span>) &lt;&lt; endl; <span class="comment">// 初始时有一个无穷小 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">5</span>) cout &lt;&lt; <span class="built_in">getfront</span>(root,x) &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="built_in">getnext</span>(root,x) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 平衡树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对拍】</title>
      <link href="/2021/03/29/ACM/%E3%80%90%E5%AF%B9%E6%8B%8D%E3%80%91/"/>
      <url>/2021/03/29/ACM/%E3%80%90%E5%AF%B9%E6%8B%8D%E3%80%91/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;random.exe&gt;data.in&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;stand.exe&lt;data.in&gt;data.ans&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;test.exe&lt;data.in&gt;data.out&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">system</span>(<span class="string">&quot;fc data.out data.ans&quot;</span>))&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;WA&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,cnt++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对拍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【二叉树】基础</title>
      <link href="/2021/03/29/ACM/%E3%80%90%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%91%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/03/29/ACM/%E3%80%90%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%91%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>在没有重复权值的基础上建立的二叉搜索树；</p><p>这是不平衡的；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;ext/pb_ds/priority_queue.hpp&gt;</span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//using namespace __gnu_pbds;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod1 39989</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod2 1000000000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line">&#125;p[MS];</span><br><span class="line"><span class="keyword">int</span> tot,root;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> val)</span></span>&#123; <span class="comment">// 返回节点编号 </span></span><br><span class="line">p[++tot] = &#123;<span class="number">0</span>,<span class="number">0</span>,val&#125;; <span class="comment">// 新建节点左右孩子为 0 </span></span><br><span class="line"><span class="keyword">return</span> tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123; <span class="comment">// 初始化两个节点，正负无穷大 </span></span><br><span class="line">root = <span class="built_in">add</span>(-INF);</span><br><span class="line">p[root].r = <span class="built_in">add</span>(INF);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123; <span class="comment">// 递归搜索返回节点编号 </span></span><br><span class="line"><span class="keyword">if</span>(rt == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(p[rt].val == val) <span class="keyword">return</span> rt;</span><br><span class="line"><span class="keyword">if</span>(val &lt; p[rt].val) <span class="keyword">return</span> <span class="built_in">search</span>(p[rt].l,val);</span><br><span class="line"><span class="keyword">if</span>(val &gt; p[rt].val) <span class="keyword">return</span> <span class="built_in">search</span>(p[rt].r,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> &amp;rt,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(rt == <span class="number">0</span>)&#123; <span class="comment">// 无该节点则新建 </span></span><br><span class="line">rt = <span class="built_in">add</span>(val);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(val == p[rt].val) <span class="keyword">return</span>; <span class="comment">// 存在则无操作 </span></span><br><span class="line"><span class="keyword">if</span>(val &gt; p[rt].val) <span class="built_in">insert</span>(p[rt].r,val);</span><br><span class="line"><span class="keyword">if</span>(val &lt; p[rt].val) <span class="built_in">insert</span>(p[rt].l,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getfront</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123; <span class="comment">// 查询前驱节点编号 </span></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(rt)&#123;</span><br><span class="line"><span class="keyword">if</span>(val == p[rt].val)&#123; <span class="comment">// 若查到该值 </span></span><br><span class="line"><span class="keyword">if</span>(p[rt].l != <span class="number">0</span>)&#123; <span class="comment">// 寻找该点左子树最大值 </span></span><br><span class="line">rt = p[rt].l;</span><br><span class="line"><span class="keyword">while</span>(p[rt].r != <span class="number">0</span>) rt = p[rt].r;</span><br><span class="line">ans = rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p[ans].val &lt; p[rt].val &amp;&amp; p[rt].val &lt; val) ans = rt; <span class="comment">// 一边递归一边更新 </span></span><br><span class="line"><span class="keyword">if</span>(val &lt; p[rt].val) rt = p[rt].l;</span><br><span class="line"><span class="keyword">else</span> rt = p[rt].r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getnext</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> val)</span></span>&#123; <span class="comment">// 查询后继节点编号 </span></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(rt)&#123;</span><br><span class="line"><span class="keyword">if</span>(val == p[rt].val)&#123; <span class="comment">// 若查到该值 </span></span><br><span class="line"><span class="keyword">if</span>(p[rt].r != <span class="number">0</span>)&#123; <span class="comment">// 寻找该点右子树最小值 </span></span><br><span class="line">rt = p[rt].r;</span><br><span class="line"><span class="keyword">while</span>(p[rt].l != <span class="number">0</span>) rt = p[rt].l;</span><br><span class="line">ans = rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(val &lt; p[rt].val &amp;&amp; p[rt].val &lt; p[ans].val) ans = rt;<span class="comment">// 一边递归一边更新 </span></span><br><span class="line"><span class="keyword">if</span>(val &lt; p[rt].val) rt = p[rt].l;</span><br><span class="line"><span class="keyword">else</span> rt = p[rt].r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">int</span> &amp;rt,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(rt == <span class="number">0</span>) <span class="keyword">return</span>; <span class="comment">// 若不存在则无操作 </span></span><br><span class="line"><span class="keyword">if</span>(p[rt].val == val)&#123; <span class="comment">// 找到该值 </span></span><br><span class="line"><span class="keyword">if</span>(p[rt].l == <span class="number">0</span>) rt = p[rt].r; <span class="comment">// 无左子树则 fa[rt]的左或右指针 指向 右子树 （rt为引用则可看作 fa[rt]） </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(p[rt].r == <span class="number">0</span>) rt = p[rt].l; <span class="comment">// 同理 </span></span><br><span class="line"><span class="keyword">else</span>&#123; <span class="comment">// 左右子树同时存在，这里寻找右子树的最小值代替被删节点 </span></span><br><span class="line"><span class="keyword">int</span> nxt = p[rt].r;</span><br><span class="line"><span class="keyword">while</span>(p[nxt].l != <span class="number">0</span>) nxt = p[nxt].l; <span class="comment">// 找到最小节点 </span></span><br><span class="line"><span class="built_in">remove</span>(p[rt].r,val); <span class="comment">// 移除最小节点 </span></span><br><span class="line"><span class="comment">// 令节点nxt代替rt的位置 </span></span><br><span class="line">p[nxt].l = p[rt].l; </span><br><span class="line">p[nxt].r = p[rt].r;</span><br><span class="line">rt = nxt; <span class="comment">//fa[rt]的左或右指针 指向 右子树 （rt为引用则可看作 fa[rt]） </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(val &lt; p[rt].val) <span class="built_in">remove</span>(p[rt].l,val);</span><br><span class="line"><span class="keyword">if</span>(val &gt; p[rt].val) <span class="built_in">remove</span>(p[rt].r,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mid_order</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123; <span class="comment">// 中序遍历 </span></span><br><span class="line"><span class="keyword">if</span>(rt == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">mid_order</span>(p[rt].l);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p[rt].val);</span><br><span class="line"><span class="built_in">mid_order</span>(p[rt].r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">build</span>();</span><br><span class="line"><span class="keyword">int</span> ert;</span><br><span class="line"><span class="built_in">insert</span>(ert = root,<span class="number">5</span>);</span><br><span class="line"><span class="built_in">insert</span>(ert = root,<span class="number">3</span>);</span><br><span class="line"><span class="built_in">insert</span>(ert = root,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">insert</span>(ert = root,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">insert</span>(ert = root,<span class="number">4</span>);</span><br><span class="line"><span class="built_in">insert</span>(ert = root,<span class="number">8</span>);</span><br><span class="line"><span class="built_in">mid_order</span>(ert = root);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,p[<span class="built_in">getfront</span>(ert = root,<span class="number">4</span>)].val);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,p[<span class="built_in">getnext</span>(ert = root,<span class="number">4</span>)].val);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 平衡树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】李超线段树 P4097 Segment</title>
      <link href="/2021/03/28/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%9D%8E%E8%B6%85%E7%BA%BF%E6%AE%B5%E6%A0%91%20P4097%20Segment/"/>
      <url>/2021/03/28/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%9D%8E%E8%B6%85%E7%BA%BF%E6%AE%B5%E6%A0%91%20P4097%20Segment/</url>
      
        <content type="html"><![CDATA[<p><a href="https://oi-wiki.org/ds/li-chao-tree/" target="_blank">OI-wiki</a></p><p><a href="https://www.luogu.com.cn/problem/P4097" target="_blank">题链</a></p><p><img src="https://img2020.cnblogs.com/blog/2062718/202103/2062718-20210328222504031-618159763.png"></p><p>向下推的时候是类似向下推懒惰标记的方式，没理解导致吃了一整页的$WA$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;ext/pb_ds/priority_queue.hpp&gt;</span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//using namespace __gnu_pbds;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod1 39989</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod2 1000000000</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line"><span class="keyword">double</span> k,b;</span><br><span class="line">&#125; line[MS];</span><br><span class="line"><span class="keyword">int</span> tli;</span><br><span class="line"><span class="keyword">int</span> p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> line[i].k*x+line[i].b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> j = p[rt];</span><br><span class="line"><span class="keyword">double</span> ci = <span class="built_in">calc</span>(i,m);</span><br><span class="line"><span class="keyword">double</span> cj = <span class="built_in">calc</span>(j,m);</span><br><span class="line"><span class="keyword">if</span>(!j)&#123;</span><br><span class="line">p[rt] = i;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(l == r) &#123;</span><br><span class="line"><span class="keyword">if</span>(ci &gt; cj) p[rt] = i;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(line[i].k &gt; line[j].k) &#123;</span><br><span class="line"><span class="keyword">if</span>(ci &gt; cj) p[rt] = i ,<span class="built_in">push_down</span>(ls,l,m,j); <span class="comment">// 将原线段向下推 吃了一整页的 WA </span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">push_down</span>(rs,m+<span class="number">1</span>,r,i); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(line[i].k &lt; line[j].k) &#123;</span><br><span class="line"><span class="keyword">if</span>(ci &gt; cj) p[rt] = i ,<span class="built_in">push_down</span>(rs,m+<span class="number">1</span>,r,j); <span class="comment">// 将原线段向下推 </span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">push_down</span>(ls,l,m,i);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(line[i].b &gt; line[j].b) p[rt] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r,i);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,i);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Pair <span class="title">pmax</span><span class="params">(Pair t1,Pair t2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t1.one &gt; t2.one) <span class="keyword">return</span> t1;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t1.one &lt; t2.one) <span class="keyword">return</span> t2;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> t1.two &lt; t2.two ? t1:t2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Pair <span class="title">get_line</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">int</span> tar)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(tar &lt; l || tar &gt; r) <span class="keyword">return</span> &#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">double</span> cc = <span class="built_in">calc</span>(p[rt],tar);</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> &#123;cc,p[rt]&#125;;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">pmax</span>(&#123;cc,p[rt]&#125;,<span class="built_in">pmax</span>(<span class="built_in">get_line</span>(l,m,ls,tar),<span class="built_in">get_line</span>(m+<span class="number">1</span>,r,rs,tar)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">int</span> lastans = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span>(n--) &#123;</span><br><span class="line"><span class="keyword">int</span> op,tar;</span><br><span class="line"><span class="keyword">int</span> x1,y1,x2,y2;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op) &#123;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">x1 = (x1+lastans<span class="number">-1</span>+mod1)%mod1+<span class="number">1</span>;</span><br><span class="line">y1 = (y1+lastans<span class="number">-1</span>+mod2)%mod2+<span class="number">1</span>;</span><br><span class="line">x2 = (x2+lastans<span class="number">-1</span>+mod1)%mod1+<span class="number">1</span>;</span><br><span class="line">y2 = (y2+lastans<span class="number">-1</span>+mod2)%mod2+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x1 &gt; x2) <span class="built_in">swap</span>(x1,x2) ,<span class="built_in">swap</span>(y1,y2);</span><br><span class="line">++tli;</span><br><span class="line"><span class="keyword">if</span>(x1 == x2)&#123;</span><br><span class="line">line[tli].k = <span class="number">0</span>;</span><br><span class="line">line[tli].b = <span class="built_in">max</span>(y1,y2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">line[tli].k = <span class="number">1.0</span>*(y2-y1)/(x2-x1),</span><br><span class="line">line[tli].b = y1 - line[tli].k*x1; <span class="comment">// 换一种写法会 WA... </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">update</span>(x1,x2,<span class="number">1</span>,mod1,<span class="number">1</span>,tli);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">cin &gt;&gt; tar;</span><br><span class="line">tar = (tar+lastans<span class="number">-1</span>+mod1)%mod1+<span class="number">1</span>;</span><br><span class="line">lastans = <span class="built_in">get_line</span>(<span class="number">1</span>,mod1,<span class="number">1</span>,tar).two;</span><br><span class="line">cout &lt;&lt; lastans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】洛谷 P4198 楼房重建</title>
      <link href="/2021/03/28/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P4198%20%E6%A5%BC%E6%88%BF%E9%87%8D%E5%BB%BA/"/>
      <url>/2021/03/28/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P4198%20%E6%A5%BC%E6%88%BF%E9%87%8D%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4198" target="_blank">题链</a></p><p>解：带修改的查询包含第一个值的$[1，n]$的最长上升子序列（姑且这么叫吧…）；</p><p>线段树维护节点区间最大值以及区间包含最左值的最长上升子序列，则询问的答案就是根节点的信息</p><p>区间最大值$p[rt].maxn$很好维护，主要是维护 区间包含最左值的最长上升子序列 这里记为$p[rt].upcnt$;</p><p>显然对于每一个叶子节点（$[i,i]$）节点信息就是 { $maxn =$ 本身的值，$upcnt = 1$} ;</p><p>更新$p[rt].upcnt$时，左孩子$[l,m]$区间$p[ls].upcnt$都是需要加上的，毕竟是从前往后看，右孩子$[m+1,r]$则需要查找大于左孩子最大值的数目，把左孩子的最大值当作目标然后递归查找；</p><p>现在开始递归查找，如果左孩子$[l,m]$的最大值小于等于目标值，那么就去查找右孩子$[m+1,r]$，如果左孩子$[l,m]$的最大值大于目标值，则右孩子的贡献就是 整个区间$[l,r].upcnt -$ 左孩子$[l,m].upcnt +$ 递归左孩子的值；</p><p>终点就是当 $l == r$ 时，当前值大于目标值返回 $1$ ，否则 $0$； </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ext/pb_ds/priority_queue.hpp&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> maxn;</span><br><span class="line"><span class="keyword">int</span> upcnt;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">double</span> tar)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> p[rt].maxn &gt; tar;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(p[ls].maxn &lt;= tar) <span class="keyword">return</span> <span class="built_in">cal</span>(rs,m+<span class="number">1</span>,r,tar);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> p[rt].upcnt - p[ls].upcnt + <span class="built_in">cal</span>(ls,l,m,tar);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">p[rt].maxn = <span class="built_in">max</span>(p[ls].maxn,p[rs].maxn);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[rt].upcnt = p[ls].upcnt + <span class="built_in">cal</span>(rs,m+<span class="number">1</span>,r,p[ls].maxn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,<span class="keyword">double</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt].maxn = val;</span><br><span class="line">p[rt].upcnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="keyword">double</span> k = y/x;</span><br><span class="line"><span class="built_in">update</span>(x,x,<span class="number">1</span>,n,<span class="number">1</span>,k);</span><br><span class="line"><span class="keyword">int</span> ans = p[<span class="number">1</span>].upcnt;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【主席树】可持久化线段树模板学习</title>
      <link href="/2021/03/27/ACM/%E3%80%90%E4%B8%BB%E5%B8%AD%E6%A0%91%E3%80%91%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/03/27/ACM/%E3%80%90%E4%B8%BB%E5%B8%AD%E6%A0%91%E3%80%91%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p><a href="https://oi-wiki.org/ds/persistent-seg/" target="_blank">OI-wiki</a></p><p><a href="https://blog.csdn.net/regina8023/article/details/41910615" target="_blank">有个手绘图</a></p><p><a href="https://blog.csdn.net/oranges_c/article/details/54773561" target="_blank">三道模板题（同求第k小）</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="comment">//#include &lt;ext/pb_ds/priority_queue.hpp&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//using namespace __gnu_pbds;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line"><span class="keyword">int</span> lls,rrs;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> rtpos[MS];</span><br><span class="line"><span class="keyword">int</span> a[MS],ta;</span><br><span class="line"><span class="keyword">int</span> b[MS];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> rt;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[rt].lls = <span class="built_in">build</span>(l,m);</span><br><span class="line">p[rt].rrs = <span class="built_in">build</span>(m+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> lart,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rt = ++tot;</span><br><span class="line">p[rt] = p[lart];</span><br><span class="line">p[rt].count++;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> rt;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= pos) p[rt].lls = <span class="built_in">update</span>(p[lart].lls,l,m,pos);</span><br><span class="line"><span class="keyword">else</span> p[rt].rrs = <span class="built_in">update</span>(p[lart].rrs,m+<span class="number">1</span>,r,pos);</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_kth</span><span class="params">(<span class="keyword">int</span> lrt,<span class="keyword">int</span> rrt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> l;</span><br><span class="line"><span class="keyword">int</span> x = p[p[rrt].lls].count - p[p[lrt].lls].count;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(k &lt;= x) <span class="keyword">return</span> <span class="built_in">get_kth</span>(p[lrt].lls,p[rrt].lls,l,m,k);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">get_kth</span>(p[lrt].rrs,p[rrt].rrs,m+<span class="number">1</span>,r,k-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">tot = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">b[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">ta = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] != a[i<span class="number">-1</span>]) a[++ta] = a[i];</span><br><span class="line">&#125;</span><br><span class="line">rtpos[<span class="number">0</span>] = <span class="built_in">build</span>(<span class="number">1</span>,ta);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> pos = <span class="built_in">lower_bound</span>(a+<span class="number">1</span>,a+ta+<span class="number">1</span>,b[i]) - a;</span><br><span class="line">rtpos[i] = <span class="built_in">update</span>(rtpos[i<span class="number">-1</span>],<span class="number">1</span>,ta,pos);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r,k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>,&amp;l,&amp;r,&amp;k);</span><br><span class="line"><span class="comment">//k = r-l+1-k+1;</span></span><br><span class="line"><span class="keyword">int</span> cc = <span class="built_in">get_kth</span>(rtpos[l<span class="number">-1</span>],rtpos[r],<span class="number">1</span>,ta,k);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[cc]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="keyword">int</span> ca;</span><br><span class="line">cin &gt;&gt; ca;</span><br><span class="line"><span class="keyword">while</span>(ca--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主席树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组维护区间种类数】洛谷 P1972 HH的项链</title>
      <link href="/2021/03/25/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E7%A7%8D%E7%B1%BB%E6%95%B0%E3%80%91%E6%B4%9B%E8%B0%B7%20P1972%20HH%E7%9A%84%E9%A1%B9%E9%93%BE/"/>
      <url>/2021/03/25/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E7%A7%8D%E7%B1%BB%E6%95%B0%E3%80%91%E6%B4%9B%E8%B0%B7%20P1972%20HH%E7%9A%84%E9%A1%B9%E9%93%BE/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1972" target="_blank">题链</a></p><p>询问区间种类不能直接通过类似 $get_sum(r)-get_sum(l-1)$ 的方式去得出答案</p><p>如何使得上述方式可以求解成为关键，可以将$m$个询问按照右区间$r$从小到大排列，不试图将所有数据（题给的一串贝壳数组）一起建立树状数组，通过一个个将数组中的元素加入树状数组时，对于该种类上一次出现的位置$lastpos$可以去掉，这一次出现时记录现在位置，由于对$m$个询问排序离线操作，就可通过 $get_sum(r)-get_sum(l-1)$ 的方式去得出答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ext/pb_ds/priority_queue.hpp&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL pos,l,r;</span><br><span class="line">&#125;cp[MS];</span><br><span class="line">LL ac[MS];</span><br><span class="line">LL a[MS];</span><br><span class="line">LL p[MS];</span><br><span class="line">LL lapos[MS]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">LL x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>) f = <span class="number">-1</span>;</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">x = (x&lt;&lt;<span class="number">1</span>) + (x&lt;&lt;<span class="number">3</span>) + (ch^<span class="number">48</span>);</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">lowbit</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a.r == b.r) <span class="keyword">return</span> a.l &lt; b.l;</span><br><span class="line"><span class="keyword">return</span> a.r &lt; b.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(LL pos,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=n;pos+=<span class="built_in">lowbit</span>(pos)) p[pos] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(LL pos)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos)) ans += p[pos];</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i] = <span class="built_in">read</span>();</span><br><span class="line">m = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cp[i].l = <span class="built_in">read</span>();</span><br><span class="line">cp[i].r = <span class="built_in">read</span>();</span><br><span class="line">cp[i].pos = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(cp+<span class="number">1</span>,cp+m+<span class="number">1</span>,cmp);</span><br><span class="line">LL apos = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(;apos&lt;=cp[i].r;apos++)&#123;</span><br><span class="line"><span class="keyword">if</span>(lapos[a[apos]])</span><br><span class="line"><span class="built_in">add</span>(lapos[a[apos]],<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">add</span>(apos,<span class="number">1</span>);</span><br><span class="line">lapos[a[apos]] = apos;</span><br><span class="line">&#125;</span><br><span class="line">ac[cp[i].pos] = <span class="built_in">get_sum</span>(cp[i].r) - <span class="built_in">get_sum</span>(cp[i].l<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树 二分】洛谷 P2824 排序</title>
      <link href="/2021/03/25/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E4%BA%8C%E5%88%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P2824%20%E6%8E%92%E5%BA%8F/"/>
      <url>/2021/03/25/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E4%BA%8C%E5%88%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P2824%20%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2824" target="_blank">题链</a></p><p>二分答案，将原数组中小于二分值的置$0$，大于等于的置$1$，则区间排序问题则可变为区间赋值问题</p><p>线段树维护区间和，记$cnt$为$[l,r]$区间的$1$的个数，区间升序排序$[l,r]$可以转为对$[r-cnt+1,r]$区间值变为$1$，$[l,r-cnt]$区间值变为$0$，区间降序同理</p><p>若所求$pos$的值为$1$，说明经过一轮排序后该点的值是大于等于二分的答案的，可知单调性</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ext/pb_ds/priority_queue.hpp&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL mid;</span><br><span class="line">LL a[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL op,l,r;</span><br><span class="line">&#125;cp[MS];</span><br><span class="line">LL p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL la[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = p[ls] + p[rs];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(la[rt] != <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[ls] = (m-l+<span class="number">1</span>)*la[rt];</span><br><span class="line">p[rs] = (r-m)*la[rt];</span><br><span class="line">la[ls] = la[rt];</span><br><span class="line">la[rs] = la[rt];</span><br><span class="line">la[rt] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">la[rt] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[l] &lt; mid) p[rt] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> p[rt] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt] = (r-l+<span class="number">1</span>)*val;</span><br><span class="line">la[rt] = val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">get_sum</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">get_sum</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cin &gt;&gt; cp[i].op &gt;&gt; cp[i].l &gt;&gt; cp[i].r;</span><br><span class="line">&#125;</span><br><span class="line">LL pos,ans;</span><br><span class="line">cin &gt;&gt; pos;</span><br><span class="line">LL l = <span class="number">1</span> ,r = n;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">LL cnt = <span class="built_in">get_sum</span>(cp[i].l,cp[i].r,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(!cnt || cnt == cp[i].r-cp[i].l+<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(!cp[i].op)&#123;</span><br><span class="line"><span class="built_in">update</span>(cp[i].l,cp[i].r-cnt,<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">update</span>(cp[i].r-cnt+<span class="number">1</span>,cp[i].r,<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">update</span>(cp[i].l,cp[i].l+cnt<span class="number">-1</span>,<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">update</span>(cp[i].l+cnt,cp[i].r,<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">LL tar = <span class="built_in">get_sum</span>(pos,pos,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(tar) ans = mid ,l = mid+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> r = mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【KMP】洛谷 P2375 动物园</title>
      <link href="/2021/03/25/ACM/%E3%80%90KMP%E3%80%91%E6%B4%9B%E8%B0%B7%20P2375%20%E5%8A%A8%E7%89%A9%E5%9B%AD/"/>
      <url>/2021/03/25/ACM/%E3%80%90KMP%E3%80%91%E6%B4%9B%E8%B0%B7%20P2375%20%E5%8A%A8%E7%89%A9%E5%9B%AD/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2375" target="_blank">题链</a></p><p>暴力想法就是求前缀数组，然后倒着一步步得跳$j$指针直到长度小于当前总长一半，最后把$j$指针跳到$0$的次数总和就是答案，当然会$T$，例如全是’$a$’</p><p>在求前缀数组时可以递推记录当前长度有多少个相同前后缀的个数，此时不管前后缀区间是否重叠</p><p>用与求前缀数组同样的想法去跳指针$j$，每次都得出不超过长度一半的最长前后缀的长度$j$，不更新$j$的值就能保证每次$j$值都在$i/2$的左边</p><p>为何第$0$个字符要等于$1$，$ac$数组记录的相同前后缀个数而不是真前后缀个数</p><p>因为在跳$j$指针的时候，当$j$长度小于当前总长一半时，$ans$若乘上真前后缀个数，则会少一个当前$s[0…j-1]$这个本体..</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line">LL kp[MS];</span><br><span class="line">LL ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line">cin &gt;&gt; s; <span class="comment">// 字符串以0开始 </span></span><br><span class="line">LL hs = <span class="built_in">strlen</span>(s);</span><br><span class="line">kp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">ac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=<span class="number">0</span>;i&lt;hs;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(j&gt;<span class="number">0</span> &amp;&amp; s[i] != s[j]) j = kp[j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(s[i] == s[j]) j++; <span class="comment">// 前两步得出以 i 为结尾匹配的最长真前后缀的长度 j </span></span><br><span class="line">kp[i] = j; <span class="comment">// 记录这个长度 j </span></span><br><span class="line"><span class="keyword">if</span>(j) ac[i] = ac[j<span class="number">-1</span>]+<span class="number">1</span>; <span class="comment">// ac[i]表示以 i 结尾 相同的前后缀的个数</span></span><br><span class="line"><span class="keyword">else</span> ac[i] = <span class="number">1</span>; </span><br><span class="line">&#125; </span><br><span class="line">LL ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=<span class="number">0</span>;i&lt;hs;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(j&gt;<span class="number">0</span> &amp;&amp; s[i] != s[j]) j = kp[j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(s[i] == s[j]) j++;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">2</span>*j&gt;i+<span class="number">1</span>) j = kp[j<span class="number">-1</span>]; <span class="comment">// 得出不超过长度一半的最长前后缀的长度 j  </span></span><br><span class="line"><span class="keyword">if</span>(j) ans *= (ac[j<span class="number">-1</span>]+<span class="number">1</span>);</span><br><span class="line">ans %= mod;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> KMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树 扫描线】洛谷 P1502 窗口的星星</title>
      <link href="/2021/03/25/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E6%89%AB%E6%8F%8F%E7%BA%BF%E3%80%91%E6%B4%9B%E8%B0%B7%20P1502%20%E7%AA%97%E5%8F%A3%E7%9A%84%E6%98%9F%E6%98%9F/"/>
      <url>/2021/03/25/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E6%89%AB%E6%8F%8F%E7%BA%BF%E3%80%91%E6%B4%9B%E8%B0%B7%20P1502%20%E7%AA%97%E5%8F%A3%E7%9A%84%E6%98%9F%E6%98%9F/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1502" target="_blank">题链</a></p><p>扫描线模板题</p><p>将每个星星扩展为一个矩形，长$w-1$，宽$h-1$，扩展的长度不同维护的东西也不同。</p><p>这样扩展结果是维护一个个点，如图</p><p><img src="https://img2020.cnblogs.com/blog/2062718/202103/2062718-20210325150404843-511878071.jpg"></p><p>而后维护区间$max$，操作只有区间加减。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ext/pb_ds/priority_queue.hpp&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL w,h;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL xl,xr,y,g;</span><br><span class="line">&#125;line[MS*<span class="number">2</span>];</span><br><span class="line">LL hx[MS*<span class="number">2</span>]; </span><br><span class="line">LL p[MS&lt;&lt;<span class="number">3</span>];</span><br><span class="line">LL la[MS&lt;&lt;<span class="number">3</span>];</span><br><span class="line">LL tli,thx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a.y == b.y) <span class="keyword">return</span> a.g &gt; b.g;</span><br><span class="line"><span class="keyword">return</span> a.y &lt; b.y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(la[rt])&#123;</span><br><span class="line">p[ls] += la[rt];</span><br><span class="line">p[rs] += la[rt];</span><br><span class="line">la[ls] += la[rt];</span><br><span class="line">la[rs] += la[rt];</span><br><span class="line">la[rt] = <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">p[rt] = <span class="built_in">max</span>(p[ls],p[rs]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">la[rt] = p[rt] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">la[rt] += val;</span><br><span class="line">p[rt] += val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">LL ce;</span><br><span class="line">cin &gt;&gt; ce;</span><br><span class="line"><span class="keyword">while</span>(ce--)&#123;</span><br><span class="line">thx = <span class="number">0</span>;</span><br><span class="line">tli = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; w &gt;&gt; h;</span><br><span class="line">w-- ,h--;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL x,y,g;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; g;</span><br><span class="line">hx[++tli] = x;</span><br><span class="line">line[tli] = &#123;x,x+w,y,g&#125;;</span><br><span class="line">hx[++tli] = x+w;</span><br><span class="line">line[tli] = &#123;x,x+w,y+h,-g&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(hx+<span class="number">1</span>,hx+tli+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">sort</span>(line+<span class="number">1</span>,line+tli+<span class="number">1</span>,cmp);</span><br><span class="line">thx = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=tli;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(hx[i] != hx[i<span class="number">-1</span>]) hx[++thx] = hx[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,thx,<span class="number">1</span>);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tli;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">lower_bound</span>(hx+<span class="number">1</span>,hx+thx+<span class="number">1</span>,line[i].xl) - hx;</span><br><span class="line"><span class="keyword">int</span> r = <span class="built_in">lower_bound</span>(hx+<span class="number">1</span>,hx+thx+<span class="number">1</span>,line[i].xr) - hx;</span><br><span class="line"><span class="built_in">update</span>(l,r,<span class="number">1</span>,thx,<span class="number">1</span>,line[i].g);</span><br><span class="line">ans = <span class="built_in">max</span>(ans,p[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【KMP】洛谷 P4824 Censoring S</title>
      <link href="/2021/03/25/ACM/%E3%80%90KMP%E3%80%91%E6%B4%9B%E8%B0%B7%20P4824%20Censoring%20S/"/>
      <url>/2021/03/25/ACM/%E3%80%90KMP%E3%80%91%E6%B4%9B%E8%B0%B7%20P4824%20Censoring%20S/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4824" target="_blank">题链</a></p><p>求出模式串的前缀数组后，一个个读入文本串字符，遇到与模式串相同的字串（前缀值与模式串长度$len$相等），弹出栈顶$len$个前缀函数值，相当于消去这$len$个长度的字符的影响，以栈的形式存储答案与文本串的前缀数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line"><span class="keyword">char</span> e[MS]; </span><br><span class="line">LL ac[MS];</span><br><span class="line">LL kpe[MS];</span><br><span class="line">LL kps[MS];</span><br><span class="line">LL hs,he,tac;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp_e</span><span class="params">()</span></span>&#123;</span><br><span class="line">he = <span class="built_in">strlen</span>(e);</span><br><span class="line">kpe[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;he;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> j=kpe[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">while</span>(j&gt;<span class="number">0</span> &amp;&amp; e[i] != e[j]) j = kpe[j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(e[i] == e[j]) j++;</span><br><span class="line">kpe[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; s; <span class="comment">// 文本串 </span></span><br><span class="line">cin &gt;&gt; e; <span class="comment">// 模式串 </span></span><br><span class="line"><span class="built_in">kmp_e</span>();</span><br><span class="line">hs = <span class="built_in">strlen</span>(s);</span><br><span class="line">tac = <span class="number">0</span>; <span class="comment">// 栈指针 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;i&lt;hs;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(j&gt;<span class="number">0</span> &amp;&amp; s[i] != e[j]) j = kpe[j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(s[i] == e[j]) j++;</span><br><span class="line">kps[i] = j; <span class="comment">// 前缀函数值 </span></span><br><span class="line"><span class="comment">/******************************************/</span> </span><br><span class="line">ac[tac] = i; <span class="comment">// 存储文本串位置i </span></span><br><span class="line"><span class="keyword">if</span>(j == he)&#123; <span class="comment">// 若相符 </span></span><br><span class="line">tac -= he; <span class="comment">// 栈顶弹出 长度与模式串同等数量 </span></span><br><span class="line">j = kps[ac[tac]]; <span class="comment">// 跳到上次位置 </span></span><br><span class="line">&#125;</span><br><span class="line">tac++;</span><br><span class="line"><span class="comment">/******************************************/</span> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tac;i++)&#123;</span><br><span class="line">cout &lt;&lt; s[ac[i]];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> KMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【左偏树】洛谷 P3377 【模板】左偏树（可并堆）</title>
      <link href="/2021/03/24/ACM/%E3%80%90%E5%B7%A6%E5%81%8F%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3377%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%B7%A6%E5%81%8F%E6%A0%91%EF%BC%88%E5%8F%AF%E5%B9%B6%E5%A0%86%EF%BC%89/"/>
      <url>/2021/03/24/ACM/%E3%80%90%E5%B7%A6%E5%81%8F%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3377%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%B7%A6%E5%81%8F%E6%A0%91%EF%BC%88%E5%8F%AF%E5%B9%B6%E5%A0%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3377" target="_blank">题链</a></p><h1 id="运用-STL"><a href="#运用-STL" class="headerlink" title="运用$STL$"></a>运用$STL$</h1><p><a href="https://blog.csdn.net/Khasehemwy/article/details/113828044" target="_blank">$STL$详解</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ext/pb_ds/priority_queue.hpp&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line">LL fa[MS];</span><br><span class="line">LL v[MS];</span><br><span class="line">__gnu_pbds::priority_queue&lt;Combine&gt; Q[MS];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">find</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x == fa[x]) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(LL x,LL y)</span></span>&#123;</span><br><span class="line">fa[<span class="built_in">find</span>(y)] = <span class="built_in">find</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">Q[i].<span class="built_in">push</span>(&#123;x,i&#125;);</span><br><span class="line">fa[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL op,x,y;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">LL fx = <span class="built_in">find</span>(x);</span><br><span class="line">LL fy = <span class="built_in">find</span>(y);</span><br><span class="line"><span class="keyword">if</span>(fx &gt; fy) <span class="built_in">swap</span>(fx,fy);</span><br><span class="line"><span class="keyword">if</span>(fx == fy || v[x] || v[y]) <span class="keyword">continue</span>;</span><br><span class="line">Q[fx].<span class="built_in">join</span>(Q[fy]);</span><br><span class="line"><span class="built_in">merge</span>(fx,fy);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span>(v[x])&#123;</span><br><span class="line">cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125; </span><br><span class="line">LL fx = <span class="built_in">find</span>(x);</span><br><span class="line">Pair ans = Q[fx].<span class="built_in">top</span>();</span><br><span class="line">v[ans.two] = <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; ans.one &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">Q[fx].<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="手写实现"><a href="#手写实现" class="headerlink" title="手写实现"></a>手写实现</h1><p><a href="https://www.luogu.com.cn/problem/P3377" target="_blank">题链</a></p><p><a href="https://oi-wiki.org/ds/leftist-tree/" target="_blank">OI-wiki</a></p><p><a href="https://ksmeow.moe/leftist_tree/" target="_blank">有图好评</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ext/rope&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ext/pb_ds/priority_queue.hpp&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_pbds;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Combine Pair, greater<span class="meta-string">&lt;Pair&gt;</span>, pairing_heap_tag</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;double,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod1 39989</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod2 1000000000</span></span><br><span class="line"></span><br><span class="line">LL n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL fa,l,r;</span><br><span class="line">LL val,d;</span><br><span class="line">&#125;p[MS];</span><br><span class="line">LL fa[MS];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">find</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x == p[x].fa) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> p[x].fa = <span class="built_in">find</span>(p[x].fa);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">merge</span><span class="params">(LL x,LL y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!x) <span class="keyword">return</span> y;</span><br><span class="line"><span class="keyword">if</span>(!y) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">if</span>(</span><br><span class="line">p[x].val &gt; p[y].val || </span><br><span class="line">(p[x].val == p[y].val &amp;&amp; x &gt; y) <span class="comment">// 保证有多个最小值时，优先删除先入队的 </span></span><br><span class="line">) <span class="built_in">swap</span>(x,y);</span><br><span class="line">p[x].r = <span class="built_in">merge</span>(p[x].r,y); <span class="comment">// 多次递归合并右子树 </span></span><br><span class="line"><span class="keyword">if</span>(p[p[x].r].d &gt; p[p[x].l].d)&#123; <span class="comment">// 保证左子树的d值始终大于等于右子树 </span></span><br><span class="line"><span class="built_in">swap</span>(p[x].l,p[x].r);</span><br><span class="line">&#125;</span><br><span class="line">p[p[x].r].fa = p[p[x].l].fa = x; <span class="comment">// 需要在多次递归后重定向fa的位置 </span></span><br><span class="line"></span><br><span class="line">p[x].d = p[p[x].r].d+<span class="number">1</span>; <span class="comment">// 更新d值 </span></span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">poptop</span><span class="params">(LL x)</span></span>&#123; </span><br><span class="line">p[p[x].l].fa = p[x].l; <span class="comment">// 将自己作为根，相当于合并两课子树 </span></span><br><span class="line">p[p[x].r].fa = p[x].r;</span><br><span class="line">p[x].val = <span class="number">-1</span>; <span class="comment">// 被删除值设为题给值范围外 </span></span><br><span class="line">p[x].fa = <span class="built_in">merge</span>(p[x].l,p[x].r); <span class="comment">// 将堆顶弹出后，该堆顶指向的父亲应该修改为它的孩子 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">p[<span class="number">0</span>].d = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">p[i] = &#123;i,<span class="number">0</span>,<span class="number">0</span>,x,<span class="number">0</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL op,x,y;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">LL fx = <span class="built_in">find</span>(x);</span><br><span class="line">LL fy = <span class="built_in">find</span>(y);</span><br><span class="line"><span class="keyword">if</span>(p[x].val == <span class="number">-1</span> || p[y].val == <span class="number">-1</span> || fx == fy) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">merge</span>(fx,fy);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span>(p[x].val == <span class="number">-1</span>) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">LL fx = <span class="built_in">find</span>(x);</span><br><span class="line">cout &lt;&lt; p[fx].val &lt;&lt; endl;</span><br><span class="line"><span class="built_in">poptop</span>(fx); <span class="comment">// 删除该点 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可并堆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】计算几何点，线，圆定义及相关模板</title>
      <link href="/2021/03/22/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E7%82%B9%EF%BC%8C%E7%BA%BF%EF%BC%8C%E5%9C%86%E5%AE%9A%E4%B9%89%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%A8%A1%E6%9D%BF/"/>
      <url>/2021/03/22/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E7%82%B9%EF%BC%8C%E7%BA%BF%EF%BC%8C%E5%9C%86%E5%AE%9A%E4%B9%89%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p><a href="https://linxi99.gitee.io/20190211/ACM%E5%87%A0%E4%BD%95%E5%9F%BA%E7%A1%80%E7%AF%87/" target="_blank">代码来源</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 200009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dcmp</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">nround</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> t)</span></span>; <span class="comment">// 四舍五入保留n位小数 , (保留3位小数)1.2100 =&gt; 1.21; </span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line"><span class="built_in">Point</span>(<span class="keyword">double</span> x=<span class="number">0</span>,<span class="keyword">double</span> y=<span class="number">0</span>):<span class="built_in">x</span>(x),<span class="built_in">y</span>(y)&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> Point Vector; <span class="comment">// 向量 </span></span><br><span class="line">Vector <span class="keyword">operator</span> + (Vector A,Vector B);</span><br><span class="line">Vector <span class="keyword">operator</span> - (Vector A,Vector B);</span><br><span class="line">Vector <span class="keyword">operator</span> * (Vector A,<span class="keyword">double</span> k);</span><br><span class="line">Vector <span class="keyword">operator</span> / (Vector A,<span class="keyword">double</span> k);</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Point&amp; a,<span class="keyword">const</span> Point&amp; b);</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> Point&amp; a,<span class="keyword">const</span> Point&amp; b);</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">PolarAngleCmp</span><span class="params">(Point a,Point b,Point start)</span></span>; <span class="comment">// 极角排序 </span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">PolarAngleCmp2</span><span class="params">(Point a,Point b,Point start)</span></span>; <span class="comment">// 极角排序另一种方法，速度快</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Vector A,Vector B)</span></span>; <span class="comment">// 内积  α·β=|α||β|cosθ</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Vector A, Vector B)</span></span>;<span class="comment">// 外积  α×β=|α||β|sinθ</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point a,Point b,Point c)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Dis</span><span class="params">(Point a,Point b)</span></span>;<span class="comment">// 两点距离 </span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Length</span><span class="params">(Vector A)</span></span>;<span class="comment">// 向量取模 </span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Angle</span><span class="params">(Vector A,Vector B)</span></span>;<span class="comment">// 计算两向量夹角 返回值为弧度制下的夹角 </span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Area2</span><span class="params">(Point a,Point b,Point c)</span></span>; <span class="comment">// 计算两向量构成的平行四边形有向面积 </span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Area2</span><span class="params">(Vector A,Vector B)</span></span>;<span class="comment">// 计算两向量构成的平行四边形有向面积 </span></span><br><span class="line"><span class="function">Vector <span class="title">Rotate</span><span class="params">(Vector A,<span class="keyword">double</span> rad)</span></span>;<span class="comment">// 计算向量逆时针旋转后的向量 </span></span><br><span class="line"><span class="function">Vector <span class="title">Normal</span><span class="params">(Vector A)</span></span>; <span class="comment">// 计算向量逆时针旋转九十度的单位法向量 </span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ToLeftTest</span><span class="params">(Point a,Point b,Point c)</span></span>;<span class="comment">//判断折线bc是不是向ab的逆时针方向（左边）转向</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ClosePoint</span><span class="params">(vector&lt;Point&gt; &amp;vc,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>; <span class="comment">// 平面最近点对 [l,r] </span></span><br><span class="line"><span class="comment">//Andrew算法 计算凸包，输入点数组为 p，个数为 n， 输出点数组为 ch。函数返回凸包顶点数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Andrew_ConvexHull</span><span class="params">(Point* p, <span class="keyword">int</span> n, Point* ch)</span></span>; </span><br><span class="line"><span class="comment">//Graham扫描法 计算凸包 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Graham_ConvexHull</span><span class="params">(Point* p, <span class="keyword">int</span> n, Point* cc)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Line</span>&#123;</span> <span class="comment">// 定义直线 ,参数方程 </span></span><br><span class="line">Point v, p; <span class="comment">// 直线上两点 ,以 v 为起点 </span></span><br><span class="line"><span class="built_in">Line</span>(Point v=&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,Point p=&#123;<span class="number">0</span>,<span class="number">0</span>&#125;):<span class="built_in">v</span>(v),<span class="built_in">p</span>(p)&#123;&#125;</span><br><span class="line"><span class="function">Point <span class="title">point</span><span class="params">(<span class="keyword">double</span> t)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> v + (p-v)*t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="comment">//计算两直线交点，必须保证直线相交，否则将会出现除以零的情况 </span></span><br><span class="line"><span class="comment">//调用前需保证 Cross(v, w) != 0</span></span><br><span class="line"><span class="function">Point <span class="title">GetLineIntersection</span><span class="params">(Point P,Vector v,Point Q,Vector w)</span></span>;</span><br><span class="line"><span class="comment">//点P到直线AB距离公式(取绝对值) </span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">DistanceToLine</span><span class="params">(Point P,Point A,Point B)</span></span>;</span><br><span class="line"><span class="comment">//计算点到线段的距离</span></span><br><span class="line"><span class="comment">//点P到线段AB距离公式</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">DistanceToSegment</span><span class="params">(Point P,Point A,Point B)</span></span>;</span><br><span class="line"><span class="comment">//点P在直线AB上的投影点</span></span><br><span class="line"><span class="function">Point <span class="title">GetLineProjection</span><span class="params">(Point P, Point A, Point B)</span></span>;</span><br><span class="line"><span class="comment">//判断点是否在线段上</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">OnSegment</span><span class="params">(Point p, Point a1, Point a2)</span></span>;</span><br><span class="line"><span class="comment">//判断两线段是否相交</span></span><br><span class="line"><span class="comment">//通过两次跨立实验</span></span><br><span class="line"><span class="comment">//不允许在顶点处相交</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SegmentProperIntersectionNo</span><span class="params">(Point a1, Point a2, Point b1, Point b2)</span></span>;</span><br><span class="line"><span class="comment">//允许在端点处相交</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SegmentProperIntersectionYes</span><span class="params">(Point a1, Point a2, Point b1, Point b2)</span></span>;</span><br><span class="line"><span class="comment">//求多边形面积  p为端点集合，n为端点个数 [0,n) </span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">PolygonArea</span><span class="params">(Point* p, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="comment">//判断点是否在多边形内，若点在多边形内返回1，在多边形外部返回0，在多边形上返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isPointInPolygon</span><span class="params">(Point p, vector&lt;Point&gt; poly)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算机中储存圆通常记录圆心坐标与半径</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Circle</span>&#123;</span></span><br><span class="line">    Point c;</span><br><span class="line">    <span class="keyword">double</span> r;</span><br><span class="line">    <span class="built_in">Circle</span>(Point c=&#123;<span class="number">0</span>,<span class="number">0</span>&#125;, <span class="keyword">double</span> r=<span class="number">0</span>):<span class="built_in">c</span>(c), <span class="built_in">r</span>(r) &#123;&#125;</span><br><span class="line">    <span class="function">Point <span class="title">point</span><span class="params">(<span class="keyword">double</span> a)</span></span>&#123;<span class="comment">//通过圆心角求坐标</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(c.x + <span class="built_in">cos</span>(a)*r, c.y + <span class="built_in">sin</span>(a)*r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 判断点在圆内 </span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">PointInCircle</span><span class="params">(Point A,Circle C)</span></span>;</span><br><span class="line"><span class="comment">//求圆与直线交点 返回t1,t2,存放于sol中 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLineCircleIntersection</span><span class="params">(Line L, Circle C, <span class="keyword">double</span>&amp; t1, <span class="keyword">double</span>&amp; t2, vector&lt;Point&gt;&amp; sol)</span></span>;</span><br><span class="line"><span class="comment">//两圆相交面积 通过计算两个圆相交所构成的两个扇形面积和减去其构成的筝形的面积</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">AreaOfOverlap</span><span class="params">(Point c1, <span class="keyword">double</span> r1, Point c2, <span class="keyword">double</span> r2)</span></span>;</span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">Point p[MS];</span><br><span class="line">Point tubao[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i].x &gt;&gt; p[i].y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n &lt;= <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0.00\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="built_in">Graham_ConvexHull</span>(p,n,tubao);</span><br><span class="line"><span class="keyword">double</span> ans = <span class="built_in">Dis</span>(tubao[<span class="number">0</span>],tubao[cnt<span class="number">-1</span>]);</span><br><span class="line"><span class="keyword">if</span>(cnt == <span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;cnt;i++)&#123;</span><br><span class="line">ans += <span class="built_in">Dis</span>(tubao[i<span class="number">-1</span>],tubao[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,ans);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// floor(x) 向下取整</span></span><br><span class="line"><span class="comment">// ceil(x)  向上取整</span></span><br><span class="line"><span class="comment">// round(x) 四舍五入 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">fabs</span>(x) &lt; eps) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x &gt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dcmp</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">fabs</span>(x-y) &lt; eps) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x &gt; y) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 四舍五入保留n位小数 , (保留3位小数)1.2100 =&gt; 1.21; </span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">nround</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line">LL k = <span class="built_in">pow</span>(<span class="number">10</span>,t);</span><br><span class="line"><span class="keyword">double</span> cc = x*k;</span><br><span class="line">cc = <span class="built_in">round</span>(cc);</span><br><span class="line"><span class="keyword">return</span> cc/k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Vector <span class="keyword">operator</span> + (Vector A,Vector B)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Point</span>(A.x+B.x,A.y+B.y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Vector <span class="keyword">operator</span> - (Vector A,Vector B)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Vector</span>(A.x-B.x,A.y-B.y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Vector <span class="keyword">operator</span> * (Vector A,<span class="keyword">double</span> k)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Vector</span>(A.x*k,A.y*k);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Vector <span class="keyword">operator</span> / (Vector A,<span class="keyword">double</span> k)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Vector</span>(A.x/k,A.y/k);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Point&amp; a,<span class="keyword">const</span> Point&amp; b)&#123; <span class="comment">// 从左下到右 </span></span><br><span class="line"><span class="keyword">if</span>(a.x == b.x) <span class="keyword">return</span> a.y &lt; b.y;</span><br><span class="line"><span class="keyword">return</span> a.x &lt; b.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> Point&amp; a,<span class="keyword">const</span> Point&amp; b)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">sgn</span>(a.x-b.x) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(a.y-b.y)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* α·β=|α||β|cosθ</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">向量α在向量β的投影α′（带有方向性）与β的长度乘积</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">若α与β的夹角为锐角，则其内积为正</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">若α与β的夹角为钝角，则其内积为负</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">若α与β的夹角为直角，则其内积为0 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Vector A,Vector B)</span></span>&#123; <span class="comment">// 内积  α·β=|α||β|cosθ</span></span><br><span class="line"><span class="keyword">return</span> A.x*B.x+A.y*B.y; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*α×β=|α||β|sinθ</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">θ 表示向量α旋转到向量β所经过的夹角 (右手定则)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">若β在α的逆时针方向，则为正值</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">顺时针则为负值</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">两向量共线则为0 */</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Vector A, Vector B)</span></span>&#123; <span class="comment">// 外积  α×β=|α||β|sinθ</span></span><br><span class="line">    <span class="keyword">return</span> A.x*B.y-A.y*B.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point a,Point b,Point c)</span></span>&#123; <span class="comment">// ab x ac</span></span><br><span class="line"><span class="keyword">return</span> (b.x-a.x)*(c.y-a.y)-(c.x-a.x)*(b.y-a.y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Dis</span><span class="params">(Point a,Point b)</span></span>&#123;<span class="comment">//计算距离</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((a.x-b.x)*(a.x-b.x)*<span class="number">1.0</span>+(a.y-b.y)*(a.y-b.y));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Length</span><span class="params">(Vector A)</span></span>&#123; <span class="comment">// 向量取模 </span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="built_in">Dot</span>(A,A));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Angle</span><span class="params">(Vector A,Vector B)</span></span>&#123; <span class="comment">//计算两向量夹角 返回值为弧度制下的夹角 </span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">acos</span>( <span class="built_in">Dot</span>(A,B) / (<span class="built_in">Length</span>(A)*<span class="built_in">Length</span>(B)) );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Area2</span><span class="params">(Point a,Point b,Point c)</span></span>&#123; <span class="comment">// 计算两向量构成的平行四边形有向面积 </span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Cross</span>(b-a,c-a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Area2</span><span class="params">(Vector A,Vector B)</span></span>&#123; <span class="comment">// 计算两向量构成的平行四边形有向面积 </span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Cross</span>(A,B);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Vector <span class="title">Rotate</span><span class="params">(Vector A,<span class="keyword">double</span> rad)</span></span>&#123; <span class="comment">// 计算向量逆时针旋转后的向量 </span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Vector</span>(A.x*<span class="built_in">cos</span>(rad)-A.y*<span class="built_in">sin</span>(rad), A.x*<span class="built_in">sin</span>(rad)+A.y*<span class="built_in">cos</span>(rad));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Vector <span class="title">Normal</span><span class="params">(Vector A)</span></span>&#123; <span class="comment">// 计算向量逆时针旋转九十度的单位法向量 </span></span><br><span class="line"><span class="keyword">double</span> len = <span class="built_in">Length</span>(A);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Vector</span>(-A.y/len ,A.x/len);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ToLeftTest</span><span class="params">(Point a,Point b,Point c)</span></span>&#123; <span class="comment">//判断折线bc是不是向ab的逆时针方向（左边）转向</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Cross</span>(b-a,c-b) &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//平面最近点对</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ClosePoint</span><span class="params">(vector&lt;Point&gt; &amp;vc,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(r-l&lt;=<span class="number">5</span>)&#123;</span><br><span class="line"><span class="keyword">double</span> ans = DBINF;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=r;j++)&#123;</span><br><span class="line">ans = <span class="built_in">min</span>(ans,<span class="built_in">Length</span>(vc[i]-vc[j]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="built_in">min</span>(<span class="built_in">ClosePoint</span>(vc,l,m),<span class="built_in">ClosePoint</span>(vc,m+<span class="number">1</span>,r));</span><br><span class="line">vector&lt;Point&gt; tvc;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(vc[i].x - vc[m].x) &lt;= ans)&#123;</span><br><span class="line">tvc.<span class="built_in">push_back</span>(vc[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(tvc.<span class="built_in">begin</span>(),tvc.<span class="built_in">end</span>(),[](Point k1,Point k2)&#123;<span class="keyword">return</span> k1.y&lt;k2.y;&#125;);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tvc.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;tvc.<span class="built_in">size</span>() &amp;&amp; tvc[j].y-tvc[i].y&lt;ans;j++)&#123;</span><br><span class="line">ans = <span class="built_in">min</span>(ans,<span class="built_in">Length</span>(tvc[i]-tvc[j]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//计算两直线交点，必须保证直线相交，否则将会出现除以零的情况 </span></span><br><span class="line"><span class="comment">//调用前需保证 Cross(v, w) != 0</span></span><br><span class="line"><span class="function">Point <span class="title">GetLineIntersection</span><span class="params">(Point P,Vector v,Point Q,Vector w)</span></span>&#123;</span><br><span class="line">Vector u = P-Q;</span><br><span class="line"><span class="keyword">double</span> t = <span class="built_in">Cross</span>(w,u)/<span class="built_in">Cross</span>(v,w);</span><br><span class="line"><span class="keyword">return</span> P+v*t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//点P到直线AB距离公式</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">DistanceToLine</span><span class="params">(Point P,Point A,Point B)</span></span>&#123;</span><br><span class="line">Vector v1 = B-A, v2 = P-A;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">fabs</span>(<span class="built_in">Cross</span>(v1,v2)/<span class="built_in">Length</span>(v1));</span><br><span class="line">&#125;<span class="comment">//不取绝对值，得到的是有向距离</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//计算点到线段的距离</span></span><br><span class="line"><span class="comment">//点P到线段AB距离公式</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">DistanceToSegment</span><span class="params">(Point P,Point A,Point B)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(A == B) <span class="keyword">return</span> <span class="built_in">Length</span>(P-A);</span><br><span class="line">Vector v1 = B-A ,v2 = P-A ,v3 = P-B;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">sgn</span>(<span class="built_in">Dot</span>(v1,v2)) &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">Length</span>(v2);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">sgn</span>(<span class="built_in">Dot</span>(v1,v3)) &gt; <span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">Length</span>(v3);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">DistanceToLine</span>(P,A,B);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//点P在直线AB上的投影点</span></span><br><span class="line"><span class="function">Point <span class="title">GetLineProjection</span><span class="params">(Point P, Point A, Point B)</span></span>&#123;</span><br><span class="line">    Vector v = B-A;</span><br><span class="line">    <span class="keyword">return</span> A+v*(<span class="built_in">Dot</span>(v, P-A)/<span class="built_in">Dot</span>(v, v));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断点是否在线段上</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">OnSegment</span><span class="params">(Point p, Point a1, Point a2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sgn</span>(<span class="built_in">Cross</span>(a1-p, a2-p)) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(<span class="built_in">Dot</span>(a1-p, a2-p)) &lt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断两线段是否相交</span></span><br><span class="line"><span class="comment">//通过两次跨立实验</span></span><br><span class="line"><span class="comment">//不允许在顶点处相交</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SegmentProperIntersectionNo</span><span class="params">(Point a1, Point a2, Point b1, Point b2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> c1 = <span class="built_in">Cross</span>(a2 - a1, b1 - a1), c2 = <span class="built_in">Cross</span>(a2 - a1, b2 - a1);</span><br><span class="line">    <span class="keyword">double</span> c3 = <span class="built_in">Cross</span>(b2 - b1, a1 - b1), c4 = <span class="built_in">Cross</span>(b2 - b1, a2 - b1);</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">sgn</span>(c1)*<span class="built_in">sgn</span>(c2) &lt; <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(c3)*<span class="built_in">sgn</span>(c4) &lt; <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//允许在端点处相交</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SegmentProperIntersectionYes</span><span class="params">(Point a1, Point a2, Point b1, Point b2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> c1 = <span class="built_in">Cross</span>(a2-a1, b1-a1), c2 = <span class="built_in">Cross</span>(a2-a1, b2-a1);</span><br><span class="line">    <span class="keyword">double</span> c3 = <span class="built_in">Cross</span>(b2-b1, a1-b1), c4 = <span class="built_in">Cross</span>(b2-b1, a2-b1);</span><br><span class="line">    <span class="comment">//if判断控制是否允许线段在端点处相交，根据需要添加</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">sgn</span>(c1) || !<span class="built_in">sgn</span>(c2) || !<span class="built_in">sgn</span>(c3) || !<span class="built_in">sgn</span>(c4))&#123;</span><br><span class="line">        <span class="keyword">bool</span> f1 = <span class="built_in">OnSegment</span>(b1, a1, a2);</span><br><span class="line">        <span class="keyword">bool</span> f2 = <span class="built_in">OnSegment</span>(b2, a1, a2);</span><br><span class="line">        <span class="keyword">bool</span> f3 = <span class="built_in">OnSegment</span>(a1, b1, b2);</span><br><span class="line">        <span class="keyword">bool</span> f4 = <span class="built_in">OnSegment</span>(a2, b1, b2);</span><br><span class="line">        <span class="keyword">bool</span> f = (f1|f2|f3|f4);</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">sgn</span>(c1)*<span class="built_in">sgn</span>(c2) &lt; <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(c3)*<span class="built_in">sgn</span>(c4) &lt; <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求多边形面积</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">PolygonArea</span><span class="params">(Point* p, <span class="keyword">int</span> n)</span></span>&#123;<span class="comment">//p为端点集合，n为端点个数</span></span><br><span class="line">    <span class="keyword">double</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n<span class="number">-1</span>; ++i)</span><br><span class="line">        s += <span class="built_in">Cross</span>(p[i]-p[<span class="number">0</span>], p[i+<span class="number">1</span>]-p[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">fabs</span>(s/<span class="number">2.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断点是否在多边形内，若点在多边形内返回1，在多边形外部返回0，在多边形上返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isPointInPolygon</span><span class="params">(Point p, vector&lt;Point&gt; poly)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> wn = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n = poly.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">OnSegment</span>(p, poly[i], poly[(i+<span class="number">1</span>)%n])) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="built_in">sgn</span>(<span class="built_in">Cross</span>(poly[(i+<span class="number">1</span>)%n] - poly[i], p - poly[i]));</span><br><span class="line">        <span class="keyword">int</span> d1 = <span class="built_in">sgn</span>(poly[i].y - p.y);</span><br><span class="line">        <span class="keyword">int</span> d2 = <span class="built_in">sgn</span>(poly[(i+<span class="number">1</span>)%n].y - p.y);</span><br><span class="line">        <span class="keyword">if</span>(k &gt; <span class="number">0</span> &amp;&amp; d1 &lt;= <span class="number">0</span> &amp;&amp; d2 &gt; <span class="number">0</span>) wn++;</span><br><span class="line">        <span class="keyword">if</span>(k &lt; <span class="number">0</span> &amp;&amp; d2 &lt;= <span class="number">0</span> &amp;&amp; d1 &gt; <span class="number">0</span>) wn--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(wn != <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断点在圆内 </span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">PointInCircle</span><span class="params">(Point A,Circle C)</span></span>&#123;</span><br><span class="line">Vector p = A-C.c;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Length</span>(p) &lt; C.r; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求圆与直线交点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLineCircleIntersection</span><span class="params">(Line L, Circle C, <span class="keyword">double</span>&amp; t1, <span class="keyword">double</span>&amp; t2, vector&lt;Point&gt;&amp; sol)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> a = L.v.x, b = L.p.x - C.c.x, c = L.v.y, d = L.p.y - C.c.y;</span><br><span class="line">    <span class="keyword">double</span> e = a*a + c*c, f = <span class="number">2</span>*(a*b + c*d), g = b*b + d*d - C.r*C.r;</span><br><span class="line">    <span class="keyword">double</span> delta = f*f - <span class="number">4</span>*e*g;<span class="comment">//判别式</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">sgn</span>(delta) &lt; <span class="number">0</span>)<span class="comment">//相离</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">sgn</span>(delta) == <span class="number">0</span>)&#123;<span class="comment">//相切</span></span><br><span class="line">        t1 = -f /(<span class="number">2</span>*e);</span><br><span class="line">        t2 = -f /(<span class="number">2</span>*e);</span><br><span class="line">        sol.<span class="built_in">push_back</span>(L.<span class="built_in">point</span>(t1));<span class="comment">//sol存放交点本身</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//相交</span></span><br><span class="line">    t1 = (-f - <span class="built_in">sqrt</span>(delta))/(<span class="number">2</span>*e);</span><br><span class="line">    sol.<span class="built_in">push_back</span>(L.<span class="built_in">point</span>(t1));</span><br><span class="line">    t2 = (-f + <span class="built_in">sqrt</span>(delta))/(<span class="number">2</span>*e);</span><br><span class="line">    sol.<span class="built_in">push_back</span>(L.<span class="built_in">point</span>(t2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//两圆相交面积 通过计算两个圆相交所构成的两个扇形面积和减去其构成的筝形的面积</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">AreaOfOverlap</span><span class="params">(Point c1, <span class="keyword">double</span> r1, Point c2, <span class="keyword">double</span> r2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> d = <span class="built_in">Length</span>(c1 - c2);</span><br><span class="line">    <span class="keyword">if</span>(r1 + r2 &lt; d + eps)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">if</span>(d &lt; <span class="built_in">fabs</span>(r1 - r2) + eps)&#123;</span><br><span class="line">        <span class="keyword">double</span> r = <span class="built_in">min</span>(r1, r2);</span><br><span class="line">        <span class="keyword">return</span> Pi*r*r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> x = (d*d + r1*r1 - r2*r2)/(<span class="number">2.0</span>*d);</span><br><span class="line">    <span class="keyword">double</span> p = (r1 + r2 + d)/<span class="number">2.0</span>;</span><br><span class="line">    <span class="keyword">double</span> t1 = <span class="built_in">acos</span>(x/r1);</span><br><span class="line">    <span class="keyword">double</span> t2 = <span class="built_in">acos</span>((d - x)/r2);</span><br><span class="line">    <span class="keyword">double</span> s1 = r1*r1*t1;</span><br><span class="line">    <span class="keyword">double</span> s2 = r2*r2*t2;</span><br><span class="line">    <span class="keyword">double</span> s3 = <span class="number">2</span>*<span class="built_in">sqrt</span>(p*(p - r1)*(p - r2)*(p - d));</span><br><span class="line">    <span class="keyword">return</span> s1 + s2 - s3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Andrew算法 计算凸包，输入点数组为 p，个数为 n， 输出点数组为 ch。函数返回凸包顶点数</span></span><br><span class="line"><span class="comment">//如果不希望凸包的边上有输入点，则把两个 &lt;= 改为 &lt;</span></span><br><span class="line"><span class="comment">//在精度要求高时建议用dcmp比较</span></span><br><span class="line"><span class="comment">//输入不能有重复点，函数执行完后输入点的顺序被破坏</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Andrew_ConvexHull</span><span class="params">(Point* p, <span class="keyword">int</span> n, Point* ch)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">sort</span>(p, p+n);</span><br><span class="line">    <span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">while</span>(m &gt; <span class="number">1</span> &amp;&amp; <span class="built_in">Cross</span>(ch[m<span class="number">-1</span>] - ch[m<span class="number">-2</span>], p[i] - ch[m<span class="number">-2</span>]) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            m--;</span><br><span class="line">        &#125;</span><br><span class="line">        ch[m++] = p[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k = m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = n<span class="number">-2</span>; i&gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">        <span class="keyword">while</span>(m &gt; k &amp;&amp; <span class="built_in">Cross</span>(ch[m<span class="number">-1</span>] - ch[m<span class="number">-2</span>], p[i] - ch[m<span class="number">-2</span>]) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            m--;</span><br><span class="line">        &#125;</span><br><span class="line">        ch[m++] = p[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n &gt; <span class="number">1</span>)</span><br><span class="line">        --m;</span><br><span class="line">    <span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Graham扫描法 计算凸包 </span></span><br><span class="line"><span class="keyword">double</span> xx,yy;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Graham_ConvexHull</span><span class="params">(Point* p, <span class="keyword">int</span> n, Point* cc)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</span><br><span class="line">cc[<span class="number">0</span>] = p[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(p,p+n);</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">cc[cnt++] = p[<span class="number">0</span>];</span><br><span class="line">xx = p[<span class="number">0</span>].x;</span><br><span class="line">yy = p[<span class="number">0</span>].y;</span><br><span class="line"><span class="built_in">sort</span>(p+<span class="number">1</span>,p+n,[](Point a,Point b)&#123; <span class="comment">// 极角排序 2 </span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">atan2</span>(a.y-yy,a.x-xx)!=<span class="built_in">atan2</span>(b.y-yy,b.x-xx))</span><br><span class="line">        <span class="built_in"><span class="keyword">return</span></span> (<span class="built_in">atan2</span>(a.y-yy,a.x-xx))&lt;(<span class="built_in">atan2</span>(b.y-yy,b.x-xx));</span><br><span class="line">    <span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line">&#125;);</span><br><span class="line">cc[cnt++] = p[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">Cross</span>(cc[cnt<span class="number">-2</span>],cc[cnt<span class="number">-1</span>],p[i]) &lt; <span class="number">0</span>) cnt--;</span><br><span class="line">cc[cnt++] = p[i];</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】计算任意多边形的面积</title>
      <link href="/2021/03/21/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E8%AE%A1%E7%AE%97%E4%BB%BB%E6%84%8F%E5%A4%9A%E8%BE%B9%E5%BD%A2%E7%9A%84%E9%9D%A2%E7%A7%AF/"/>
      <url>/2021/03/21/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E8%AE%A1%E7%AE%97%E4%BB%BB%E6%84%8F%E5%A4%9A%E8%BE%B9%E5%BD%A2%E7%9A%84%E9%9D%A2%E7%A7%AF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point2d</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算任意多边形的面积，顶点按照顺时针或者逆时针方向排列</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ComputePolygonArea</span><span class="params">(<span class="keyword">const</span> vector&lt;Point2d&gt; &amp;points)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> point_num = points.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">if</span>(point_num &lt; <span class="number">3</span>)<span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">double</span> s = points[<span class="number">0</span>].y * (points[point_num<span class="number">-1</span>].x - points[<span class="number">1</span>].x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; point_num; ++i)</span><br><span class="line">s += points[i].y * (points[i<span class="number">-1</span>].x - points[(i+<span class="number">1</span>)%point_num].x);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">fabs</span>(s/<span class="number">2.0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【KMP】KMP字符串匹配</title>
      <link href="/2021/03/17/ACM/%E3%80%90KMP%E3%80%91KMP%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/"/>
      <url>/2021/03/17/ACM/%E3%80%90KMP%E3%80%91KMP%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<p>#前言</p><p>学自<a href="https://oi-wiki.org/string/kmp/" target="_blank">OI-wiki 前缀函数与kmp</a></p><p>##第二个优化</p><p>从第二个优化开始我看的时间比较久，如图部分</p><p><img src="https://img2020.cnblogs.com/blog/2062718/202103/2062718-20210317160347797-1555616857.png"></p><p>其中公式</p><p><img src="https://img2020.cnblogs.com/blog/2062718/202103/2062718-20210317160431751-1018531489.png"></p><p>看了挺久，主要是第二个部分到第三个部分，关于这个转换，在例图展示中如</p><p><img src="https://img2020.cnblogs.com/blog/2062718/202103/2062718-20210317160557574-763404376.png"></p><p>因为 s[0…3] == s[(i-3)…i] &amp;&amp; s[0…1] == s[(i-1)…i]，所以 s[0…1] == s[2…3] 的，所以指针 j 就可以直接转到 pi[j-1] 的地方，开始比较 s[j] 与 s[i+1];</p><p><img src="https://img2020.cnblogs.com/blog/2062718/202103/2062718-20210317161242927-685179460.png"></p><p>真的很佩服这三个人（跪下）</p><h2 id="j指针转移样例"><a href="#j指针转移样例" class="headerlink" title="j指针转移样例"></a>j指针转移样例</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202103/2062718-20210317163315413-1215274202.png"></p><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="洛谷P3375-【模板】KMP字符串匹配"><a href="#洛谷P3375-【模板】KMP字符串匹配" class="headerlink" title="洛谷P3375 【模板】KMP字符串匹配"></a>洛谷P3375 【模板】KMP字符串匹配</h2><p><a href="https://www.luogu.com.cn/problem/P3375" target="_blank">题链</a></p><p>字符以 0 为开头写</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="keyword">char</span> s[MS]; <span class="comment">// 文本串 </span></span><br><span class="line"><span class="keyword">char</span> e[MS]; <span class="comment">// 模式串 </span></span><br><span class="line">LL hs,he;  <span class="comment">// 串长 </span></span><br><span class="line">LL kp[MS]; <span class="comment">// 模式串 e 的前缀数组 </span></span><br><span class="line">LL kps[MS];<span class="comment">// 文本串 s 的前缀数组 </span></span><br><span class="line">LL ac[MS],tac;<span class="comment">// 记录答案 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp_e</span><span class="params">()</span></span>&#123; <span class="comment">// 求模式串 e 的前缀数组 </span></span><br><span class="line">kp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;he;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> j = kp[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">while</span>(j&gt;<span class="number">0</span> &amp;&amp; e[j] != e[i]) j = kp[j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(e[j] == e[i]) j++;</span><br><span class="line">kp[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp_s</span><span class="params">()</span></span>&#123; <span class="comment">// 求文本串 s 的前缀数组  </span></span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;hs;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(j&gt;<span class="number">0</span> &amp;&amp; s[i] != e[j]) j = kp[j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(s[i] == e[j]) j++;</span><br><span class="line">kps[i] = j; <span class="comment">// 记录 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">cin &gt;&gt; e;</span><br><span class="line">hs = <span class="built_in">strlen</span>(s);</span><br><span class="line">he = <span class="built_in">strlen</span>(e);</span><br><span class="line"><span class="built_in">kmp_e</span>();</span><br><span class="line"><span class="built_in">kmp_s</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;hs;i++)&#123; <span class="comment">// 若 s 前缀数组的值 与 模式串 e 相等 则记录位置 </span></span><br><span class="line"><span class="keyword">if</span>(kps[i] == he)&#123;</span><br><span class="line">ac[++tac] = i-he+<span class="number">1</span>+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tac;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;he;i++)&#123;</span><br><span class="line">cout &lt;&lt; kp[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时隔一个多月还是写一写以 1 为开头的kmp;</p><p>感觉 1 开头的舒服些；</p><p>领悟了下 $j$ 指针总是在模式串上跑的；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DBINF 1e100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">char</span> s1[MS];</span><br><span class="line"><span class="keyword">char</span> s2[MS];</span><br><span class="line"><span class="keyword">int</span> kmps1_s2[MS];</span><br><span class="line"><span class="keyword">int</span> kmps2[MS];</span><br><span class="line"><span class="keyword">int</span> ac[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; s1+<span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; s2+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> h1 = <span class="built_in">strlen</span>(s1+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> h2 = <span class="built_in">strlen</span>(s2+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>,j=<span class="number">0</span>;i&lt;=h2;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(j &amp;&amp; s2[i] != s2[j+<span class="number">1</span>]) j = kmps2[j];</span><br><span class="line"><span class="keyword">if</span>(s2[i] == s2[j+<span class="number">1</span>]) j++;</span><br><span class="line">kmps2[i] = j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=<span class="number">0</span>;i&lt;=h1;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(j &amp;&amp; s1[i] != s2[j+<span class="number">1</span>]) j = kmps2[j]; <span class="comment">// j 指针总是在模式串上的 kmp 跑 </span></span><br><span class="line"><span class="keyword">if</span>(s1[i] == s2[j+<span class="number">1</span>]) j++;</span><br><span class="line">kmps1_s2[i] = j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=h1;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(kmps1_s2[i] == h2)&#123;</span><br><span class="line">ac[++tot] = i-h2+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;i++)&#123;</span><br><span class="line">cout &lt;&lt; ac[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=h2;i++)&#123;</span><br><span class="line">cout &lt;&lt; kmps2[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又时隔4个多月，用$fft$板子试试字符串匹配，当然求$border$还是$kmp$；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">char</span> s1[MS], s2[MS];</span><br><span class="line"><span class="keyword">int</span> kmps2[MS];</span><br><span class="line"><span class="keyword">int</span> h1, h2;</span><br><span class="line"><span class="keyword">double</span> A[MS], B[MS], S[MS];</span><br><span class="line"><span class="keyword">double</span> sumB, qzA[MS], jjSA[MS&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 洛谷 P3803 【模板】多项式乘法（FFT）</span></span><br><span class="line"><span class="comment">// MS = 1e6 </span></span><br><span class="line"><span class="comment">// time: max( 800ms ) </span></span><br><span class="line"><span class="comment">// ========================================================================================</span></span><br><span class="line"><span class="keyword">typedef</span> complex&lt;<span class="keyword">double</span>&gt; comp;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = (<span class="number">1</span>&lt;&lt;<span class="number">21</span>)+<span class="number">10</span>; <span class="comment">// 长度为原长度向上的2^n, 再乘 2  </span></span><br><span class="line"><span class="keyword">int</span> lim, r[N];</span><br><span class="line">comp a[N], b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(comp * a, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lim; i ++)</span><br><span class="line"><span class="keyword">if</span>(i &lt; r[i]) <span class="built_in">swap</span>(a[i], a[r[i]]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; lim; i &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line"><span class="function">comp <span class="title">x</span><span class="params">(cos(PI / i), type * sin(PI / i))</span></span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lim; j += (i &lt;&lt; <span class="number">1</span>)) &#123;</span><br><span class="line"><span class="function">comp <span class="title">y</span><span class="params">(<span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k ++, y *= x) &#123;</span><br><span class="line">comp p = a[j + k], q = y * a[j + k + i];</span><br><span class="line">a[j + k] = p + q; a[j + k + i] = p - q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [0, n], [0, m]</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get</span><span class="params">(<span class="keyword">double</span> *c1, <span class="keyword">int</span> n, <span class="keyword">double</span> *c2, <span class="keyword">int</span> m)</span></span>&#123; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i ++) a[i] = c1[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i ++) b[i] = c2[i];</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(lim = <span class="number">1</span>; lim &lt;= n + m; lim &lt;&lt;= <span class="number">1</span>) ++ l;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lim; i ++)</span><br><span class="line">r[i] = (r[i &gt;&gt; <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) | ((i &amp; <span class="number">1</span>) &lt;&lt; (l - <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">fft</span>(a, <span class="number">1</span>), <span class="built_in">fft</span>(b, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= lim; i ++) a[i] *= b[i];</span><br><span class="line"><span class="built_in">fft</span>(a, <span class="number">-1</span>);</span><br><span class="line"><span class="comment">// 得出系数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + m; i ++) jjSA[i] = (LL)(<span class="number">0.5</span> + a[i].<span class="built_in">real</span>() / lim);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ========================================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(j &amp;&amp; s[i] != s[j]) j = kmps2[j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(s[i] == s[j]) j++;</span><br><span class="line">kmps2[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s1); <span class="built_in">getchar</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s2); <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">int</span> h1 = <span class="built_in">strlen</span>(s1), h2 = <span class="built_in">strlen</span>(s2);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h1;i++) A[i] = s1[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>; <span class="comment">// 文本串 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h2;i++) B[i] = s2[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>; <span class="comment">// 模式串 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h2;i++) S[i] = B[h2-i<span class="number">-1</span>];  <span class="comment">// 模式串翻转 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ∑B(i)^2 =&gt; sumB</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h2;i++) sumB += B[i]*B[i];</span><br><span class="line"></span><br><span class="line"><span class="comment">// ∑A(i)^2 的前缀 =&gt; qzA[]</span></span><br><span class="line">qzA[<span class="number">0</span>] = A[<span class="number">0</span>]*A[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;h1;i++) qzA[i] = qzA[i<span class="number">-1</span>] + A[i]*A[i];</span><br><span class="line"></span><br><span class="line"><span class="comment">// ∑S(i)A(j) =&gt; jjSA[]</span></span><br><span class="line"><span class="comment">// i+j=x</span></span><br><span class="line"><span class="built_in">get</span>(S, h2<span class="number">-1</span>, A, h1<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// P(x) = sumB + qzA[x] - qzA[x-h2] - 2*jjSA[x]</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=h2<span class="number">-1</span>;x&lt;h1;x++)&#123;</span><br><span class="line"><span class="keyword">double</span> P;</span><br><span class="line"><span class="keyword">if</span>(x == h2<span class="number">-1</span>) P = sumB + qzA[x] - jjSA[x]*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> P = sumB + qzA[x] - qzA[x-h2] - jjSA[x]*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(P) &lt; eps)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,x-h2+<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">kmp</span>(s2, h2);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h2;i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,kmps2[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> KMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【字符串哈希】字符串哈希</title>
      <link href="/2021/03/16/ACM/%E3%80%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C%E3%80%91%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/"/>
      <url>/2021/03/16/ACM/%E3%80%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C%E3%80%91%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/</url>
      
        <content type="html"><![CDATA[<p>#前言</p><p>均使用unsigned long long溢出自动取模；</p><p>非unsigned long long版本：<a href="https://oi-wiki.org/string/hash/" target="_blank">OI-wiki 字符串hash</a></p><p>#详解</p><p><img src="https://img2020.cnblogs.com/blog/2062718/202103/2062718-20210316154106303-1265303095.png"></p><p><img src="https://img2020.cnblogs.com/blog/2062718/202103/2062718-20210316154114439-558790842.jpg"></p><p>#模板</p><p>##预处理进制B的次方</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_bp</span><span class="params">()</span></span>&#123;</span><br><span class="line">bp[<span class="number">0</span>][<span class="number">0</span>] = bp[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=hs;i++)&#123; <span class="comment">// hs: 字符串最大长度</span></span><br><span class="line">bp[<span class="number">0</span>][i] = bp[<span class="number">0</span>][i<span class="number">-1</span>]*B1;</span><br><span class="line">bp[<span class="number">1</span>][i] = bp[<span class="number">1</span>][i<span class="number">-1</span>]*B2;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##前缀hash</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_ha</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; <span class="comment">// 1...len</span></span><br><span class="line">++tha;</span><br><span class="line">ha[<span class="number">0</span>][tha] = ha[<span class="number">0</span>][tha<span class="number">-1</span>]*B1 + x;</span><br><span class="line">ha[<span class="number">1</span>][tha] = ha[<span class="number">1</span>][tha<span class="number">-1</span>]*B2 + x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##l…r的hash值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LL <span class="title">get_ha</span><span class="params">(<span class="keyword">int</span> wh,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123; <span class="comment">// 1...len</span></span><br><span class="line"><span class="keyword">return</span> ha[wh][r] - ha[wh][l<span class="number">-1</span>]*bp[wh][r-l+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#例题</p><p>##例题一</p><p><a href="https://www.acwing.com/problem/content/140/" target="_blank">ACwing 兔子与兔子</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line">LL hs;</span><br><span class="line">ULL bp[<span class="number">2</span>][MS];</span><br><span class="line">ULL ha[<span class="number">2</span>][MS],tha;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_bp</span><span class="params">()</span></span>&#123;</span><br><span class="line">bp[<span class="number">0</span>][<span class="number">0</span>] = bp[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=hs;i++)&#123;</span><br><span class="line">bp[<span class="number">0</span>][i] = bp[<span class="number">0</span>][i<span class="number">-1</span>]*B1;</span><br><span class="line">bp[<span class="number">1</span>][i] = bp[<span class="number">1</span>][i<span class="number">-1</span>]*B2;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_ha</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">++tha;</span><br><span class="line">ha[<span class="number">0</span>][tha] = ha[<span class="number">0</span>][tha<span class="number">-1</span>]*B1 + x;</span><br><span class="line">ha[<span class="number">1</span>][tha] = ha[<span class="number">1</span>][tha<span class="number">-1</span>]*B2 + x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_ha</span><span class="params">(<span class="keyword">int</span> wh,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> ha[wh][r] - ha[wh][l<span class="number">-1</span>]*bp[wh][r-l+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; s+<span class="number">1</span>;</span><br><span class="line">hs = <span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">init_bp</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=hs;i++)&#123;</span><br><span class="line"><span class="built_in">add_ha</span>(s[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL l1,r1,l2,r2;</span><br><span class="line">cin &gt;&gt; l1 &gt;&gt; r1 &gt;&gt; l2 &gt;&gt; r2;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">get_ha</span>(<span class="number">0</span>,l1,r1) == <span class="built_in">get_ha</span>(<span class="number">0</span>,l2,r2) &amp;&amp; <span class="built_in">get_ha</span>(<span class="number">1</span>,l1,r1) == <span class="built_in">get_ha</span>(<span class="number">1</span>,l2,r2)) cout &lt;&lt; <span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##例题二</p><p><a href="https://www.luogu.com.cn/problem/P3370" target="_blank">洛谷P3370 【模板】字符串哈希</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B1 131</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B2 13331</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line">LL hs;</span><br><span class="line">ULL bp[<span class="number">2</span>][MS];</span><br><span class="line">ULL ha[<span class="number">2</span>][MS],tha;</span><br><span class="line">map&lt;ULL,map&lt;ULL,ULL&gt; &gt; mp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_bp</span><span class="params">()</span></span>&#123;</span><br><span class="line">bp[<span class="number">0</span>][<span class="number">0</span>] = bp[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1ll</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2000</span>;i++)&#123;</span><br><span class="line">bp[<span class="number">0</span>][i] = bp[<span class="number">0</span>][i<span class="number">-1</span>]*B1;</span><br><span class="line">bp[<span class="number">1</span>][i] = bp[<span class="number">1</span>][i<span class="number">-1</span>]*B2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_ha</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line">++tha;</span><br><span class="line">ha[<span class="number">0</span>][tha] = ha[<span class="number">0</span>][tha<span class="number">-1</span>]*B1+x;</span><br><span class="line">ha[<span class="number">1</span>][tha] = ha[<span class="number">1</span>][tha<span class="number">-1</span>]*B2+x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ULL <span class="title">get_ha</span><span class="params">(<span class="keyword">int</span> wh,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> ha[wh][r] - ha[wh][l<span class="number">-1</span>]*bp[wh][r-l+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line">cin &gt;&gt; s+<span class="number">1</span>;</span><br><span class="line">LL hs = <span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">tha = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=hs;i++)&#123;</span><br><span class="line"><span class="built_in">add_ha</span>(s[i]);</span><br><span class="line">&#125;</span><br><span class="line">ULL t1 = <span class="built_in">get_ha</span>(<span class="number">0</span>,<span class="number">1</span>,hs);</span><br><span class="line">ULL t2 = <span class="built_in">get_ha</span>(<span class="number">1</span>,<span class="number">1</span>,hs);</span><br><span class="line"><span class="keyword">if</span>(!mp[t1][t2])&#123;</span><br><span class="line">mp[t1][t2] = <span class="number">1ull</span>;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护最大子段和】洛谷 P4513 小白逛公园</title>
      <link href="/2021/03/16/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%91%E6%B4%9B%E8%B0%B7%20P4513%20%E5%B0%8F%E7%99%BD%E9%80%9B%E5%85%AC%E5%9B%AD/"/>
      <url>/2021/03/16/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%91%E6%B4%9B%E8%B0%B7%20P4513%20%E5%B0%8F%E7%99%BD%E9%80%9B%E5%85%AC%E5%9B%AD/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4513" target="_blank">题链</a></p><p>题意求区间最长连续子序列最大和</p><p>当数据存在负数时，不能单纯取三个地方的$max$，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p[rt].maxn = max(p[ls].rmax+p[rs].lmax,max(p[rt].lmax,p[rt].rmax));</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL sum;</span><br><span class="line">LL lmax,rmax;</span><br><span class="line">LL maxn;</span><br><span class="line">&#125;p[MS&lt;&lt;<span class="number">2</span>]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt].sum = p[ls].sum + p[rs].sum;</span><br><span class="line">p[rt].lmax = <span class="built_in">max</span>(p[ls].lmax,p[ls].sum+p[rs].lmax);</span><br><span class="line">p[rt].rmax = <span class="built_in">max</span>(p[rs].rmax,p[rs].sum+p[ls].rmax);</span><br><span class="line"></span><br><span class="line"><span class="comment">//p[rt].maxn = max(p[ls].rmax+p[rs].lmax,max(p[rt].lmax,p[rt].rmax)); // 当数据存在负数时，该条不成立 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************************/</span> <span class="comment">// 将所有可能对maxn产生影响的都取最大 </span></span><br><span class="line">LL sidemax = <span class="built_in">max</span>(p[rt].lmax,p[rt].rmax);</span><br><span class="line">LL midmax = <span class="built_in">max</span>(p[ls].rmax,p[rs].lmax);</span><br><span class="line">LL lrmaxn = <span class="built_in">max</span>(p[ls].maxn,p[rs].maxn);</span><br><span class="line">p[rt].maxn = <span class="built_in">max</span>(sidemax,midmax);</span><br><span class="line">p[rt].maxn = <span class="built_in">max</span>(p[rt].maxn,lrmaxn);</span><br><span class="line">p[rt].maxn = <span class="built_in">max</span>(p[rt].maxn,p[ls].rmax+p[rs].lmax);</span><br><span class="line"><span class="comment">/**************************************************/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">LL x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">p[rt] = &#123;x,x,x,x&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt] = &#123;val,val,val,val&#125;;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node <span class="title">get_max</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">node ans;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= m &amp;&amp; m &lt; R)&#123;</span><br><span class="line">node t1 = <span class="built_in">get_max</span>(L,R,l,m,ls);</span><br><span class="line">node t2 = <span class="built_in">get_max</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line">ans.lmax = <span class="built_in">max</span>(t1.lmax,t1.sum+t2.lmax);</span><br><span class="line">ans.rmax = <span class="built_in">max</span>(t2.rmax,t2.sum+t1.rmax);</span><br><span class="line">ans.sum = t1.sum + t2.sum;</span><br><span class="line"><span class="comment">/**************************************************/</span> <span class="comment">// 将所有可能对maxn产生影响的都取最大 </span></span><br><span class="line">LL sidemax = <span class="built_in">max</span>(ans.lmax,ans.rmax);</span><br><span class="line">LL midmax = <span class="built_in">max</span>(t1.rmax,t2.lmax);</span><br><span class="line">LL lrmax = <span class="built_in">max</span>(t1.maxn,t2.maxn);</span><br><span class="line">ans.maxn = <span class="built_in">max</span>(sidemax,midmax);</span><br><span class="line">ans.maxn = <span class="built_in">max</span>(ans.maxn,lrmax);</span><br><span class="line">ans.maxn = <span class="built_in">max</span>(ans.maxn,t1.rmax+t2.lmax);</span><br><span class="line"><span class="comment">/**************************************************/</span></span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(m &lt; L) <span class="keyword">return</span> <span class="built_in">get_max</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">get_max</span>(L,R,l,m,ls); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL op,l,r,pos,tar;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">if</span>(l &gt; r) <span class="built_in">swap</span>(l,r); <span class="comment">// 不交换则会在 TLE 之前就会出现 MLE </span></span><br><span class="line">node cc = <span class="built_in">get_max</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">cout &lt;&lt; cc.maxn &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cin &gt;&gt; pos &gt;&gt; tar;</span><br><span class="line"><span class="built_in">update</span>(pos,pos,<span class="number">1</span>,n,<span class="number">1</span>,tar);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】洛谷 P2471 降雨量</title>
      <link href="/2021/03/16/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P2471%20%E9%99%8D%E9%9B%A8%E9%87%8F/"/>
      <url>/2021/03/16/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P2471%20%E9%99%8D%E9%9B%A8%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2471" target="_blank">题链</a></p><p>该题洛谷题解区讲的都很好；</p><p>当询问时， $l == r$时，答案有可能不是$true$… （奇怪的坑）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 50009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS][<span class="number">31</span>];</span><br><span class="line">LL ha[MS];</span><br><span class="line">LL lg2[MS];</span><br><span class="line">map&lt;LL,LL&gt; mp;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &quot;X 年是自 Y 年以来降雨量最多的&quot;  </span></span><br><span class="line"><span class="comment">// 它的含义是 X 年的降雨量不超过 Y 年，且对于任意 Y&lt;Z&lt;X，Z 年的降雨量严格小于 X 年。</span></span><br><span class="line"><span class="comment">// 即有一个序列，最左边x的位置降雨量&gt;=最右边y的降雨量，且对于 x &lt; i &lt; y，所有i位置降雨量&lt;位置y </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_lg2</span><span class="params">()</span></span>&#123;</span><br><span class="line">lg2[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++) lg2[i] = lg2[i/<span class="number">2</span>]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_st</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lg2[n];i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j+(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))&lt;=n;j++)&#123;</span><br><span class="line">p[j][i] = <span class="built_in">max</span>(p[j][i<span class="number">-1</span>],p[j+(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))][i<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_max</span><span class="params">(LL l,LL r)</span></span>&#123;</span><br><span class="line">LL t = lg2[r-l+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">max</span>(p[l][t],p[r-(<span class="number">1</span>&lt;&lt;t)+<span class="number">1</span>][t]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">init_lg2</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; ha[i] &gt;&gt; p[i][<span class="number">0</span>];</span><br><span class="line">mp[ha[i]] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">init_st</span>(); <span class="comment">// 预处理 st 表 </span></span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL x,y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">LL l = <span class="built_in">lower_bound</span>(ha+<span class="number">1</span>,ha+n+<span class="number">1</span>,x) - ha;</span><br><span class="line">LL r = <span class="built_in">lower_bound</span>(ha+<span class="number">1</span>,ha+n+<span class="number">1</span>,y) - ha;</span><br><span class="line">LL cl = <span class="built_in">get_max</span>(l,l); <span class="comment">// 最左边降雨量 </span></span><br><span class="line">LL cr = <span class="built_in">get_max</span>(r,r); <span class="comment">// 最右边降雨量 </span></span><br><span class="line"><span class="comment">//if(l == r) cout &lt;&lt; &quot;true\n&quot;; // l == r 时竟然不是 true </span></span><br><span class="line"><span class="keyword">if</span>(l &gt; r) cout &lt;&lt; <span class="string">&quot;false\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!mp[x] &amp;&amp; !mp[y])&#123; <span class="comment">// 当两个年份降雨量都未知 </span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;maybe\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(mp[x] &amp;&amp; !mp[y])&#123; <span class="comment">// 已知左边的降雨量 </span></span><br><span class="line">LL t = <span class="built_in">get_max</span>(l+<span class="number">1</span>,r<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(t &gt;= cl &amp;&amp; r<span class="number">-1</span>&gt;=l+<span class="number">1</span>) cout &lt;&lt; <span class="string">&quot;false\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;maybe\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!mp[x] &amp;&amp; mp[y])&#123;  <span class="comment">// 已知右边的降雨量 </span></span><br><span class="line">LL t = <span class="built_in">get_max</span>(l,r<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(t &gt;= cr &amp;&amp; r<span class="number">-1</span>&gt;=l) cout &lt;&lt; <span class="string">&quot;false\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;maybe\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(mp[x] &amp;&amp; mp[y])&#123; <span class="comment">// 两边都知 </span></span><br><span class="line"><span class="keyword">if</span>(cr &gt; cl) cout &lt;&lt; <span class="string">&quot;false\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(y-x == r-l)&#123; <span class="comment">// 从左到右每一年都已知 </span></span><br><span class="line"><span class="keyword">if</span>(r == l+<span class="number">1</span>) cout &lt;&lt; <span class="string">&quot;true\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">LL t = <span class="built_in">get_max</span>(l+<span class="number">1</span>,r<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(t &gt;= cr) cout &lt;&lt; <span class="string">&quot;false\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;true\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123; <span class="comment">// 从左到右有未知 </span></span><br><span class="line"><span class="keyword">if</span>(r == l+<span class="number">1</span>) cout &lt;&lt; <span class="string">&quot;maybe\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">LL t = <span class="built_in">get_max</span>(l+<span class="number">1</span>,r<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(t &gt;= cr) cout &lt;&lt; <span class="string">&quot;false\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;maybe\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;----\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树 扫描线】洛谷 P5490 【模板】扫描线</title>
      <link href="/2021/03/15/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E6%89%AB%E6%8F%8F%E7%BA%BF%E3%80%91%E6%B4%9B%E8%B0%B7%20P5490%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%89%AB%E6%8F%8F%E7%BA%BF/"/>
      <url>/2021/03/15/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%20%E6%89%AB%E6%8F%8F%E7%BA%BF%E3%80%91%E6%B4%9B%E8%B0%B7%20P5490%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E6%89%AB%E6%8F%8F%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P5490" target="_blank">题链</a></p><p>对于$mark$的引入:<br>如果不引入直接加，会出现某段区间被重复加的现象，要保证若某段区间被覆盖，则只需要加一次。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL xl,xr,y,g;</span><br><span class="line">&#125;line[MS*<span class="number">2</span>];  <span class="comment">// 记录一排排的线 </span></span><br><span class="line">LL hx[MS*<span class="number">2</span>];    <span class="comment">// 对 x 轴上的坐标 hash </span></span><br><span class="line">LL mark[MS&lt;&lt;<span class="number">3</span>]; <span class="comment">// 标记区间是否被覆盖 </span></span><br><span class="line">LL sum[MS&lt;&lt;<span class="number">3</span>];  <span class="comment">// 主要用sum[1]计算被覆盖区间的总和 </span></span><br><span class="line">LL tli,thx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.y &lt; b.y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(mark[rt]) sum[rt] = hx[r+<span class="number">1</span>] - hx[l];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(l == r) sum[rt] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> sum[rt] = sum[ls] + sum[rs];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">mark[rt] += val;</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt,l,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL x1,y1,x2,y2;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">hx[++tli] = x1;</span><br><span class="line">line[tli] = &#123;x1,x2,y1,<span class="number">1</span>&#125;;</span><br><span class="line">hx[++tli] = x2;</span><br><span class="line">line[tli] = &#123;x1,x2,y2,<span class="number">-1</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(hx+<span class="number">1</span>,hx+tli+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">sort</span>(line+<span class="number">1</span>,line+tli+<span class="number">1</span>,cmp);</span><br><span class="line">thx = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=tli;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(hx[i] != hx[i<span class="number">-1</span>]) hx[++thx] = hx[i];</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;tli;i++)&#123;</span><br><span class="line">LL l = <span class="built_in">lower_bound</span>(hx+<span class="number">1</span>,hx+thx+<span class="number">1</span>,line[i].xl) - hx;</span><br><span class="line">LL r = <span class="built_in">lower_bound</span>(hx+<span class="number">1</span>,hx+thx+<span class="number">1</span>,line[i].xr) - hx <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">update</span>(l,r,<span class="number">1</span>,thx<span class="number">-1</span>,<span class="number">1</span>,line[i].g);</span><br><span class="line">ans += sum[<span class="number">1</span>]*(line[i+<span class="number">1</span>].y - line[i].y);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【并查集】洛谷 P1196 银河英雄传说</title>
      <link href="/2021/03/15/ACM/%E3%80%90%E5%B9%B6%E6%9F%A5%E9%9B%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P1196%20%E9%93%B6%E6%B2%B3%E8%8B%B1%E9%9B%84%E4%BC%A0%E8%AF%B4/"/>
      <url>/2021/03/15/ACM/%E3%80%90%E5%B9%B6%E6%9F%A5%E9%9B%86%E3%80%91%E6%B4%9B%E8%B0%B7%20P1196%20%E9%93%B6%E6%B2%B3%E8%8B%B1%E9%9B%84%E4%BC%A0%E8%AF%B4/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1196" target="_blank">题链</a></p><p>边带权并查集，$val[i]$记录编号为i的舰船距离根舰船的距离，合并时如x接到y所在舰队的末尾，$fx$，$fy$为$x$，$y$的根节点，并不是$val[fx] += val[y]$，这里的若不是真正舰队末尾则出错，需要$sum[i]$数组记录某一列舰队的数目，$val[fx] += sum[fy]$;</p><p>具体如代码着重部分</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 30009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL fa[MS];</span><br><span class="line">LL val[MS]; <span class="comment">// 编号为i的舰船距根节点距离 </span></span><br><span class="line">LL sum[MS]; <span class="comment">// 记录第i列总舰数 </span></span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">find</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x != fa[x])&#123;</span><br><span class="line">LL t = fa[x];</span><br><span class="line">fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">val[x] += val[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(LL x,LL y)</span></span>&#123;</span><br><span class="line">LL fx = <span class="built_in">find</span>(x);</span><br><span class="line">LL fy = <span class="built_in">find</span>(y);</span><br><span class="line">fa[fx] = fy;</span><br><span class="line"><span class="comment">/**********************/</span></span><br><span class="line">val[fx] += sum[fy];</span><br><span class="line">sum[fy] += sum[fx];</span><br><span class="line">sum[fx] = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/**********************/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30000</span>;i++) fa[i] = i ,sum[i] = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line">LL x,y;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="string">&#x27;M&#x27;</span>)&#123;</span><br><span class="line"><span class="built_in">merge</span>(x,y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">find</span>(x) != <span class="built_in">find</span>(y)) <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">LL t1 = val[x];</span><br><span class="line">LL t2 = val[y];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">abs</span>(t1-t2)<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组】洛谷 P1966 火柴排队</title>
      <link href="/2021/03/15/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91%E6%B4%9B%E8%B0%B7%20P1966%20%E7%81%AB%E6%9F%B4%E6%8E%92%E9%98%9F/"/>
      <url>/2021/03/15/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E3%80%91%E6%B4%9B%E8%B0%B7%20P1966%20%E7%81%AB%E6%9F%B4%E6%8E%92%E9%98%9F/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1966" target="_blank">题链</a></p><p>若要将一个排列转换成另一个排列，一次只能交换相邻两个元素，例如将 $a =$ {$4$, $3$, $1$, $2$} 变成 $b =$ {$1$, $3$, $2$, $4$}，最少需要交换 $a$或$b$ 几步；</p><p>新建 $pa[a[i]] = i$ 记录排名$a[i]$的位置，$pb[b[i]] = i$ 记录排名$b[i]$的位置，令$p[pa[i]] = pb[i]$（相当于映射）得到的$p$序列求逆序数则为答案；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 99999997</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL a[MS],aa[MS],pa[MS];</span><br><span class="line">LL b[MS],bb[MS],pb[MS];</span><br><span class="line">LL p[MS];</span><br><span class="line">LL tr[MS];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">lowbit</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(LL pos,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;pos&lt;=n;pos+=<span class="built_in">lowbit</span>(pos))&#123;</span><br><span class="line">tr[pos] += val;</span><br><span class="line">tr[pos] %= mod;</span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(LL pos)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;pos;pos-=<span class="built_in">lowbit</span>(pos))&#123;</span><br><span class="line">ans += tr[pos];</span><br><span class="line">ans %= mod; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">aa[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin &gt;&gt; b[i];</span><br><span class="line">bb[i] = b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(aa+<span class="number">1</span>,aa+n+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">sort</span>(bb+<span class="number">1</span>,bb+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">a[i] = <span class="built_in">lower_bound</span>(aa+<span class="number">1</span>,aa+n+<span class="number">1</span>,a[i]) - aa;</span><br><span class="line">pa[a[i]] = i;</span><br><span class="line">b[i] = <span class="built_in">lower_bound</span>(bb+<span class="number">1</span>,bb+n+<span class="number">1</span>,b[i]) - bb;</span><br><span class="line">pb[b[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">p[pa[i]] = pb[i];</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">add</span>(n-p[i]+<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">ans += <span class="built_in">get_sum</span>(n-p[i]);</span><br><span class="line">ans %= mod;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【ST表】洛谷 P3865 【模板】ST表</title>
      <link href="/2021/03/14/ACM/%E3%80%90ST%E8%A1%A8%E3%80%91%E6%B4%9B%E8%B0%B7%20P3865%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91ST%E8%A1%A8/"/>
      <url>/2021/03/14/ACM/%E3%80%90ST%E8%A1%A8%E3%80%91%E6%B4%9B%E8%B0%B7%20P3865%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91ST%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p><a href="https://oi-wiki.org/ds/sparse-table/">OI-Wiki</a></p><p><img src="https://img2020.cnblogs.com/blog/2062718/202103/2062718-20210314105106197-1725003181.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL lg2[MS]; </span><br><span class="line">LL p[MS][<span class="number">31</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">LL x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_lg2</span><span class="params">()</span></span>&#123;</span><br><span class="line">lg2[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++) lg2[i] = lg2[i/<span class="number">2</span>]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line">m = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">init_lg2</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">p[i][<span class="number">0</span>] = <span class="built_in">read</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lg2[n];i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j+(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))&lt;=n;j++)&#123;</span><br><span class="line">p[j][i] = <span class="built_in">max</span>(p[j][i<span class="number">-1</span>],p[j+(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))][i<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL l,r;</span><br><span class="line">l = <span class="built_in">read</span>() , r = <span class="built_in">read</span>();</span><br><span class="line">LL t = lg2[r-l+<span class="number">1</span>];</span><br><span class="line">LL ans = <span class="built_in">max</span>(p[l][t],p[r-(<span class="number">1</span>&lt;&lt;t)+<span class="number">1</span>][t]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ST表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【优先队列】结构体优先队列自定义排序</title>
      <link href="/2021/03/14/ACM/%E3%80%90%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E3%80%91%E7%BB%93%E6%9E%84%E4%BD%93%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%92%E5%BA%8F/"/>
      <url>/2021/03/14/ACM/%E3%80%90%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E3%80%91%E7%BB%93%E6%9E%84%E4%BD%93%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p>重定义的时候就如写$sort$时的$cmp$一样，最后将$return$时候的$”&gt;”,”&lt;”$反过来就行</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL a,b,pos;</span><br><span class="line">&#125;p[MS];</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (node x,node y)&#123;</span><br><span class="line"><span class="keyword">if</span>(x.b == y.b) <span class="keyword">return</span> x.a &lt; y.a; <span class="comment">// b相等时 ,a从 大到小 排序 </span></span><br><span class="line"><span class="keyword">return</span> x.b &gt; y.b; <span class="comment">// b 从 小到大 排序 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;node &gt; Q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL t1,t2;</span><br><span class="line">cin &gt;&gt; t1 &gt;&gt; t2;</span><br><span class="line">p[i] = &#123;t1,t2,i&#125;;</span><br><span class="line">Q.<span class="built_in">push</span>(p[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">node e = Q.<span class="built_in">top</span>();</span><br><span class="line">cout &lt;&lt; e.a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; e.b &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; e.pos &lt;&lt; endl;</span><br><span class="line">Q.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">5 5</span></span><br><span class="line"><span class="comment">5 4</span></span><br><span class="line"><span class="comment">4 2</span></span><br><span class="line"><span class="comment">4 1</span></span><br><span class="line"><span class="comment">2 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4 1 4</span></span><br><span class="line"><span class="comment">2 1 5</span></span><br><span class="line"><span class="comment">4 2 3</span></span><br><span class="line"><span class="comment">5 4 2</span></span><br><span class="line"><span class="comment">5 5 1</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优先队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【优先队列】洛谷 P3045 Cow Coupons G</title>
      <link href="/2021/03/14/ACM/%E3%80%90%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E3%80%91%E6%B4%9B%E8%B0%B7%20P3045%20Cow%20Coupons%20G/"/>
      <url>/2021/03/14/ACM/%E3%80%90%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E3%80%91%E6%B4%9B%E8%B0%B7%20P3045%20Cow%20Coupons%20G/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3045" target="_blank">题链</a></p><p>贪心把使用优惠劵后价格前$K$个一一压入队列（以队列 $QQ$ 表示）直到钱不够（可以证明前$K$个是一定要买的，因为最赚），其他未被压入队列的价格压入队列 $Q$</p><p>例如价格前$K$个中某个产品以原价购买$+$后$K$个某个产品以优惠价购买也是可行的情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 1 5</span><br><span class="line">2 1</span><br><span class="line">1000 3</span><br></pre></td></tr></table></figure><p>则 $QQ$队列中以原价和优惠价的差值从小到大排序，$Q$ 队列中以优惠价从小到大排序，判断 $Q$队列中能否加入到 $QQ$队列；</p><p>$Q$队列中是优惠价从小到大，若优惠价相同，则以原价从大到小排，因为这样最优且最赚；</p><p>若遍历 $Q$队列的时候，钱已经不够了（意味着优惠卷的使用已经到极限了），则需要再定义一个 $QQQ$队列存放未被买过的产品且以 原价 从小到大排序，用原价尝试剩余产品；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(&quot;O2&quot;)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> one first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> two second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL a,b,pos; <span class="comment">// 优惠价,原价 </span></span><br><span class="line">&#125;p[MS];</span><br><span class="line">LL v[MS];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">nod</span>&#123;</span></span><br><span class="line">LL a,b,pos;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.b &lt; y.b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (node x,node y)&#123;</span><br><span class="line"><span class="keyword">if</span>(x.b == y.b) <span class="keyword">return</span> x.a &lt; y.a;</span><br><span class="line"><span class="keyword">return</span> x.b &gt; y.b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (nod x,nod y)&#123;</span><br><span class="line"><span class="keyword">return</span> x.a - x.b &gt; y.a - y.b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;node &gt; Q;</span><br><span class="line">priority_queue&lt;nod &gt; QQ;</span><br><span class="line">priority_queue&lt;LL,vector&lt;LL&gt;,greater&lt;LL&gt; &gt; QQQ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL t1,t2;</span><br><span class="line">cin &gt;&gt; t1 &gt;&gt; t2;</span><br><span class="line">p[i] = &#123;t1,t2,i&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(p+<span class="number">1</span>,p+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="comment">/*cout &lt;&lt; &quot; ----------------- &quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; p[i].a &lt;&lt; &quot; &quot; &lt;&lt; p[i].b &lt;&lt; &quot; &quot; &lt;&lt; p[i].pos &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; &quot; ------------------ &quot; &lt;&lt; endl;*/</span></span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m &amp;&amp; k-p[i].b&gt;=<span class="number">0</span>;i++)&#123;</span><br><span class="line">QQ.<span class="built_in">push</span>(&#123;p[i].a,p[i].b,p[i].pos&#125;);</span><br><span class="line">k -= p[i].b;</span><br><span class="line">v[p[i].pos] = <span class="number">1</span>;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!v[p[i].pos])&#123;</span><br><span class="line">Q.<span class="built_in">push</span>(p[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>() &amp;&amp; !QQ.<span class="built_in">empty</span>())&#123;</span><br><span class="line">nod e1 = QQ.<span class="built_in">top</span>();</span><br><span class="line">node e2 = Q.<span class="built_in">top</span>();</span><br><span class="line"><span class="keyword">if</span>(k-(e1.a-e1.b)-e2.b &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">k = k-(e1.a-e1.b)-e2.b;</span><br><span class="line">ans++;</span><br><span class="line">QQ.<span class="built_in">pop</span>();</span><br><span class="line">QQ.<span class="built_in">push</span>(&#123;e2.a,e2.b,e2.pos&#125;);</span><br><span class="line">v[e2.pos] = <span class="number">1</span>; </span><br><span class="line">Q.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!v[p[i].pos])&#123;</span><br><span class="line">QQQ.<span class="built_in">push</span>(p[i].a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!QQQ.<span class="built_in">empty</span>())&#123;</span><br><span class="line">LL e = QQQ.<span class="built_in">top</span>();</span><br><span class="line"><span class="keyword">if</span>(k - e &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">k -= e;</span><br><span class="line">ans++;</span><br><span class="line">QQQ.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优先队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【计算几何】最小圆覆盖</title>
      <link href="/2021/03/09/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E6%9C%80%E5%B0%8F%E5%9C%86%E8%A6%86%E7%9B%96/"/>
      <url>/2021/03/09/ACM/%E3%80%90%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E3%80%91%E6%9C%80%E5%B0%8F%E5%9C%86%E8%A6%86%E7%9B%96/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">5009</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x, y;</span><br><span class="line">&#125;p[MAXN], C; <span class="comment">// p[i] 表示点集 ,C = &#123;x,y&#125; 表示圆心 </span></span><br><span class="line"><span class="keyword">double</span> R; <span class="comment">// 圆 半径  </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dis</span><span class="params">(Point a, Point b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="built_in">sqr</span>(a.x - b.x) + <span class="built_in">sqr</span>(a.y - b.y));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeC</span><span class="params">(Point p1, Point p2, Point p3)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> a = p2.x - p1.x,</span><br><span class="line">           b = p2.y - p1.y,</span><br><span class="line">           c = p3.x - p1.x,</span><br><span class="line">           d = p3.y - p1.y,</span><br><span class="line">           e = (<span class="built_in">sqr</span>(p2.x) - <span class="built_in">sqr</span>(p1.x) + <span class="built_in">sqr</span>(p2.y) - <span class="built_in">sqr</span>(p1.y)) / <span class="number">2</span>,</span><br><span class="line">           f = (<span class="built_in">sqr</span>(p3.x) - <span class="built_in">sqr</span>(p1.x) + <span class="built_in">sqr</span>(p3.y) - <span class="built_in">sqr</span>(p1.y)) / <span class="number">2</span>;</span><br><span class="line">    C.x = (e * d - b * f) / (a * d - b * c);</span><br><span class="line">    C.y = (a * f - e * c) / (a * d - b * c);</span><br><span class="line">    R = <span class="built_in">dis</span>(C, p1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cal</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">random_shuffle</span>(p + <span class="number">1</span>, p + N + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">dis</span>(p[i], C) &lt; R) <span class="keyword">continue</span>;</span><br><span class="line">        C = p[i]; R = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">dis</span>(p[j], C) &lt; R) <span class="keyword">continue</span>;</span><br><span class="line">            C.x = (p[i].x + p[j].x) / <span class="number">2.0</span>;</span><br><span class="line">            C.y = (p[i].y + p[j].y) / <span class="number">2.0</span>;</span><br><span class="line">            R = <span class="built_in">dis</span>(C, p[j]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= j - <span class="number">1</span>; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">dis</span>(p[k], C) &lt; R) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="built_in">MakeC</span>(p[i], p[j], p[k]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> R;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">R = <span class="number">0</span>;</span><br><span class="line">C = &#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;N);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>,&amp;p[i].x,&amp;p[i].y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">double</span> ans = <span class="built_in">cal</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.10f\n&quot;</span>,ans);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【数论】中缀表达式转化为后缀表达式</title>
      <link href="/2021/03/09/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2021/03/09/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/unixfy/p/3192446.html" target="_blank">习自</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line"><span class="keyword">char</span> s[MS]; <span class="comment">// 字符串读入中缀表达式 </span></span><br><span class="line">LL hs; <span class="comment">// 中缀表达式的len  </span></span><br><span class="line">stack&lt;LL&gt; fu;</span><br><span class="line">LL prfu[<span class="number">300</span>]; <span class="comment">// 定义 + - * / ^ 优先级 </span></span><br><span class="line">LL hz[MS],thz; <span class="comment">// 存放后缀表达式 ,若第i位为字符则 vf[i] = 1; </span></span><br><span class="line">LL vf[MS]; <span class="comment">// 标记 1 为符 ;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_prfu</span><span class="params">()</span></span>&#123; <span class="comment">// 定义 + - * / ^ 优先级 </span></span><br><span class="line">prfu[<span class="string">&#x27;(&#x27;</span>] = prfu[<span class="string">&#x27;)&#x27;</span>] = <span class="number">0</span>;</span><br><span class="line">prfu[<span class="string">&#x27;+&#x27;</span>] = prfu[<span class="string">&#x27;-&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">prfu[<span class="string">&#x27;*&#x27;</span>] = prfu[<span class="string">&#x27;/&#x27;</span>] = <span class="number">2</span>;</span><br><span class="line">prfu[<span class="string">&#x27;^&#x27;</span>] = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">s_hz</span><span class="params">()</span></span>&#123; <span class="comment">// 得到 后缀表达式 hz[1...thz] ,其中字符以数字表示 ,vf[i]=1 表示 hz[i] 为字符 </span></span><br><span class="line">hs = <span class="built_in">strlen</span>(s);</span><br><span class="line">LL num = <span class="number">0</span>;</span><br><span class="line">LL flnum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;hs;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;0&#x27;</span> &lt;= s[i] &amp;&amp; s[i] &lt;= <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">flnum = <span class="number">1</span>;</span><br><span class="line">num = num*<span class="number">10</span>+(s[i]-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(flnum) hz[++thz] = num ,num = flnum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(fu.<span class="built_in">empty</span>())&#123;</span><br><span class="line">fu.<span class="built_in">push</span>(s[i]);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="string">&#x27;(&#x27;</span>) fu.<span class="built_in">push</span>(s[i]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;)&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(fu.<span class="built_in">top</span>() != <span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">hz[++thz] = fu.<span class="built_in">top</span>();</span><br><span class="line">vf[thz] = <span class="number">1</span>;</span><br><span class="line">fu.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line">fu.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(!fu.<span class="built_in">empty</span>() &amp;&amp; prfu[s[i]] &lt;= prfu[fu.<span class="built_in">top</span>()])&#123;</span><br><span class="line">hz[++thz] = fu.<span class="built_in">top</span>();</span><br><span class="line">vf[thz] = <span class="number">1</span>;</span><br><span class="line">fu.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line">fu.<span class="built_in">push</span>(s[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flnum) hz[++thz] = num ,num = flnum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!fu.<span class="built_in">empty</span>())&#123;</span><br><span class="line">hz[++thz] = fu.<span class="built_in">top</span>();</span><br><span class="line">vf[thz] = <span class="number">1</span>;</span><br><span class="line">fu.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">init_prfu</span>();</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="built_in">s_hz</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=thz;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(vf[i]) <span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>,hz[i]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>,hz[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">88-(333+22*6)/55+4 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">88 333 22 6 * + 55 / - 4 + </span></span><br><span class="line"><span class="comment">*/</span> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】2021牛客寒假算法基础集训营3 E-买礼物</title>
      <link href="/2021/03/03/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912021%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A53%20E-%E4%B9%B0%E7%A4%BC%E7%89%A9/"/>
      <url>/2021/03/03/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%912021%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A53%20E-%E4%B9%B0%E7%A4%BC%E7%89%A9/</url>
      
        <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/9983/E" target="_blank">题链</a></p><p>线段树记录第i个礼物与之相同的后一个礼物的位置；<br>  LL $p[MS]$; // 记录第$i$个礼物 后一个礼物位置<br>  LL $q[MS];$ // 记录第$i$个礼物 前一个礼物位置<br>关于修改：<br>$1.$删除第$pos$个礼物：在线段树中将其置为$INF$(表示该礼物不存在)，删除后该礼物左右所指向的礼物位置则需要更改;<br>$2.$第$pos$个礼物与之相同的前一个礼物，该礼物所指向的后一个礼物位置需要更新，即在线段树上修改$p[q[pos]]$的值为$p[pos]$;<br>$3.$第$pos$个礼物与之相同的后一个礼物，该礼物所指向的前一个礼物位置需要更新，更新$q[p[pos]]$为$q[pos]$;  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS]; <span class="comment">// 记录第i个礼物 后一个礼物位置 </span></span><br><span class="line">LL q[MS]; <span class="comment">// 记录第i个礼物 前一个礼物位置 </span></span><br><span class="line">LL a[MS]; <span class="comment">// 原数组 </span></span><br><span class="line">LL ne[<span class="number">1000009</span>];</span><br><span class="line">LL fr[<span class="number">1000009</span>];</span><br><span class="line">LL tr[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">tr[rt] = <span class="built_in">min</span>(tr[ls],tr[rs]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">tr[rt] = p[l];</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_change</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">tr[rt] = val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update_change</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update_change</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_min</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R) <span class="keyword">return</span> tr[rt];</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">LL ans = INF;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">min</span>(ans,<span class="built_in">get_min</span>(L,R,l,m,ls));</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">min</span>(ans,<span class="built_in">get_min</span>(L,R,m+<span class="number">1</span>,r,rs));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1000000</span>;i++)&#123;</span><br><span class="line">fr[i] = <span class="number">0</span>;</span><br><span class="line">ne[i] = INF;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">p[i] = ne[a[i]];</span><br><span class="line">ne[a[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">q[i] = fr[a[i]];</span><br><span class="line">fr[a[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL op,l,r,pos;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">cin &gt;&gt; pos;</span><br><span class="line"><span class="built_in">update_change</span>(pos,pos,<span class="number">1</span>,n,<span class="number">1</span>,INF);</span><br><span class="line"><span class="keyword">if</span>(q[pos] != <span class="number">0</span>)&#123;</span><br><span class="line">p[q[pos]] = p[pos];</span><br><span class="line"><span class="built_in">update_change</span>(q[pos],q[pos],<span class="number">1</span>,n,<span class="number">1</span>,p[pos]);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(p[pos] != INF)&#123;</span><br><span class="line">q[p[pos]] = q[pos];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">get_min</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>) &lt;= r) cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护历史最值】UOJ 169 UR 11 元旦老人与数列</title>
      <link href="/2021/03/02/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8E%86%E5%8F%B2%E6%9C%80%E5%80%BC%E3%80%91UOJ%20169%20UR%2011%20%E5%85%83%E6%97%A6%E8%80%81%E4%BA%BA%E4%B8%8E%E6%95%B0%E5%88%97/"/>
      <url>/2021/03/02/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8E%86%E5%8F%B2%E6%9C%80%E5%80%BC%E3%80%91UOJ%20169%20UR%2011%20%E5%85%83%E6%97%A6%E8%80%81%E4%BA%BA%E4%B8%8E%E6%95%B0%E5%88%97/</url>
      
        <content type="html"><![CDATA[<p><a href="https://uoj.ac/problem/169" target="_blank">题链</a></p><p>此题与<a href="https://www.cnblogs.com/Tecode/p/14438134.html">洛谷P6242 【模板】线段树 3</a>为孪生题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL minf[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL minse[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL laminf[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL laoth[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">LL hisminf[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL lahisminf[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL lahisoth[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c=<span class="built_in">getchar</span>();ll s=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(c);c=<span class="built_in">getchar</span>())<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>)f=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(c);c=<span class="built_in">getchar</span>())s=s*<span class="number">10</span>+c<span class="number">-48</span>;</span><br><span class="line">    <span class="keyword">return</span> s*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">minf[rt] = <span class="built_in">min</span>(minf[ls],minf[rs]);</span><br><span class="line">hisminf[rt] = <span class="built_in">min</span>(hisminf[ls],hisminf[rs]);</span><br><span class="line"><span class="keyword">if</span>(minf[ls] == minf[rs])</span><br><span class="line">minse[rt] = <span class="built_in">min</span>(minse[ls],minse[rs]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(minf[ls] &lt; minf[rs])</span><br><span class="line">minse[rt] = <span class="built_in">min</span>(minse[ls],minf[rs]);</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">minse[rt] = <span class="built_in">min</span>(minf[ls],minse[rs]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,LL k1,LL k2,LL k3,LL k4)</span></span>&#123;</span><br><span class="line">hisminf[rt] = <span class="built_in">min</span>(hisminf[rt],minf[rt]+k3);</span><br><span class="line">lahisminf[rt] = <span class="built_in">min</span>(lahisminf[rt],laminf[rt]+k3);</span><br><span class="line">lahisoth[rt] = <span class="built_in">min</span>(lahisoth[rt],laoth[rt]+k4);</span><br><span class="line"></span><br><span class="line">minf[rt] += k1;</span><br><span class="line"><span class="keyword">if</span>(minse[rt] != INF) minse[rt] += k2;</span><br><span class="line">laminf[rt] += k1;</span><br><span class="line">laoth[rt] += k2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">LL minn = <span class="built_in">min</span>(minf[ls],minf[rs]);</span><br><span class="line"><span class="keyword">if</span>(minf[ls] == minn) <span class="built_in">update</span>(ls,laminf[rt],laoth[rt],lahisminf[rt],lahisoth[rt]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(ls,laoth[rt],laoth[rt],lahisoth[rt],lahisoth[rt]);</span><br><span class="line"><span class="keyword">if</span>(minf[rs] == minn) <span class="built_in">update</span>(rs,laminf[rt],laoth[rt],lahisminf[rt],lahisoth[rt]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(rs,laoth[rt],laoth[rt],lahisoth[rt],lahisoth[rt]);</span><br><span class="line"></span><br><span class="line">laminf[rt] = laoth[rt] = <span class="number">0</span>;</span><br><span class="line">lahisminf[rt] = lahisoth[rt] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">laminf[rt] = <span class="number">0</span>;</span><br><span class="line">laoth[rt] = <span class="number">0</span>;</span><br><span class="line">lahisminf[rt] = <span class="number">0</span>;</span><br><span class="line">lahisoth[rt] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">LL x;</span><br><span class="line">x = <span class="built_in">read</span>();</span><br><span class="line">minf[rt] = x;</span><br><span class="line">minse[rt] = INF;</span><br><span class="line">hisminf[rt] = x;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_add</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="built_in">update</span>(rt,val,val,val,val);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update_add</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update_add</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_max</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(minf[rt] &gt;= val) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R &amp;&amp; minse[rt] &gt; val)&#123;</span><br><span class="line"><span class="built_in">update</span>(rt,val-minf[rt],<span class="number">0</span>,val-minf[rt],<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update_max</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update_max</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_min</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R) <span class="keyword">return</span> minf[rt];</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line">LL ans = INF;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">min</span>(ans,<span class="built_in">get_min</span>(L,R,l,m,ls));</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">min</span>(ans,<span class="built_in">get_min</span>(L,R,m+<span class="number">1</span>,r,rs));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_hismin</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R) <span class="keyword">return</span> hisminf[rt];</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line">LL ans = INF;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">min</span>(ans,<span class="built_in">get_hismin</span>(L,R,l,m,ls));</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">min</span>(ans,<span class="built_in">get_hismin</span>(L,R,m+<span class="number">1</span>,r,rs));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line">m = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL op,l,r,val;</span><br><span class="line">op = <span class="built_in">read</span>();</span><br><span class="line">l = <span class="built_in">read</span>() , r = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">val = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">update_add</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">val = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">update_max</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">3</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">get_min</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">get_hismin</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树维护历史最值】洛谷 P6242 【模板】线段树 3</title>
      <link href="/2021/02/23/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8E%86%E5%8F%B2%E6%9C%80%E5%80%BC%E3%80%91%E6%B4%9B%E8%B0%B7%20P6242%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%203/"/>
      <url>/2021/02/23/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E5%8E%86%E5%8F%B2%E6%9C%80%E5%80%BC%E3%80%91%E6%B4%9B%E8%B0%B7%20P6242%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%203/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6242" target="_blank">题链</a></p><p>此题即<a href="https://www.cnblogs.com/Tecode/p/14425782.html" target="_blank">Picks loves segment tree</a>增加询问历史最值</p><p><img src="https://img2020.cnblogs.com/blog/2062718/202102/2062718-20210223205739542-810718982.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#pragma GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 20000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 11431471</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B 231</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MM 37101101</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BB 312</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL sum[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间和 </span></span><br><span class="line">LL maxf[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间最大值 </span></span><br><span class="line">LL cntf[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间最大值个数 </span></span><br><span class="line">LL maxse[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间第二大值 </span></span><br><span class="line">LL lamaxf[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// la_区间最大值需加的数 </span></span><br><span class="line">LL laoth[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// la_区间非最大值需加的数 </span></span><br><span class="line">LL hismaxf[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间历史最大值 </span></span><br><span class="line">LL lahismaxf[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// la_最大的区间历史最大值需加的数 </span></span><br><span class="line">LL lahisoth[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// la_非最大的区间历史最大值需加的数 </span></span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c=<span class="built_in">getchar</span>();ll s=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(c);c=<span class="built_in">getchar</span>())<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>)f=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(c);c=<span class="built_in">getchar</span>())s=s*<span class="number">10</span>+c<span class="number">-48</span>;</span><br><span class="line">    <span class="keyword">return</span> s*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">sum[rt] = sum[ls] + sum[rs];</span><br><span class="line">maxf[rt] = <span class="built_in">max</span>(maxf[ls],maxf[rs]);</span><br><span class="line">hismaxf[rt] = <span class="built_in">max</span>(hismaxf[ls],hismaxf[rs]); <span class="comment">//</span></span><br><span class="line"><span class="keyword">if</span>(maxf[ls] == maxf[rs])&#123;</span><br><span class="line">cntf[rt] = cntf[ls] + cntf[rs];</span><br><span class="line">maxse[rt] = <span class="built_in">max</span>(maxse[ls],maxse[rs]); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(maxf[ls] &gt; maxf[rs])&#123;</span><br><span class="line">cntf[rt] = cntf[ls];</span><br><span class="line">maxse[rt] = <span class="built_in">max</span>(maxse[ls],maxf[rs]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cntf[rt] = cntf[rs];</span><br><span class="line">maxse[rt] = <span class="built_in">max</span>(maxf[ls],maxse[rs]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">lamaxf[rt] = <span class="number">0</span>;</span><br><span class="line">laoth[rt] = <span class="number">0</span>;</span><br><span class="line">lahismaxf[rt] = <span class="number">0</span>; </span><br><span class="line">lahisoth[rt] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">LL x;</span><br><span class="line">x = <span class="built_in">read</span>();</span><br><span class="line">sum[rt] = x;</span><br><span class="line">maxf[rt] = x;</span><br><span class="line">cntf[rt] = <span class="number">1</span>;</span><br><span class="line">maxse[rt] = <span class="number">-1e18</span>;</span><br><span class="line">hismaxf[rt] = x; <span class="comment">//</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL k1,LL k2,LL k3,LL k4)</span></span>&#123;</span><br><span class="line"><span class="comment">// 最大值加成 ,非最大值加成 ,最大值的历史最大加成 ,非最大值的历史最大加成 </span></span><br><span class="line">sum[rt] += cntf[rt]*k1+(r-l+<span class="number">1</span>-cntf[rt])*k2;</span><br><span class="line"><span class="comment">//***// </span></span><br><span class="line">hismaxf[rt] = <span class="built_in">max</span>(hismaxf[rt],maxf[rt]+k3); <span class="comment">//  </span></span><br><span class="line">lahismaxf[rt] = <span class="built_in">max</span>(lahismaxf[rt],lamaxf[rt]+k3); <span class="comment">// </span></span><br><span class="line">lahisoth[rt] = <span class="built_in">max</span>(lahisoth[rt],laoth[rt]+k4); <span class="comment">//</span></span><br><span class="line"><span class="comment">//***// </span></span><br><span class="line">maxf[rt] += k1;</span><br><span class="line"><span class="keyword">if</span>(maxse[rt] != <span class="number">-1e18</span>) maxse[rt] += k2;</span><br><span class="line">lamaxf[rt] += k1;</span><br><span class="line">laoth[rt] += k2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">LL maxn = <span class="built_in">max</span>(maxf[ls],maxf[rs]);</span><br><span class="line"><span class="keyword">if</span>(maxf[ls] == maxn) <span class="built_in">update</span>(ls,l,m,lamaxf[rt],laoth[rt],lahismaxf[rt],lahisoth[rt]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(ls,l,m,laoth[rt],laoth[rt],lahisoth[rt],lahisoth[rt]);</span><br><span class="line"><span class="keyword">if</span>(maxf[rs] == maxn) <span class="built_in">update</span>(rs,m+<span class="number">1</span>,r,lamaxf[rt],laoth[rt],lahismaxf[rt],lahisoth[rt]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(rs,m+<span class="number">1</span>,r,laoth[rt],laoth[rt],lahisoth[rt],lahisoth[rt]);</span><br><span class="line">lamaxf[rt] = laoth[rt] = <span class="number">0</span>;</span><br><span class="line">lahismaxf[rt] = lahisoth[rt] = <span class="number">0</span>; <span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_add</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="built_in">update</span>(rt,l,r,val,val,val,val);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update_add</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update_add</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_min</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(maxf[rt] &lt;= val) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R &amp;&amp; val &gt; maxse[rt])&#123;</span><br><span class="line"><span class="built_in">update</span>(rt,l,r,val-maxf[rt],<span class="number">0</span>,val-maxf[rt],<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update_min</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update_min</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> sum[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">get_sum</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">get_sum</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_max</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R) <span class="keyword">return</span> maxf[rt];</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL ans = <span class="number">-1e18</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">max</span>(ans,<span class="built_in">get_max</span>(L,R,l,m,ls));</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">max</span>(ans,<span class="built_in">get_max</span>(L,R,m+<span class="number">1</span>,r,rs));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_hismax</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123; <span class="comment">//</span></span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R) <span class="keyword">return</span> hismaxf[rt]; </span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL ans = <span class="number">-1e18</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">max</span>(ans,<span class="built_in">get_hismax</span>(L,R,l,m,ls));</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">max</span>(ans,<span class="built_in">get_hismax</span>(L,R,m+<span class="number">1</span>,r,rs));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = <span class="built_in">read</span>() ,m = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL op,l,r,val;</span><br><span class="line">op = <span class="built_in">read</span>();</span><br><span class="line">l = <span class="built_in">read</span>() ,r = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">val = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">update_add</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">val = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">update_min</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">3</span>) <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">get_sum</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">4</span>) <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">get_max</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">get_hismax</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">LL te;</span><br><span class="line">te = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(te--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】Picks loves segment tree</title>
      <link href="/2021/02/21/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91Picks%20loves%20segment%20tree/"/>
      <url>/2021/02/21/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91Picks%20loves%20segment%20tree/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wzoi.cc/s/21/3050" target="_blank">题链</a></p><p>关于修改：<br>$min$修改：直接递归到节点（$maxse &lt; val &lt; maxf$）,转化为对节点最大值的加减；<br>$add$修改：划分为对 节点最大值 和 节点其余值 的加减；<br>$lazy$标记 最大值的加减$lamaxf$ 和 其余值的加减$laoth$<br>重点在于将 $min$修改 和 $add$修改 变为同一修改  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 500009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 20000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 11431471</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B 231</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MM 37101101</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BB 312</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL sum[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间和 </span></span><br><span class="line">LL maxf[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间最大值 </span></span><br><span class="line">LL cntf[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间最大值个数 </span></span><br><span class="line">LL maxse[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间第二大值 </span></span><br><span class="line">LL lamaxf[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// la_区间最大值需加的数 </span></span><br><span class="line">LL laoth[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// la_区间非最大值需加的数 </span></span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c=<span class="built_in">getchar</span>();ll s=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(c);c=<span class="built_in">getchar</span>())<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>)f=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(c);c=<span class="built_in">getchar</span>())s=s*<span class="number">10</span>+c<span class="number">-48</span>;</span><br><span class="line">    <span class="keyword">return</span> s*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">sum[rt] = sum[ls] + sum[rs];</span><br><span class="line">maxf[rt] = <span class="built_in">max</span>(maxf[ls],maxf[rs]);</span><br><span class="line"><span class="keyword">if</span>(maxf[ls] == maxf[rs])&#123;</span><br><span class="line">cntf[rt] = cntf[ls] + cntf[rs];</span><br><span class="line">maxse[rt] = <span class="built_in">max</span>(maxse[ls],maxse[rs]); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(maxf[ls] &gt; maxf[rs])&#123;</span><br><span class="line">cntf[rt] = cntf[ls];</span><br><span class="line">maxse[rt] = <span class="built_in">max</span>(maxse[ls],maxf[rs]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cntf[rt] = cntf[rs];</span><br><span class="line">maxse[rt] = <span class="built_in">max</span>(maxf[ls],maxse[rs]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">lamaxf[rt] = <span class="number">0</span>;</span><br><span class="line">laoth[rt] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">LL x;</span><br><span class="line">x = <span class="built_in">read</span>();</span><br><span class="line">sum[rt] = x;</span><br><span class="line">maxf[rt] = x;</span><br><span class="line">cntf[rt] = <span class="number">1</span>;</span><br><span class="line">maxse[rt] = <span class="number">-1e18</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r,LL k1,LL k2)</span></span>&#123;</span><br><span class="line">sum[rt] += cntf[rt]*k1+(r-l+<span class="number">1</span>-cntf[rt])*k2;</span><br><span class="line">maxf[rt] += k1;</span><br><span class="line"><span class="keyword">if</span>(maxse[rt] != <span class="number">-1e18</span>) maxse[rt] += k2;</span><br><span class="line">lamaxf[rt] += k1;</span><br><span class="line">laoth[rt] += k2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">LL m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">LL maxn = <span class="built_in">max</span>(maxf[ls],maxf[rs]);</span><br><span class="line"><span class="keyword">if</span>(maxf[ls] == maxn) <span class="built_in">update</span>(ls,l,m,lamaxf[rt],laoth[rt]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(ls,l,m,laoth[rt],laoth[rt]);</span><br><span class="line"><span class="keyword">if</span>(maxf[rs] == maxn) <span class="built_in">update</span>(rs,m+<span class="number">1</span>,r,lamaxf[rt],laoth[rt]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">update</span>(rs,m+<span class="number">1</span>,r,laoth[rt],laoth[rt]);</span><br><span class="line">lamaxf[rt] = laoth[rt] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_add</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="built_in">update</span>(rt,l,r,val,val);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update_add</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update_add</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_min</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(maxf[rt] &lt;= val) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R &amp;&amp; val &gt; maxse[rt])&#123;</span><br><span class="line"><span class="built_in">update</span>(rt,l,r,val-maxf[rt],<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update_min</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update_min</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> sum[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">get_sum</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">get_sum</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = <span class="built_in">read</span>() ,m = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL op,l,r,val;</span><br><span class="line">op = <span class="built_in">read</span>();</span><br><span class="line">l = <span class="built_in">read</span>() ,r = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">val = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">update_min</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">val = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">update_add</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">get_sum</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">LL te;</span><br><span class="line">te = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(te--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】HDU 5306 Gorgeous Sequence</title>
      <link href="/2021/02/21/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91HDU%205306%20Gorgeous%20Sequence/"/>
      <url>/2021/02/21/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91HDU%205306%20Gorgeous%20Sequence/</url>
      
        <content type="html"><![CDATA[<p><a href="https://vjudge.net/problem/HDU-5306" target="_blank">题链</a></p><p>关于修改：直接递归到节点（$maxse &lt; val &lt; maxf$）,转化为只关于该节点最大值的加减;</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 20000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 11431471</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B 231</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MM 37101101</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BB 312</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL sum[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间和 </span></span><br><span class="line">LL maxf[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间最大值 </span></span><br><span class="line">LL cntf[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间最大值个数 </span></span><br><span class="line">LL maxse[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// 区间第二大值 </span></span><br><span class="line">LL lamaxf[MS&lt;&lt;<span class="number">2</span>]; <span class="comment">// la_区间最大值需加的数 </span></span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c=<span class="built_in">getchar</span>();ll s=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(c);c=<span class="built_in">getchar</span>())<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>)f=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(c);c=<span class="built_in">getchar</span>())s=s*<span class="number">10</span>+c<span class="number">-48</span>;</span><br><span class="line">    <span class="keyword">return</span> s*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">sum[rt] = sum[ls] + sum[rs];</span><br><span class="line">maxf[rt] = <span class="built_in">max</span>(maxf[ls],maxf[rs]);</span><br><span class="line"><span class="keyword">if</span>(maxf[ls] == maxf[rs])&#123;</span><br><span class="line">cntf[rt] = cntf[ls] + cntf[rs];</span><br><span class="line">maxse[rt] = <span class="built_in">max</span>(maxse[ls],maxse[rs]); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(maxf[ls] &gt; maxf[rs])&#123;</span><br><span class="line">cntf[rt] = cntf[ls];</span><br><span class="line">maxse[rt] = <span class="built_in">max</span>(maxse[ls],maxf[rs]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cntf[rt] = cntf[rs];</span><br><span class="line">maxse[rt] = <span class="built_in">max</span>(maxf[ls],maxse[rs]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">lamaxf[rt] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">LL x;</span><br><span class="line">x = <span class="built_in">read</span>();</span><br><span class="line">sum[rt] = x;</span><br><span class="line">maxf[rt] = x;</span><br><span class="line">cntf[rt] = <span class="number">1</span>;</span><br><span class="line">maxse[rt] = <span class="number">-1e18</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(l,m,ls);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line">sum[rt] += val*cntf[rt];</span><br><span class="line">maxf[rt] += val;</span><br><span class="line">lamaxf[rt] += val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">LL maxn = <span class="built_in">max</span>(maxf[ls],maxf[rs]);</span><br><span class="line"><span class="keyword">if</span>(maxf[ls] == maxn) <span class="built_in">update</span>(ls,lamaxf[rt]);</span><br><span class="line"><span class="keyword">if</span>(maxf[rs] == maxn) <span class="built_in">update</span>(rs,lamaxf[rt]);</span><br><span class="line">lamaxf[rt] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_min</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(maxf[rt] &lt;= val) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R &amp;&amp; val &gt; maxse[rt])&#123;</span><br><span class="line"><span class="built_in">update</span>(rt,val-maxf[rt]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update_min</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update_min</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> sum[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans += <span class="built_in">get_sum</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans += <span class="built_in">get_sum</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_max</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R) <span class="keyword">return</span> maxf[rt];</span><br><span class="line"><span class="built_in">push_down</span>(rt);</span><br><span class="line">LL ans = <span class="number">-1e18</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) ans = <span class="built_in">max</span>(ans,<span class="built_in">get_max</span>(L,R,l,m,ls));</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) ans = <span class="built_in">max</span>(ans,<span class="built_in">get_max</span>(L,R,m+<span class="number">1</span>,r,rs));</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = <span class="built_in">read</span>() ,m = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL op,l,r,val;</span><br><span class="line">op = <span class="built_in">read</span>();</span><br><span class="line">l = <span class="built_in">read</span>() ,r = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">0</span>)&#123;</span><br><span class="line">val = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">update_min</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">get_max</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">get_sum</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">LL te;</span><br><span class="line">te = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">while</span>(te--)&#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】洛谷 P3373 【模板】线段树 2</title>
      <link href="/2021/02/16/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3373%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%202/"/>
      <url>/2021/02/16/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3373%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%202/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3373" target="_blank">题链</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 20000009</span></span><br><span class="line"><span class="comment">//#define mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"></span><br><span class="line">LL mod;</span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL la_add[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL la_mul[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">la_mul[rt] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">init</span>(l,m,ls);</span><br><span class="line"><span class="built_in">init</span>(m+<span class="number">1</span>,r,rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = p[ls] + p[rs];</span><br><span class="line">p[rt] %= mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">p[ls] = (p[ls]*la_mul[rt]+la_add[rt]*(m-l+<span class="number">1</span>))%mod;</span><br><span class="line">p[rs] = (p[rs]*la_mul[rt]+la_add[rt]*(r-m))%mod;</span><br><span class="line"></span><br><span class="line">la_mul[ls] = (la_mul[ls]*la_mul[rt])%mod;</span><br><span class="line">la_mul[rs] = (la_mul[rs]*la_mul[rt])%mod;</span><br><span class="line"></span><br><span class="line">la_add[ls] = (la_add[ls]*la_mul[rt]+la_add[rt])%mod;</span><br><span class="line">la_add[rs] = (la_add[rs]*la_mul[rt]+la_add[rt])%mod;</span><br><span class="line"></span><br><span class="line">la_add[rt] = <span class="number">0</span>;</span><br><span class="line">la_mul[rt] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_add</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt] += (r-l+<span class="number">1</span>)*val;</span><br><span class="line">p[rt] %= mod;</span><br><span class="line">la_add[rt] += val;</span><br><span class="line">la_add[rt] %= mod;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update_add</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update_add</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_mul</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line">p[rt] *= val;</span><br><span class="line">p[rt] %= mod;</span><br><span class="line">la_mul[rt] *= val;</span><br><span class="line">la_mul[rt] %= mod;</span><br><span class="line">la_add[rt] *= val;</span><br><span class="line">la_add[rt] %= mod;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update_mul</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update_mul</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L &lt;= l &amp;&amp; r &lt;= R)&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt]%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL cc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) cc = (cc+<span class="built_in">get_sum</span>(L,R,l,m,ls))%mod;</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) cc = (cc+<span class="built_in">get_sum</span>(L,R,m+<span class="number">1</span>,r,rs))%mod;</span><br><span class="line"><span class="keyword">return</span> cc%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; mod;</span><br><span class="line"><span class="built_in">init</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="built_in">update_add</span>(i,i,<span class="number">1</span>,n,<span class="number">1</span>,x%mod);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL op,l,r,val;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">cin &gt;&gt; val;</span><br><span class="line"><span class="built_in">update_mul</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">cin &gt;&gt; val;</span><br><span class="line"><span class="built_in">update_add</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">LL ans = <span class="built_in">get_sum</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】洛谷 P3372 【模板】线段树 1</title>
      <link href="/2021/02/16/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3372%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%201/"/>
      <url>/2021/02/16/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E6%B4%9B%E8%B0%B7%20P3372%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%201/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3372" target="_blank">题链</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 20000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pair pair<span class="meta-string">&lt;LL,LL&gt;</span></span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL la[MS&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">in</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> R)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (l&lt;=r) &amp;&amp; (L&lt;=l) &amp;&amp; (r&lt;=R); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">p[rt] = p[ls] + p[rs];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(la[rt])&#123;</span><br><span class="line"><span class="keyword">int</span> m = l+r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">p[ls] += la[rt]*(m-l+<span class="number">1</span>);</span><br><span class="line">p[rs] += la[rt]*(r-m);</span><br><span class="line">la[ls] += la[rt];</span><br><span class="line">la[rs] += la[rt];</span><br><span class="line">la[rt] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">in</span>(L,l,r,R))&#123;</span><br><span class="line">p[rt] += (r-l+<span class="number">1</span>)*val;</span><br><span class="line">la[rt] += val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) <span class="built_in">update</span>(L,R,l,m,ls,val);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) <span class="built_in">update</span>(L,R,m+<span class="number">1</span>,r,rs,val);</span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">in</span>(L,l,r,R))&#123;</span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">push_down</span>(rt,l,r);</span><br><span class="line">LL cc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> m = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt;= L) cc += <span class="built_in">get_sum</span>(L,R,l,m,ls);</span><br><span class="line"><span class="keyword">if</span>(m &lt;  R) cc += <span class="built_in">get_sum</span>(L,R,m+<span class="number">1</span>,r,rs);</span><br><span class="line"><span class="keyword">return</span> cc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">LL x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="built_in">update</span>(i,i,<span class="number">1</span>,n,<span class="number">1</span>,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">LL op,l,r,val;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">LL ans = <span class="built_in">get_sum</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">1</span>)&#123;</span><br><span class="line">cin &gt;&gt; val;</span><br><span class="line"><span class="built_in">update</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>,val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Codeforces】Codeforces Round 664 (Div. 2)</title>
      <link href="/2020/08/15/ACM/%E3%80%90Codeforces%E3%80%91Codeforces%20Round%20664%20(Div.%202)/"/>
      <url>/2020/08/15/ACM/%E3%80%90Codeforces%E3%80%91Codeforces%20Round%20664%20(Div.%202)/</url>
      
        <content type="html"><![CDATA[<h1 id="A-Boboniu-Likes-to-Color-Balls"><a href="#A-Boboniu-Likes-to-Color-Balls" class="headerlink" title="A. Boboniu Likes to Color Balls"></a>A. Boboniu Likes to Color Balls</h1><p>Boboniu gives you</p><p>r red balls,<br>g green balls,<br>b blue balls,<br>w white balls.</p><p>He allows you to do the following operation as many times as you want:</p><p>Pick a red ball, a green ball, and a blue ball and then change their color to white.<br>You should answer if it’s possible to arrange all the balls into a palindrome after several (possibly zero) number of described operations.</p><p><em>Input</em><br>The first line contains one integer T (1≤T≤100) denoting the number of test cases.</p><p>For each of the next T cases, the first line contains four integers r, g, b and w (0≤r,g,b,w≤10^9).</p><p><em>Output</em><br>For each test case, print “Yes” if it’s possible to arrange all the balls into a palindrome after doing several (possibly zero) number of described operations. Otherwise, print “No”.</p><p><strong>Example</strong><br><strong>input</strong></p><blockquote><p>4<br>0 1 1 1<br>8 1 9 3<br>0 0 0 0<br>1000000000 1000000000 1000000000 1000000000</p></blockquote><p><strong>output</strong></p><blockquote><p>No<br>Yes<br>Yes<br>Yes</p></blockquote><p><strong>Note</strong><br>In the first test case, you’re not able to do any operation and you can never arrange three balls of distinct colors into a palindrome.</p><p>In the second test case, after doing one operation, changing (8,1,9,3) to (7,0,8,6), one of those possible palindromes may be “rrrwwwbbbbrbbbbwwwrrr”.</p><p>A palindrome is a word, phrase, or sequence that reads the same backwards as forwards. For example, “rggbwbggr”, “b”, “gg” are palindromes while “rgbb”, “gbbgr” are not. Notice that an empty word, phrase, or sequence is palindrome.</p><p>题意: 给你四种球 ,每种球 <strong>r ,g ,b ,w</strong> 个 ,并且允许将 1 个 r ,1 个 g ,1 个 b ,替换为 3 个 w ,问能否将这些球排成一列 ,使其形成回文串 .</p><p>解: 注意到当 r ,g ,b ,w 的个数全是偶数时 ,可以构成回文 ,当有三个为偶数一个为奇数时显然也可以 .题给予的操作可以把 r ,g ,b ,w 的个数在奇偶间替换 .当有两个偶两个奇时 ,操作一遍后依旧是两偶两奇 ,则不行 .当一偶三奇时 ,操作一遍变为三偶一奇,则可行 .只需特判不能操作时是否可行即可 ,如案例中 0 1 1 1 一偶三奇无法进行操作则不行 .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 309</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line">LL n,m,k,te;</span><br><span class="line">LL p[MS],tot; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">cin &gt;&gt; te;</span><br><span class="line"><span class="keyword">while</span>(te--)&#123;</span><br><span class="line">LL r,g,b,w,ou = <span class="number">0</span>,ji = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; r &gt;&gt; g &gt;&gt; b &gt;&gt; w;</span><br><span class="line">LL t = <span class="built_in">min</span>(r,<span class="built_in">min</span>(g,b));</span><br><span class="line"><span class="keyword">if</span>(r&amp;<span class="number">1</span>) ji++;</span><br><span class="line"><span class="keyword">else</span> ou++;</span><br><span class="line"><span class="keyword">if</span>(g&amp;<span class="number">1</span>) ji++;</span><br><span class="line"><span class="keyword">else</span> ou++;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>) ji++;</span><br><span class="line"><span class="keyword">else</span> ou++;</span><br><span class="line"><span class="keyword">if</span>(w&amp;<span class="number">1</span>) ji++;</span><br><span class="line"><span class="keyword">else</span> ou++;</span><br><span class="line"><span class="keyword">if</span>(ji&lt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t == <span class="number">0</span> || ji == <span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(ji&gt;=<span class="number">3</span>) <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h1 id="B-Boboniu-Plays-Chess"><a href="#B-Boboniu-Plays-Chess" class="headerlink" title="B. Boboniu Plays Chess"></a>B. Boboniu Plays Chess</h1><p>Boboniu likes playing chess with his employees. As we know, no employee can beat the boss in the chess game, so Boboniu has never lost in any round.</p><p>You are a new applicant for his company. Boboniu will test you with the following chess question:</p><p>Consider a n×m grid (rows are numbered from 1 to n, and columns are numbered from 1 to m). You have a chess piece, and it stands at some cell (Sx,Sy) which is not on the border (i.e. 2≤Sx≤n−1 and 2≤Sy≤m−1).</p><p>From the cell (x,y), you can move your chess piece to (x,y′) (1≤y′≤m,y′≠y) or (x′,y) (1≤x′≤n,x′≠x). In other words, the chess piece moves as a rook. From the cell, you can move to any cell on the same row or column.</p><p>Your goal is to visit each cell exactly once. Can you find a solution?</p><p>Note that cells on the path between two adjacent cells in your route are not counted as visited, and it is not required to return to the starting point.</p><p><em>Input</em><br>The only line of the input contains four integers n, m, Sx and Sy (3≤n,m≤100, 2≤Sx≤n−1, 2≤Sy≤m−1) — the number of rows, the number of columns, and the initial position of your chess piece, respectively.</p><p><em>Output</em><br>You should print n⋅m lines.</p><p>The i-th line should contain two integers xi and yi (1≤xi≤n, 1≤yi≤m), denoting the i-th cell that you visited. You should print exactly nm pairs (xi,yi), they should cover all possible pairs (xi,yi), such that 1≤xi≤n, 1≤yi≤m.</p><p>We can show that under these constraints there always exists a solution. If there are multiple answers, print any.</p><p><strong>Examples</strong></p><p><strong>input</strong></p><blockquote><p>3 3 2 2</p></blockquote><p><strong>output</strong></p><blockquote><p>2 2<br>1 2<br>1 3<br>2 3<br>3 3<br>3 2<br>3 1<br>2 1<br>1 1</p></blockquote><p><strong>input</strong></p><blockquote><p>3 4 2 2</p></blockquote><p><strong>output</strong></p><blockquote><p>2 2<br>2 1<br>2 3<br>2 4<br>1 4<br>3 4<br>3 3<br>3 2<br>3 1<br>1 1<br>1 2<br>1 3</p></blockquote><p><strong>Note</strong><br>Possible routes for two examples:</p><p><img src="https://img2020.cnblogs.com/blog/2062718/202008/2062718-20200813012021288-1800694086.png"></p><p>题意: 有 n*m 的一个棋盘 ,你扮演象棋棋子的 “车” ,拥有 “车” 的行走规则 ,给定初始位置 ,求只允许访问每个点一次 ,输出访问的先后顺序 .(象棋种有起子落子 ,“车” 的落子的位置称为 “访问” ,经过的路径上不算 “访问” ) .</p><p>解: 设初始位置在行 x 列 y 处 ,则先把第 x 行先左后右访问一遍 ,最后抵达 x 行 m 列处 .从该点先向下 “蛇形” 访问 ,形如字母 “S” ,直到最后 n 行 ,再回到 x-1 行向上 “蛇形” 访问即可 .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 309</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line">LL n,m,k,te;</span><br><span class="line">LL p[MS],tot; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=y;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,x,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=y+<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,x,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x+<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>((i-x)%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=m;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,i,j);</span><br><span class="line">&#125;</span><br><span class="line">flag = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,i,j);</span><br><span class="line">&#125;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=m;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,i,j);</span><br><span class="line">&#125;</span><br><span class="line">flag = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,i,j);</span><br><span class="line">&#125;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Boboniu-and-Bit-Operations"><a href="#C-Boboniu-and-Bit-Operations" class="headerlink" title="C. Boboniu and Bit Operations"></a>C. Boboniu and Bit Operations</h1><p>Boboniu likes bit operations. He wants to play a game with you.</p><p>Boboniu gives you two sequences of non-negative integers a1,a2,…,an and b1,b2,…,bm.</p><p>For each i (1≤i≤n), you’re asked to choose a j (1≤j≤m) and let ci=ai&amp;bj, where &amp; denotes the bitwise AND operation. Note that you can pick the same j for different i’s.</p><p>Find the minimum possible c1|c2|…|cn, where | denotes the bitwise OR operation.</p><p><em>Input</em><br>The first line contains two integers n and m (1≤n,m≤200).</p><p>The next line contains n integers a1,a2,…,an (0≤ai&lt;2^9).</p><p>The next line contains m integers b1,b2,…,bm (0≤bi&lt;2^9).</p><p><em>Output</em><br>Print one integer: the minimum possible c1|c2|…|cn.</p><p><strong>Examples</strong></p><p><strong>input</strong></p><blockquote><p>4 2<br>2 6 4 0<br>2 4</p></blockquote><p><strong>output</strong></p><blockquote><p>2</p></blockquote><p><strong>input</strong></p><blockquote><p>7 6<br>1 9 1 9 8 1 0<br>1 1 4 5 1 4</p></blockquote><p><strong>output</strong></p><blockquote><p>0</p></blockquote><p><strong>input</strong></p><blockquote><p>8 5<br>179 261 432 162 82 43 10 38<br>379 357 202 184 197</p></blockquote><p><strong>output</strong></p><blockquote><p>147</p></blockquote><p><strong>Note</strong><br>For the first example, we have c1=a1&amp;b2=0, c2=a2&amp;b1=2, c3=a3&amp;b1=0, c4=a4&amp;b1=0.Thus c1|c2|c3|c4=2, and this is the minimal answer we can get.</p><p>题意: 给定两个长度分别为 n ,m 的数组 a ,b ,对于每一个 ai (1≤i≤n) ,都要选择一个 bj (1≤j≤m) ,使得 ci = ai &amp; bi ,求 c1 | c2 | ··· | cn 的最小值.</p><p>解: 注意到数据小于 2^9 ,则最后答案不超过 2^9 ,对于每一个 ai 都有 m 种选择方案 ,从小到大枚举答案ans ,若 a1 分别与 m 个 b数组中的元素匹配后的结果中有 ans 的子集 (将 “010” 作为 “110” 的子集) ,则继续询问 a2 … 若未找到子集 ,则询问 ans+1 …</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 309</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k,te;</span><br><span class="line"><span class="keyword">int</span> a[MS],b[MS],tot; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123; <span class="comment">// x是否是y的子集</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>( ((x&gt;&gt;i)&amp;<span class="number">1</span>) &amp;&amp; !((y&gt;&gt;i)&amp;<span class="number">1</span>) )&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) cin &gt;&gt; b[i];</span><br><span class="line"><span class="keyword">int</span> ans,flag,fl;</span><br><span class="line"><span class="keyword">for</span>(ans = <span class="number">0</span>;ans &lt; <span class="number">512</span>;ans++)&#123;</span><br><span class="line">flag = <span class="number">0</span>; <span class="comment">// 标记当前ans是否可行</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">fl = <span class="number">0</span>; <span class="comment">// 标记 ai 是否可行</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="keyword">int</span> cc = a[i] &amp; b[j];</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">find</span>(cc,ans))&#123;</span><br><span class="line">fl = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!fl) <span class="keyword">break</span>; <span class="comment">// 未找到枚举 ans+1</span></span><br><span class="line"><span class="keyword">if</span>(i == n)&#123; <span class="comment">// 全部枚举完 ai ,当前ans可行</span></span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="D-Boboniu-Chats-with-Du"><a href="#D-Boboniu-Chats-with-Du" class="headerlink" title="D. Boboniu Chats with Du"></a>D. Boboniu Chats with Du</h1><p>Have you ever used the chat application QQ? Well, in a chat group of QQ, administrators can muzzle a user for days.</p><p>In Boboniu’s chat group, there’s a person called Du Yi who likes to make fun of Boboniu every day.</p><p>Du will chat in the group for n days. On the i-th day:</p><p>If Du can speak, he’ll make fun of Boboniu with fun factor ai. But after that, he may be muzzled depending on Boboniu’s mood.<br>Otherwise, Du won’t do anything.<br>Boboniu’s mood is a constant m. On the i-th day:</p><p>If Du can speak and ai&gt;m, then Boboniu will be angry and muzzle him for d days, which means that Du won’t be able to speak on the i+1,i+2,⋯,min(i+d,n)-th days.<br>Otherwise, Boboniu won’t do anything.<br>The total fun factor is the sum of the fun factors on the days when Du can speak.</p><p>Du asked you to find the maximum total fun factor among all possible permutations of a.</p><p><em>Input</em><br>The first line contains three integers n, d and m (1≤d≤n≤105,0≤m≤109).</p><p>The next line contains n integers a1,a2,…,an (0≤ai≤109).</p><p><em>Output</em><br>Print one integer: the maximum total fun factor among all permutations of a.</p><p><strong>Examples</strong></p><p><strong>input</strong></p><blockquote><p>5 2 11<br>8 10 15 23 5</p></blockquote><p><strong>output</strong></p><blockquote><p>48</p></blockquote><p><strong>input</strong></p><blockquote><p>20 2 16<br>20 5 8 2 18 16 2 16 16 1 5 16 2 13 6 16 4 17 21 7</p></blockquote><p><strong>output</strong></p><blockquote><p>195</p></blockquote><p><strong>Note</strong><br>In the first example, you can set a′=[15,5,8,10,23]. Then Du’s chatting record will be:</p><p>Make fun of Boboniu with fun factor 15.<br>Be muzzled.<br>Be muzzled.<br>Make fun of Boboniu with fun factor 10.<br>Make fun of Boboniu with fun factor 23.<br>Thus the total fun factor is 48.</p><p>题意: 在QQ聊天群中 ,管理员可以连续几天禁言一名用户 .Du 喜欢在QQ群中与 Boboniu 开玩笑 .Du 将在QQ群中聊天 n 天 .在第 i 天 ,如果 Du 能说话 ,他将会得到值为 ai 的快乐值 ,但他也许会被禁言这取决于 Boboniu 的心情 ,否则什么也不会做 .如果 Du 能说话并且 ai &gt; m ,这样Boboniu 就会生气并禁言 Du 随后的d天 ,这意味着 Du 在 i+1 ,i+2 , … ,min(i+d,n) 不能说话 .在 a 的所有可能排列中 ,找到 Du 一共能获得最多的快乐值总和 .</p><p>解: 把大于 m 和 小于等于 m 的区分来放 ,一个大于 m 的可以带走 d 天 .设大于 m 的天数为 x ,小于的为 y ,在大于 m 中选择 t 天 (当然选择最大的几个) ,其中一天可以放在序列末尾 ,所以一共消耗 cost = (t-1)*(d+1)+1 天 ,剩下的 n-cost 天则在小于 m 的序列中选择 ,枚举 t 即可 . </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line">LL n,m,k,te,ans;</span><br><span class="line">LL p[MS],high[MS],low[MS]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//ios::sync_with_stdio(false);</span></span><br><span class="line">LL cnt1 = <span class="number">0</span> ,cnt2 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;p[i]);</span><br><span class="line"><span class="keyword">if</span>(p[i]&gt;k) high[++cnt1] = p[i];</span><br><span class="line"><span class="keyword">else</span> low[++cnt2] = p[i];</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">sort</span>(high+<span class="number">1</span>,high+cnt1+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="built_in">sort</span>(low+<span class="number">1</span>,low+cnt2+<span class="number">1</span>,cmp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=cnt2;i++) low[i] += low[i<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line">LL ans = low[cnt2], pos, res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt1;i++)&#123;</span><br><span class="line">res += high[i];</span><br><span class="line">pos = (i<span class="number">-1</span>)*(m+<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(pos &gt; n) <span class="keyword">break</span>;</span><br><span class="line">pos = n - pos;</span><br><span class="line">pos = <span class="built_in">min</span>(pos,cnt2);</span><br><span class="line">ans = <span class="built_in">max</span>(ans,res+low[pos]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【数论】等比数列求和取模</title>
      <link href="/2020/07/24/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E7%AD%89%E6%AF%94%E6%95%B0%E5%88%97%E6%B1%82%E5%92%8C%E5%8F%96%E6%A8%A1/"/>
      <url>/2020/07/24/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E7%AD%89%E6%AF%94%E6%95%B0%E5%88%97%E6%B1%82%E5%92%8C%E5%8F%96%E6%A8%A1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200724224346688-539001102.jpg"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 9901</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL n ,LL m)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">1</span>%mod;</span><br><span class="line"><span class="keyword">for</span>(;m;m&gt;&gt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(m&amp;<span class="number">1</span>) ans = ans*n%mod;</span><br><span class="line">n = n*n%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">calc</span><span class="params">(LL n ,LL m)</span></span>&#123; <span class="comment">// 1+n+n^2+...+n^m;</span></span><br><span class="line"><span class="keyword">if</span>(m == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(m&amp;<span class="number">1</span>) <span class="built_in"><span class="keyword">return</span></span> (<span class="number">1</span>+<span class="built_in">qpow</span>(n,(m+<span class="number">1</span>)/<span class="number">2</span>))*<span class="built_in">calc</span>(n,m/<span class="number">2</span>)%mod;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in"><span class="keyword">return</span></span> ((<span class="number">1</span>+<span class="built_in">qpow</span>(n,m/<span class="number">2</span>))*<span class="built_in">calc</span>(n,m/<span class="number">2</span><span class="number">-1</span>)%mod+<span class="built_in">qpow</span>(n,m))%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">LL a1 ,q ,tot; <span class="comment">// 首项 ,公比 ,项数</span></span><br><span class="line">cin &gt;&gt; a1 &gt;&gt; q &gt;&gt; tot;</span><br><span class="line">tot--;</span><br><span class="line">cout &lt;&lt; <span class="function">a1*<span class="title">calc</span><span class="params">(q,tot)</span>%mod &lt;&lt; endl</span>; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【二分图】判断二分图</title>
      <link href="/2020/07/15/ACM/%E3%80%90%E4%BA%8C%E5%88%86%E5%9B%BE%E3%80%91%E5%88%A4%E6%96%AD%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
      <url>/2020/07/15/ACM/%E3%80%90%E4%BA%8C%E5%88%86%E5%9B%BE%E3%80%91%E5%88%A4%E6%96%AD%E4%BA%8C%E5%88%86%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="染色法"><a href="#染色法" class="headerlink" title="染色法"></a>染色法</h1><p>学习自<a href="https://blog.csdn.net/weixin_44073496/article/details/85033393" target="_blank">详解1</a> ,<a href="https://blog.csdn.net/qq_38956769/article/details/80238896#%E5%9B%9B%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95" target="_blank">详解2</a></p><h2 id="例题-1"><a href="#例题-1" class="headerlink" title="例题 1"></a>例题 1</h2><p><a href="http://poj.org/problem?id=2492" target="_blank">POJ 2492 “A Bug’s Life”</a></p><p>解: 判断是否为二分图即可 ,同时可能有多个连通图 ,需要多次搜索染色 .</p><h3 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码 1"></a>示例代码 1</h3><p>说明: 邻接矩阵存图 ,$dfs$搜索染色 .</p><p>时间 $4704MS$ … 题目给了$10000MS$ 管他呢 .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 2009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k,u,v,flag;</span><br><span class="line"><span class="keyword">int</span> mp[MS][MS];</span><br><span class="line"><span class="keyword">int</span> col[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> bt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[bt][i])&#123;</span><br><span class="line"><span class="keyword">if</span>(col[i] == col[bt])&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(col[i] == <span class="number">-1</span>)&#123;</span><br><span class="line">col[i] = !col[bt];</span><br><span class="line"><span class="built_in">dfs</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> o=<span class="number">1</span>;o&lt;=k;o++)&#123;</span><br><span class="line"><span class="built_in">memset</span>(mp,<span class="number">0</span>,<span class="keyword">sizeof</span> mp);</span><br><span class="line"><span class="built_in">memset</span>(col,<span class="number">-1</span>,<span class="keyword">sizeof</span> col);</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">mp[u][v] = mp[v][u] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(col[i] == <span class="number">-1</span>)&#123;</span><br><span class="line">col[i] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">dfs</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Scenario #&quot;</span> &lt;&lt; o &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Suspicious bugs found!&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Scenario #&quot;</span> &lt;&lt; o &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;No suspicious bugs found!&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="示例代码-2"><a href="#示例代码-2" class="headerlink" title="示例代码 2"></a>示例代码 2</h3><p>说明: 链式前向星存图 ,$dfs$搜索染色 .</p><p>时间 $4407MS$… 和邻接矩阵差不了多少 ,就当再练一次吧 .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 2009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k,u,v,flag,tot;</span><br><span class="line"><span class="keyword">int</span> col[MS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> to,ne;</span><br><span class="line">&#125;edge[<span class="number">2000009</span>];</span><br><span class="line"><span class="keyword">int</span> head[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">edge[tot].to = v;</span><br><span class="line">edge[tot].ne = head[u];</span><br><span class="line">head[u] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> bt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[bt];i!=<span class="number">-1</span>;i=edge[i].ne)&#123;</span><br><span class="line"><span class="keyword">int</span> it = edge[i].to;</span><br><span class="line"><span class="keyword">if</span>(col[it] == col[bt])&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(col[it] == <span class="number">-1</span>)&#123;</span><br><span class="line">col[it] = !col[bt];</span><br><span class="line"><span class="built_in">dfs</span>(it);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> o=<span class="number">1</span>;o&lt;=k;o++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MS;i++) col[i] = head[i] = <span class="number">-1</span>;</span><br><span class="line">flag = tot = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line"><span class="built_in">add</span>(u,v);</span><br><span class="line"><span class="built_in">add</span>(v,u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(col[i] == <span class="number">-1</span>)&#123;</span><br><span class="line">col[i] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">dfs</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Scenario #&quot;</span> &lt;&lt; o &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Suspicious bugs found!&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Scenario #&quot;</span> &lt;&lt; o &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;No suspicious bugs found!&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="例题-2"><a href="#例题-2" class="headerlink" title="例题 2"></a>例题 2</h2><p><a href="https://codeforces.ml/contest/1093/problem/D" target="_blank">cf 1093D “Beautiful Graph”</a></p><p>题意: k 组样例 ,每次给出 n 个顶点 m 条边的无向图 ,将整个图的所有顶点填充数字 ,每个顶点 u 可填数字 <strong>1，2，3</strong> . 要求 m 条边每条边连接的两个顶点 (u,v) 的填充的数字权值之和为<strong>奇数</strong> .问这样的填充方法有多少个 .方案可能很大，取模$998244353$ .</p><p>如果没有则输出$0$.</p><p>解: 先将其分为二分图 ,得到两个集合 $X$ ,$Y$ ,当 $X$ 中填 $2$ 此时 $Y$ 中每个点都有 $1$ $3$ 两种选择 ,所以有 $2^y$ 种 . 反过来 $Y$ 填 $2$ 则有 $2^x$ 种 ,所以每一个连通图都有 $2^x + 2^y$ 种 . 可能出现多个连通图 ,累乘即可 .</p><p>注意要对 $2$ 的次方作打表处理 ,当时傻傻的用快速幂超时 …</p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 300009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line">LL n,m,k,u,v,flag,cx,cy;</span><br><span class="line">LL col[MS],er[MS];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">LL to,ne;</span><br><span class="line">&#125;edge[MS&lt;&lt;<span class="number">1</span>];</span><br><span class="line">LL head[MS],tc;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(LL a,LL b)</span></span>&#123;</span><br><span class="line">edge[tc].to = b;</span><br><span class="line">edge[tc].ne = head[a];</span><br><span class="line">head[a] = tc++; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(LL bt,LL cc)</span></span>&#123; <span class="comment">// bfs也行</span></span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=head[bt];i!=<span class="number">-1</span>;i=edge[i].ne)&#123;</span><br><span class="line">LL tt = edge[i].to;</span><br><span class="line"><span class="keyword">if</span>(col[tt] == col[bt])&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(col[tt] == <span class="number">-1</span>)&#123;</span><br><span class="line">col[tt] = !cc;</span><br><span class="line"><span class="keyword">if</span>(col[tt] == <span class="number">0</span>) cx++; <span class="comment">// x 集合元素个数++ </span></span><br><span class="line"><span class="keyword">else</span> cy++; <span class="comment">// y 集合元素个数++ </span></span><br><span class="line"><span class="built_in">dfs</span>(tt,!cc);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">er[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;MS;i++)&#123; <span class="comment">// 2 的次方 </span></span><br><span class="line">er[i] = er[i<span class="number">-1</span>]*<span class="number">2LL</span>%mod;</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">LL ans = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">head[i] = col[i] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123; <span class="comment">// 链式前向星 </span></span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line"><span class="built_in">add</span>(u,v);</span><br><span class="line"><span class="built_in">add</span>(v,u);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123; <span class="comment">// 也许有多个连通图 </span></span><br><span class="line"><span class="keyword">if</span>(col[i] == <span class="number">-1</span>)&#123;</span><br><span class="line">cx = cy = <span class="number">0</span>;</span><br><span class="line">cx++; <span class="comment">// 记录 X 集合元素个数 </span></span><br><span class="line">col[i] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">dfs</span>(i,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">ans = ans*(er[cx]+er[cy])%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(flag) cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分图 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【图论】链式前向星</title>
      <link href="/2020/07/14/ACM/%E3%80%90%E5%9B%BE%E8%AE%BA%E3%80%91%E9%93%BE%E5%BC%8F%E5%89%8D%E5%90%91%E6%98%9F/"/>
      <url>/2020/07/14/ACM/%E3%80%90%E5%9B%BE%E8%AE%BA%E3%80%91%E9%93%BE%E5%BC%8F%E5%89%8D%E5%90%91%E6%98%9F/</url>
      
        <content type="html"><![CDATA[<p>该算法学习来自 <a href="https://www.bilibili.com/video/BV1b7411u7uq?p=1&share_medium=android&share_plat=android&share_source=COPY&share_tag=s_i&timestamp=1594280040&unique_k=Ytznlo" target="_blank">b站</a></p><h1 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码 1"></a>示例代码 1</h1><p>输出的访问顺序与输入相反</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,u,v,w,tot;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> to;</span><br><span class="line"><span class="keyword">int</span> nxt;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line">&#125;edge[MS];</span><br><span class="line"><span class="keyword">int</span> head[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span> head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">edge[tot].to = v;</span><br><span class="line">edge[tot].val = w;</span><br><span class="line">edge[tot].nxt = head[u];</span><br><span class="line">head[u] = tot++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line"><span class="built_in">add</span>(u,v,w);</span><br><span class="line"><span class="built_in">add</span>(v,u,w);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MS;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=head[i];j!=<span class="number">-1</span>;j=edge[j].nxt)&#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; <span class="string">&quot;-&gt;&quot;</span> &lt;&lt; edge[j].to &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; edge[j].val &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">init</span>(); </span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">intput:</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">1 2 2 </span></span><br><span class="line"><span class="comment">1 3 4  </span></span><br><span class="line"><span class="comment">2 3 8  </span></span><br><span class="line"><span class="comment">4 5 6 </span></span><br><span class="line"><span class="comment">8 9 3 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1-&gt;3:4</span></span><br><span class="line"><span class="comment">1-&gt;2:2</span></span><br><span class="line"><span class="comment">2-&gt;3:8</span></span><br><span class="line"><span class="comment">2-&gt;1:2</span></span><br><span class="line"><span class="comment">3-&gt;2:8</span></span><br><span class="line"><span class="comment">3-&gt;1:4</span></span><br><span class="line"><span class="comment">4-&gt;5:6</span></span><br><span class="line"><span class="comment">5-&gt;4:6</span></span><br><span class="line"><span class="comment">8-&gt;9:3</span></span><br><span class="line"><span class="comment">9-&gt;8:3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="示例代码-2"><a href="#示例代码-2" class="headerlink" title="示例代码 2"></a>示例代码 2</h1><p>感觉用 vector 更加好理解 ,虽然不是链式前向星了 ,但是代码简单 ,其输出访问顺序与输入相同 .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,u,v,w;</span><br><span class="line"><span class="keyword">int</span> val[MS][MS]; </span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; mp[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">val[u][v] = val[v][u] = w;</span><br><span class="line">mp[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">mp[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;it:mp[i])&#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; <span class="string">&quot;-&gt;&quot;</span> &lt;&lt; it &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; val[i][it] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">intput:</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">1 2 2 </span></span><br><span class="line"><span class="comment">1 3 4  </span></span><br><span class="line"><span class="comment">2 3 8  </span></span><br><span class="line"><span class="comment">4 5 6 </span></span><br><span class="line"><span class="comment">8 9 3</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1-&gt;2:2</span></span><br><span class="line"><span class="comment">1-&gt;3:4</span></span><br><span class="line"><span class="comment">2-&gt;1:2</span></span><br><span class="line"><span class="comment">2-&gt;3:8</span></span><br><span class="line"><span class="comment">3-&gt;1:4</span></span><br><span class="line"><span class="comment">3-&gt;2:8</span></span><br><span class="line"><span class="comment">4-&gt;5:6</span></span><br><span class="line"><span class="comment">5-&gt;4:6</span></span><br><span class="line"><span class="comment">8-&gt;9:3</span></span><br><span class="line"><span class="comment">9-&gt;8:3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【二分图】匈牙利算法</title>
      <link href="/2020/07/14/ACM/%E3%80%90%E4%BA%8C%E5%88%86%E5%9B%BE%E3%80%91%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95/"/>
      <url>/2020/07/14/ACM/%E3%80%90%E4%BA%8C%E5%88%86%E5%9B%BE%E3%80%91%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h1><p><a href="https://blog.csdn.net/lw277232240/article/details/72615522?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase" target="_blank">简单易懂的详解</a> .</p><p>我愿称之为 $ntr$ 算法</p><h1 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">LL mp[MS][MS]; <span class="comment">// 关系图 1 有 0 无 </span></span><br><span class="line">LL vis[MS]; <span class="comment">//  表示是否询问过</span></span><br><span class="line">LL match[MS]; <span class="comment">// 表示匹配关系</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[x][i] &amp;&amp; !vis[i])&#123; <span class="comment">// 有关系且未被询问过 </span></span><br><span class="line">vis[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!match[i] || <span class="built_in">find</span>(match[i]))&#123; </span><br><span class="line">match[i] = x;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><p>题目<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2063" target="_blank">POJ 2063</a> .</p><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 509</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line">LL n,m,k; <span class="comment">// 男生人数 ,女生人数 ,关系个数 </span></span><br><span class="line">LL mp[MS][MS]; <span class="comment">// 关系图 1 有 0 无 </span></span><br><span class="line">LL vis[MS]; <span class="comment">//  表示是否询问过</span></span><br><span class="line">LL match[MS]; <span class="comment">// 表示匹配关系 match[1] = 2 表示 1号男 与 2号女 牵手 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(LL x)</span></span>&#123; <span class="comment">// x 表示任何一个女生 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[x][i] &amp;&amp; !vis[i])&#123; <span class="comment">// 有关系且未被询问过 </span></span><br><span class="line">vis[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!match[i] || <span class="built_in">find</span>(match[i]))&#123; <span class="comment">// 男生没被牵手 或者 被ntr </span></span><br><span class="line">match[i] = x;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; k)&#123;</span><br><span class="line"><span class="keyword">if</span>(k == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(match,<span class="number">0</span>,<span class="keyword">sizeof</span> match);</span><br><span class="line"><span class="built_in">memset</span>(mp,<span class="number">0</span>,<span class="keyword">sizeof</span> mp);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m; <span class="comment">// 女 男 人数 </span></span><br><span class="line">LL u,v,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">mp[u][v] = <span class="number">1</span>; <span class="comment">// 表示 女u 愿意与 男v 牵手 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">find</span>(i)) ans++; <span class="comment">// i号 女生牵手成功 </span></span><br><span class="line">&#125; </span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl; <span class="comment">// 配对成功数量 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分图 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查找</title>
      <link href="/2020/07/08/ACM/%E6%9F%A5%E6%89%BE/"/>
      <url>/2020/07/08/ACM/%E6%9F%A5%E6%89%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="线性表的查找"><a href="#线性表的查找" class="headerlink" title="线性表的查找"></a>线性表的查找</h1><h2 id="顺序查找"><a href="#顺序查找" class="headerlink" title="顺序查找"></a>顺序查找</h2><h3 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h3><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708132650266-1847504237.png"></p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p[<span class="number">10</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SeqSearch</span><span class="params">(<span class="keyword">int</span> tar)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;<span class="number">10</span>&amp;&amp;p[i]!=tar) i++; <span class="comment">// 从头往后找 </span></span><br><span class="line"><span class="keyword">if</span>(i&gt;=<span class="number">10</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> i+<span class="number">1</span>; <span class="comment">// 找到返回逻辑序号 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> tar;</span><br><span class="line">cin &gt;&gt; tar;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">SeqSearch</span>(tar));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><h3 id="基本思路-1"><a href="#基本思路-1" class="headerlink" title="基本思路"></a>基本思路</h3><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708132746763-960201657.png"></p><h3 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p[<span class="number">10</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;; <span class="comment">// 需要递增</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BinSearch</span><span class="params">(<span class="keyword">int</span> tar)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span> ,r = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line"><span class="keyword">int</span> mi = (l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(p[mi] == tar) <span class="keyword">return</span> mi+<span class="number">1</span>; <span class="comment">// 返回逻辑序号</span></span><br><span class="line"><span class="keyword">if</span>(p[mi] &lt; tar) l = mi+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> r = mi<span class="number">-1</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> tar;</span><br><span class="line">cin &gt;&gt; tar;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">BinSearch</span>(tar));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二叉排列树"><a href="#二叉排列树" class="headerlink" title="二叉排列树"></a>二叉排列树</h1><h2 id="插入和生成基本思路"><a href="#插入和生成基本思路" class="headerlink" title="插入和生成基本思路"></a>插入和生成基本思路</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708135524608-2004633927.png"></p><h2 id="查找基本思路"><a href="#查找基本思路" class="headerlink" title="查找基本思路"></a>查找基本思路</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708135501444-1802483528.png"></p><h2 id="删除的基本思路"><a href="#删除的基本思路" class="headerlink" title="删除的基本思路"></a>删除的基本思路</h2><p>1.若删除的是叶子节点 ,则直接删除即可</p><p>2.若被删除的节点只有左子树或右子树 ,则用左子树或右子树代替</p><p>3.若删除的节点既有左子树又有右子树 ,则找到左子树的最右节点即最大节点与之替换</p><h2 id="示例代码-2"><a href="#示例代码-2" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 10000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">int</span> p[MS];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tnode</span>&#123;</span></span><br><span class="line">tnode *l,*r;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line">&#125;*root;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入元素个数：\n&quot;</span>);</span><br><span class="line">cin &gt;&gt; len;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入元素：\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">tnode *<span class="title">SearchBST</span><span class="params">(tnode *bt,<span class="keyword">int</span> tar)</span></span>&#123; <span class="comment">// 查找二叉排列树 </span></span><br><span class="line"><span class="keyword">if</span>(bt==<span class="literal">NULL</span>||bt-&gt;val == tar) </span><br><span class="line"><span class="keyword">return</span> bt;</span><br><span class="line"><span class="keyword">if</span>(bt-&gt;val &gt; tar) </span><br><span class="line"><span class="keyword">return</span> <span class="built_in">SearchBST</span>(bt-&gt;l,tar);</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="keyword">return</span> <span class="built_in">SearchBST</span>(bt-&gt;r,tar);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertBST</span><span class="params">(tnode *&amp;p,<span class="keyword">int</span> tar)</span></span>&#123; <span class="comment">// 二叉排列树的插入 </span></span><br><span class="line"><span class="keyword">if</span>(p == <span class="literal">NULL</span>)&#123;</span><br><span class="line">p = (tnode*)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(tnode));</span><br><span class="line">p-&gt;val = tar;</span><br><span class="line">p-&gt;l = p-&gt;r = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(p-&gt;val &gt; tar)&#123;</span><br><span class="line"><span class="built_in">InsertBST</span>(p-&gt;l,tar);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(p-&gt;val &lt; tar)&#123;</span><br><span class="line"><span class="built_in">InsertBST</span>(p-&gt;r,tar);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">tnode *<span class="title">CreatBST</span><span class="params">(<span class="keyword">int</span> p[],<span class="keyword">int</span> len)</span></span>&#123; <span class="comment">// 二叉排列树的生成 </span></span><br><span class="line">tnode *bt = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="built_in">InsertBST</span>(bt,p[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">in</span><span class="params">(tnode *bt)</span></span>&#123; <span class="comment">// 中序遍历 </span></span><br><span class="line"><span class="keyword">if</span>(bt!=<span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">in</span>(bt-&gt;l);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,bt-&gt;val);</span><br><span class="line"><span class="built_in">in</span>(bt-&gt;r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete1</span><span class="params">(tnode *&amp;p,tnode *&amp;n)</span></span>&#123; <span class="comment">// 需要删除的节点 ，该节点的左孩子 </span></span><br><span class="line">tnode *t;</span><br><span class="line"><span class="keyword">if</span>(n-&gt;r != <span class="literal">NULL</span>) <span class="built_in">Delete1</span>(p,n-&gt;r); <span class="comment">// 找到最右即最大的节点 </span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">p-&gt;val = n-&gt;val;</span><br><span class="line">t = n;</span><br><span class="line">n = n-&gt;l;</span><br><span class="line"><span class="built_in">free</span>(t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(tnode *&amp;p)</span></span>&#123;</span><br><span class="line">tnode *t;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;l == <span class="literal">NULL</span>)&#123;</span><br><span class="line">t = p;</span><br><span class="line">p = p-&gt;r;</span><br><span class="line"><span class="built_in">free</span>(t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(p-&gt;r == <span class="literal">NULL</span>)&#123;</span><br><span class="line">t = p;</span><br><span class="line">p = p-&gt;l;</span><br><span class="line"><span class="built_in">free</span>(t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">Delete1</span>(p,p-&gt;l); <span class="comment">// 左右都有孩子 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeleteBST</span><span class="params">(tnode *&amp;p,<span class="keyword">int</span> tar)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;val == tar) </span><br><span class="line"><span class="built_in">Delete</span>(p);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(p-&gt;val &gt; tar) </span><br><span class="line"><span class="built_in">DeleteBST</span>(p-&gt;l,tar);</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">DeleteBST</span>(p-&gt;r,tar);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="comment">// 得到二叉排列树的根节点 </span></span><br><span class="line">root = <span class="built_in">CreatBST</span>(p,len);</span><br><span class="line"><span class="comment">// 中序遍历数据为增序 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;中序遍历的结果：\n&quot;</span>);</span><br><span class="line"><span class="built_in">in</span>(root);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="comment">// 删除节点</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入想要删除的数据：\n&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> tar;</span><br><span class="line">cin &gt;&gt; tar;</span><br><span class="line"><span class="built_in">DeleteBST</span>(root,tar);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;删除完成!\n&quot;</span>);</span><br><span class="line"><span class="comment">// 输出中序遍历的结果 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;中序遍历的结果：\n&quot;</span>);</span><br><span class="line"><span class="built_in">in</span>(root);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="平衡二叉树"><a href="#平衡二叉树" class="headerlink" title="平衡二叉树"></a>平衡二叉树</h1><p>我不会 ,我诚实</p><h1 id="B树和B-树"><a href="#B树和B-树" class="headerlink" title="B树和B+树"></a>B树和B+树</h1><p>我的心里没有B数 ,更没有B+树…</p><h1 id="哈希表的查找"><a href="#哈希表的查找" class="headerlink" title="哈希表的查找"></a>哈希表的查找</h1><p>1.直接定址法: 例如学号2019001 - ‘张三’ ,2019003 - ‘赵四’ ,以学号减去 209000 为地址 ,h(k) = k + c;</p><p>2.除留余数法: 即模上一个素数 ,h(k) = k mod p;</p><p>3.数字分析法: 例如数据 93215 96531 53222 46333 … 可取最后两位数字作为哈希地址 15 31 22 33 </p><h2 id="拉链法建立哈希表"><a href="#拉链法建立哈希表" class="headerlink" title="拉链法建立哈希表"></a>拉链法建立哈希表</h2><h3 id="基本思路-2"><a href="#基本思路-2" class="headerlink" title="基本思路"></a>基本思路</h3><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708205705141-1280407356.png"></p><h3 id="示例代码-3"><a href="#示例代码-3" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> m = <span class="number">13</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p[<span class="number">15</span>] = &#123;<span class="number">16</span>,<span class="number">74</span>,<span class="number">60</span>,<span class="number">43</span>,<span class="number">54</span>,<span class="number">90</span>,<span class="number">46</span>,<span class="number">31</span>,<span class="number">29</span>,<span class="number">88</span>,<span class="number">77</span>&#125;; </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">node *next;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line">&#125;*head[m+<span class="number">1</span>],*tail[m+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 初始化 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++) head[i] = tail[i] = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">// 建立 hash 表 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">11</span>;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> t = p[i] % m;</span><br><span class="line">node *cc = (node*)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(node));</span><br><span class="line">cc-&gt;val = p[i];</span><br><span class="line">cc-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span>(head[t] == <span class="literal">NULL</span>)&#123;</span><br><span class="line">head[t] = cc;</span><br><span class="line">tail[t] = cc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">tail[t]-&gt;next = cc;</span><br><span class="line">tail[t] = tail[t]-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查找 </span></span><br><span class="line"><span class="keyword">int</span> tar,flag = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; tar;</span><br><span class="line">node *bt = head[tar%m];</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(bt-&gt;val == tar)&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">bt = bt-&gt;next;</span><br><span class="line">&#125;<span class="keyword">while</span>(bt!=<span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">// 输出结果 </span></span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;no\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>内排序</title>
      <link href="/2020/07/08/ACM/%E5%86%85%E6%8E%92%E5%BA%8F/"/>
      <url>/2020/07/08/ACM/%E5%86%85%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="各种内排序的性能"><a href="#各种内排序的性能" class="headerlink" title="各种内排序的性能"></a>各种内排序的性能</h1><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708131653735-167360322.png"></p><h1 id="直接插入排序"><a href="#直接插入排序" class="headerlink" title="直接插入排序"></a>直接插入排序</h1><h2 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708115504078-1565346538.png"></p><h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p[i]);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[i]&lt;p[i<span class="number">-1</span>])&#123; <span class="comment">// 该点数据 比 有序区的最后一个数据即最大的数据 大 </span></span><br><span class="line"><span class="keyword">int</span> t = p[i]; <span class="comment">// 记录该点数据 </span></span><br><span class="line"><span class="keyword">int</span> j = i; <span class="comment">// 记录该点下标 </span></span><br><span class="line"><span class="keyword">do</span>&#123; <span class="comment">// 有序区元素一一右移直到找到合适位置 </span></span><br><span class="line">p[j] = p[j<span class="number">-1</span>];</span><br><span class="line">j--;</span><br><span class="line">&#125; <span class="keyword">while</span>(j&gt;<span class="number">0</span>&amp;&amp;t&lt;p[j<span class="number">-1</span>]);</span><br><span class="line">p[j] = t; <span class="comment">// 放入记录的数据 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">InsertSort</span>();</span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment">5 6 4 9 8 1 3 2 7</span></span><br><span class="line"><span class="comment">6 5 4 9 8 7 3 2 1 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1 2 3 4 5 6 7 8 9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="折半插入排序"><a href="#折半插入排序" class="headerlink" title="折半插入排序"></a>折半插入排序</h1><h2 id="基本思路-1"><a href="#基本思路-1" class="headerlink" title="基本思路"></a>基本思路</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708115524702-489252581.png"></p><h2 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p[i]);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BinInsertSort</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[i]&lt;p[i<span class="number">-1</span>])&#123; <span class="comment">// 该点数据 比 有序区的最后一个数据即最大的数据 大 </span></span><br><span class="line"><span class="keyword">int</span> t = p[i]; </span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span> ,r = i<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123; <span class="comment">// 二分查找插入点 </span></span><br><span class="line"><span class="keyword">int</span> mi = (l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(t&gt;=p[mi]) l = mi+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> r = mi<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&gt;r;j--) p[j] = p[j<span class="number">-1</span>]; <span class="comment">//  插入点后数据后移 </span></span><br><span class="line">p[r+<span class="number">1</span>] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">BinInsertSort</span>();</span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment">5 6 4 9 8 1 3 2 7</span></span><br><span class="line"><span class="comment">6 5 4 9 8 7 3 2 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1 2 3 4 5 6 7 8 9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h1><h2 id="基本思路-2"><a href="#基本思路-2" class="headerlink" title="基本思路"></a>基本思路</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708115440023-706851258.png"></p><h2 id="示例代码-2"><a href="#示例代码-2" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellSort</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> d = len/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(d&gt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="comment">// 对相邻 d 位置的元素组直接插入排序 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=d;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> t = p[i];</span><br><span class="line"><span class="keyword">int</span> j = i-d;</span><br><span class="line"><span class="keyword">while</span>(j&gt;=<span class="number">0</span>&amp;&amp;t&lt;p[j])&#123;</span><br><span class="line">p[j+d] = p[j];</span><br><span class="line">j -= d;</span><br><span class="line">&#125;</span><br><span class="line">p[j+d] = t;</span><br><span class="line">&#125;</span><br><span class="line">d/=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">ShellSort</span>();</span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment">5 6 4 9 8 1 3 2 7</span></span><br><span class="line"><span class="comment">6 5 4 9 8 7 3 2 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1 2 3 4 5 6 7 8 9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h1><h2 id="基本思路-3"><a href="#基本思路-3" class="headerlink" title="基本思路"></a>基本思路</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708120435636-1319359376.png"></p><h2 id="示例代码-3"><a href="#示例代码-3" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> exchange; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len<span class="number">-1</span>;i++)&#123;</span><br><span class="line">exchange = <span class="number">0</span>; <span class="comment">// 记录是否有交换记录 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=len<span class="number">-1</span>;j&gt;i;j--)&#123; <span class="comment">// 将无序区最小的值交换到有序区的顶端 </span></span><br><span class="line"><span class="keyword">if</span>(p[j]&lt;p[j<span class="number">-1</span>])&#123;</span><br><span class="line">exchange = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> t = p[j];</span><br><span class="line">p[j] = p[j<span class="number">-1</span>];</span><br><span class="line">p[j<span class="number">-1</span>] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 若无交换记录 则此时无序区已有序 </span></span><br><span class="line"><span class="keyword">if</span>(exchange == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">BubbleSort</span>();</span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment">5 6 4 9 8 1 3 2 7</span></span><br><span class="line"><span class="comment">6 5 4 9 8 7 3 2 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1 2 3 4 5 6 7 8 9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h1><h2 id="基本思路-4"><a href="#基本思路-4" class="headerlink" title="基本思路"></a>基本思路</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708120742856-17981058.png"></p><h2 id="示例代码-4"><a href="#示例代码-4" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 左闭右也闭 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QuickSort</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> e)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s&gt;=e) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> i = s ,j = e;</span><br><span class="line"><span class="comment">// 一次划分 </span></span><br><span class="line"><span class="keyword">int</span> t = p[i];</span><br><span class="line"><span class="keyword">while</span>(i&lt;j)&#123;</span><br><span class="line"><span class="keyword">while</span>(j&gt;i&amp;&amp;p[j]&gt;=t) j--;</span><br><span class="line">p[i] = p[j];</span><br><span class="line"><span class="keyword">while</span>(i&lt;j&amp;&amp;p[i]&lt;=t) i++;</span><br><span class="line">p[j] = p[i];</span><br><span class="line">&#125;</span><br><span class="line">p[i] = t;</span><br><span class="line"><span class="comment">// 左右递归 </span></span><br><span class="line"><span class="built_in">QuickSort</span>(s,i<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">QuickSort</span>(i+<span class="number">1</span>,e);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">QuickSort</span>(<span class="number">0</span>,len<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment">5 6 4 9 8 1 3 2 7</span></span><br><span class="line"><span class="comment">6 5 4 9 8 7 3 2 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1 2 3 4 5 6 7 8 9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="简单选择排序"><a href="#简单选择排序" class="headerlink" title="简单选择排序"></a>简单选择排序</h1><h2 id="基本思路-5"><a href="#基本思路-5" class="headerlink" title="基本思路"></a>基本思路</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708121520011-1884528234.png"></p><h2 id="示例代码-5"><a href="#示例代码-5" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectSort</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> k = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;len;j++)&#123; <span class="comment">// 得到区间 i ~ len-1 的最小值下标 </span></span><br><span class="line"><span class="keyword">if</span>(p[j]&lt;p[k]) k = j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i!=k)&#123; <span class="comment">// 交换 </span></span><br><span class="line"><span class="keyword">int</span> t = p[k];</span><br><span class="line">p[k] = p[i];</span><br><span class="line">p[i] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">SelectSort</span>();</span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment">5 6 4 9 8 1 3 2 7</span></span><br><span class="line"><span class="comment">6 5 4 9 8 7 3 2 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1 2 3 4 5 6 7 8 9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h1><h2 id="基本思路-6"><a href="#基本思路-6" class="headerlink" title="基本思路"></a>基本思路</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708122835301-1302391456.png"></p><h2 id="示例代码-6"><a href="#示例代码-6" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">11</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sift</span><span class="params">(<span class="keyword">int</span> low,<span class="keyword">int</span> high)</span></span>&#123; <span class="comment">// 调整堆 </span></span><br><span class="line"><span class="keyword">int</span> i = low ,j = <span class="number">2</span>*i;</span><br><span class="line"><span class="keyword">int</span> t = p[i];</span><br><span class="line"><span class="keyword">while</span>(j&lt;=high)&#123;</span><br><span class="line"><span class="keyword">if</span>(j&lt;high&amp;&amp;p[j+<span class="number">1</span>]&gt;p[j]) j++; <span class="comment">// j 指向大孩子 </span></span><br><span class="line"><span class="keyword">if</span>(p[j]&gt;t)&#123; <span class="comment">// 父亲小 </span></span><br><span class="line">p[i] = p[j];</span><br><span class="line">i = j;</span><br><span class="line">j = <span class="number">2</span>*i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">p[i] = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HeapSort</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len/<span class="number">2</span>;i&gt;=<span class="number">1</span>;i--)&#123; <span class="comment">// 初始化堆 </span></span><br><span class="line"><span class="built_in">sift</span>(i,len);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len;i&gt;=<span class="number">2</span>;i--)&#123; <span class="comment">// 将最大堆顶元素置于数组后边 </span></span><br><span class="line"><span class="keyword">int</span> t = p[<span class="number">1</span>];</span><br><span class="line">p[<span class="number">1</span>] = p[i];</span><br><span class="line">p[i] = t;</span><br><span class="line"><span class="built_in">sift</span>(<span class="number">1</span>,i<span class="number">-1</span>); <span class="comment">// 调整 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">input</span>(); <span class="comment">// 用数组表示二叉树 </span></span><br><span class="line"><span class="built_in">HeapSort</span>();</span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment">5 6 4 9 8 1 3 2 7</span></span><br><span class="line"><span class="comment">6 5 4 9 8 7 3 2 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1 2 3 4 5 6 7 8 9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="二路归并排序"><a href="#二路归并排序" class="headerlink" title="二路归并排序"></a>二路归并排序</h1><h2 id="基本思路-7"><a href="#基本思路-7" class="headerlink" title="基本思路"></a>基本思路</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708123719463-1933324208.png"></p><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708125502641-1054471625.png"> </p><p>啊 这图好啊</p><h2 id="示例代码-7"><a href="#示例代码-7" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> low,<span class="keyword">int</span> mid,<span class="keyword">int</span> high)</span></span>&#123; <span class="comment">// 相邻两个有序子序列归并成一个 </span></span><br><span class="line"><span class="keyword">int</span> i = low ,j = mid+<span class="number">1</span> ,k = <span class="number">0</span>; <span class="comment">// i ,j 分别为 1 ,2 段下标 </span></span><br><span class="line"><span class="keyword">int</span> *r;</span><br><span class="line">r = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>((high-low+<span class="number">1</span>)*<span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">int</span>));</span><br><span class="line"><span class="keyword">while</span>(i&lt;=mid&amp;&amp;j&lt;=high)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[i]&lt;p[j]) r[k++] = p[i++];</span><br><span class="line"><span class="keyword">else</span> r[k++] = p[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=mid) r[k++] = p[i++];</span><br><span class="line"><span class="keyword">while</span>(j&lt;=high) r[k++] = p[j++];</span><br><span class="line"><span class="keyword">for</span>(i=low,k=<span class="number">0</span>;i&lt;=high;i++,k++)</span><br><span class="line">p[i] = r[k];</span><br><span class="line"><span class="built_in">free</span>(r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeSort</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123; <span class="comment">// 左闭右闭 </span></span><br><span class="line"><span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="built_in">MergeSort</span>(l,mid);</span><br><span class="line"><span class="built_in">MergeSort</span>(mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="built_in">Merge</span>(l,mid,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">MergeSort</span>(<span class="number">0</span>,len<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment">5 6 4 9 8 1 3 2 7</span></span><br><span class="line"><span class="comment">6 5 4 9 8 7 3 2 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">1 2 3 4 5 6 7 8 9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h1><h2 id="基本思路-8"><a href="#基本思路-8" class="headerlink" title="基本思路"></a>基本思路</h2><p><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708130557792-702821554.png"><br><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708130609630-814687877.png"><br><img src="https://img2020.cnblogs.com/blog/2062718/202007/2062718-20200708130618695-1185212070.png"></p><p>嘛… 是桶没错了</p><h2 id="示例代码-8"><a href="#示例代码-8" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">8</span>; <span class="comment">// 待排序的元素个数 </span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxw = <span class="number">3</span>; <span class="comment">// 位数最大值 236为 3，1233为 4 </span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxj = <span class="number">10</span>; <span class="comment">// 进制最大值 10进制则为 10 ，16进制为 16</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> val[maxw]; <span class="comment">// 用字符串存储数据 </span></span><br><span class="line">node *next; </span><br><span class="line">&#125;*p,*head[maxj],*tail[maxj];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123; <span class="comment">// 带头结点尾插法建表 </span></span><br><span class="line">node *t,*r;</span><br><span class="line">p = (node*)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(node)); <span class="comment">// 创建头节点 </span></span><br><span class="line">r = p; <span class="comment">// 始终指向尾节点 ，开始时指向头节点 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxn;i++)&#123;</span><br><span class="line">t = (node*)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(node)); <span class="comment">// 创建数据节点 </span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,t-&gt;val); <span class="comment">// 输入数据 </span></span><br><span class="line">r-&gt;next = t; <span class="comment">// 将 数据节点 t 插在 r 之后 </span></span><br><span class="line">r = t; <span class="comment">// r 指向尾节点 </span></span><br><span class="line">&#125;</span><br><span class="line">r-&gt;next = <span class="literal">NULL</span>; <span class="comment">// 尾节点 指向 NULL </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RadixSort</span><span class="params">()</span></span>&#123;</span><br><span class="line">p = p-&gt;next; <span class="comment">// 指向头节点下一个带有数据的指针 </span></span><br><span class="line">node *tt;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=maxw<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123; <span class="comment">// 从最低位开始 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;maxj;j++) <span class="comment">// 初始化各个链队首尾指针 </span></span><br><span class="line">head[j] = tail[j] = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">char</span> k = p-&gt;val[i] - <span class="string">&#x27;0&#x27;</span>; <span class="comment">// 找到第 k个链队 </span></span><br><span class="line"><span class="keyword">if</span>(head[k]==<span class="literal">NULL</span>)&#123;</span><br><span class="line">head[k] = p;</span><br><span class="line">tail[k] = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">tail[k]-&gt;next = p;</span><br><span class="line">tail[k] = tail[k]-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">p = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;maxj;j++)&#123; <span class="comment">// 对每个链表进行串联 </span></span><br><span class="line"><span class="keyword">if</span>(head[j]!=<span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p==<span class="literal">NULL</span>)&#123;</span><br><span class="line">p = head[j];</span><br><span class="line">tt = tail[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">tt-&gt;next = head[j];</span><br><span class="line">tt = tail[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">tt-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>,p-&gt;val);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">RadixSort</span>();</span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment">369 367 167 239 237 138 230 139</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">138 139 167 230 237 239 367 369</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Codeforces】Educational Codeforces Round 90</title>
      <link href="/2020/06/26/ACM/%E3%80%90Codeforces%E3%80%91Educational%20Codeforces%20Round%2090/"/>
      <url>/2020/06/26/ACM/%E3%80%90Codeforces%E3%80%91Educational%20Codeforces%20Round%2090/</url>
      
        <content type="html"><![CDATA[<h1 id="A-Donut-Shops"><a href="#A-Donut-Shops" class="headerlink" title="A. Donut Shops"></a>A. Donut Shops</h1><p>There are two rival donut shops.</p><p>The first shop sells donuts at retail: each donut costs a dollars.</p><p>The second shop sells donuts only in bulk: box of b donuts costs c dollars. So if you want to buy x donuts from this shop, then you have to buy the smallest number of boxes such that the total number of donuts in them is greater or equal to x.</p><p>You want to determine two positive integer values:</p><p>how many donuts can you buy so that they are strictly cheaper in the first shop than in the second shop?<br>how many donuts can you buy so that they are strictly cheaper in the second shop than in the first shop?<br>If any of these values doesn’t exist then that value should be equal to −1. If there are multiple possible answers, then print any of them.</p><p>The printed values should be less or equal to 109. It can be shown that under the given constraints such values always exist if any values exist at all.</p><p><em>Input</em><br>The first line contains a single integer t (1≤t≤1000) — the number of testcases.</p><p>Each of the next t lines contains three integers a, b and c (1≤a≤109, 2≤b≤109, 1≤c≤109).</p><p><em>Output</em><br>For each testcase print two positive integers. For both shops print such x that buying x donuts in this shop is strictly cheaper than buying x donuts in the other shop. x should be greater than 0 and less or equal to 109.</p><p>If there is no such x, then print −1. If there are multiple answers, then print any of them.</p><p><strong>Example</strong></p><p><strong>input</strong></p><blockquote><p>4<br>5 10 4<br>4 5 20<br>2 2 3<br>1000000000 1000000000 1000000000</p></blockquote><p><strong>output</strong></p><blockquote><p>-1 20<br>8 -1<br>1 2<br>-1 1000000000</p></blockquote><p><strong>Note</strong></p><p>In the first testcase buying any number of donuts will be cheaper in the second shop. For example, for 3 or 5 donuts you’ll have to buy a box of 10 donuts for 4 dollars. 3 or 5 donuts in the first shop would cost you 15 or 25 dollars, respectively, however. For 20 donuts you’ll have to buy two boxes for 8 dollars total. Note that 3 and 5 are also valid answers for the second shop, along with many other answers.</p><p>In the second testcase buying any number of donuts will be either cheaper in the first shop or the same price. 8 donuts cost 32 dollars in the first shop and 40 dollars in the second shop (because you have to buy two boxes). 10 donuts will cost 40 dollars in both shops, so 10 is not a valid answer for any of the shops.</p><p>In the third testcase 1 donut costs 2 and 3 dollars, respectively. 2 donuts cost 4 and 3 dollars. Thus, 1 is a valid answer for the first shop and 2 is a valid answer for the second shop.</p><p>In the fourth testcase 109 donuts cost 1018 dollars in the first shop and 109 dollars in the second shop.</p><p>题意: A 店每个甜甜圈 a 元 ,B 店一盒 b 个甜甜圈 c 元 ,输出 x 表示在该店买 x 个甜甜圈比另一家店便宜 .（B店只能一盒一盒购买）</p><p>每个案例对应 a b c ,若不存在 x 则输出 -1 .</p><p>分类讨论:</p><p>记 ans1 ,ans2 为答案 .</p><p>当 <strong>b == 1</strong> 时 ,比较 a 和 c 的大小即可 .</p><p>当 <strong>b != 1</strong> 时 ,A 店也买 b 个甜甜圈价钱为 a * b;</p><p>若 a * b &lt;= c ,则另 ans1 = 1 ,ans2 = -1;</p><p>若 a * b &gt;  c ,则 ans2 = b; 若 a &lt; c ,则 ans1 = 1; 否则 a &gt;= c 时 ans1 = -1;</p><p>这…和直接贴代码有什么区别…</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"> </span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line">LL a,b,c;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">LL ans1,ans2;</span><br><span class="line"><span class="keyword">if</span>(b == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(a == c)&#123;</span><br><span class="line">ans1 = ans2 = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a &gt; c)&#123;</span><br><span class="line">ans1 = <span class="number">1</span>;</span><br><span class="line">ans2 = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a &lt; c)&#123;</span><br><span class="line">ans1 = <span class="number">-1</span>;</span><br><span class="line">ans2 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a*b&lt;=c)&#123;</span><br><span class="line">ans1 = <span class="number">1</span>;</span><br><span class="line">ans2 = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a*b&gt;c)&#123;</span><br><span class="line">ans2 = b;</span><br><span class="line"><span class="keyword">if</span>(a&lt;c)&#123;</span><br><span class="line">ans1 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> ans1 = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld %lld\n&quot;</span>,ans1,ans2);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-01-Game"><a href="#B-01-Game" class="headerlink" title="B. 01 Game"></a>B. 01 Game</h1><p>Alica and Bob are playing a game.</p><p>Initially they have a binary string s consisting of only characters 0 and 1.</p><p>Alice and Bob make alternating moves: Alice makes the first move, Bob makes the second move, Alice makes the third one, and so on. During each move, the current player must choose two different adjacent characters of string s and delete them. For example, if s=1011001 then the following moves are possible:</p><p>delete s1 and s2: 1011001→11001;<br>delete s2 and s3: 1011001→11001;<br>delete s4 and s5: 1011001→10101;<br>delete s6 and s7: 1011001→10110.</p><p>If a player can’t make any move, they lose. Both players play optimally. You have to determine if Alice can win.</p><p><em>Input</em><br>First line contains one integer t (1≤t≤1000) — the number of test cases.</p><p>Only line of each test case contains one string s (1≤|s|≤100), consisting of only characters 0 and 1.</p><p><em>Output</em><br>For each test case print answer in the single line.</p><p>If Alice can win print DA (YES in Russian) in any register. Otherwise print NET (NO in Russian) in any register.</p><p><strong>Example</strong></p><p><strong>input</strong></p><blockquote><p>3<br>01<br>1111<br>0011</p></blockquote><p><strong>output</strong></p><blockquote><p>DA<br>NET<br>NET</p></blockquote><p><strong>Note</strong><br>In the first test case after Alice’s move string s become empty and Bob can not make any move.</p><p>In the second test case Alice can not make any move initially.</p><p>In the third test case after Alice’s move string s turn into 01. Then, after Bob’s move string s become empty and Alice can not make any move.</p><p>题意:两玩家 ,Alice先 ,Bob后 ,每次能做的操作为找到相邻的两个’0’、’1’字符并删除 ,最后不能操作的人输 .</p><p>若Alice赢 ,则输出 ‘DA’ ,否则 ‘NET’ . (俄语中分别表示 YES 和 NO ) .</p><p>解: 只要字符串中有 0 有 1 则游戏都可以进行下去 ,而且每次操作必定少一个 0 和 1 ,则得到 0 和 1 中少的个数记为 t ,t 为奇数则赢 .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS];</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line"><span class="built_in">memset</span>(s,<span class="number">0</span>,<span class="keyword">sizeof</span> s);</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">LL t1,t0,h = <span class="built_in">strlen</span>(s);</span><br><span class="line">t0 = t1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="string">&#x27;0&#x27;</span>) t0++;</span><br><span class="line"><span class="keyword">else</span> t1++;</span><br><span class="line">&#125;</span><br><span class="line">LL t = <span class="built_in">min</span>(t0,t1);</span><br><span class="line"><span class="keyword">if</span>(t&amp;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;DA\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;NET\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Pluses-and-Minuses"><a href="#C-Pluses-and-Minuses" class="headerlink" title="C. Pluses and Minuses"></a>C. Pluses and Minuses</h1><p>You are given a string s consisting only of characters + and -. You perform some process with this string. This process can be described by the following pseudocode:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">res = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> init = <span class="number">0</span> to inf</span><br><span class="line">    cur = init</span><br><span class="line">    ok = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span> to |s|</span><br><span class="line">        res = res + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> s[i] == <span class="string">&#x27;+&#x27;</span></span><br><span class="line">            cur = cur + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cur = cur - <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> cur &lt; <span class="number">0</span></span><br><span class="line">            ok = <span class="literal">false</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> ok</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>Note that the inf denotes infinity, and the characters of the string are numbered from 1 to |s|.</p><p>You have to calculate the value of the res after the process ends.</p><p><em>Input</em><br>The first line contains one integer t (1≤t≤1000) — the number of test cases.</p><p>The only lines of each test case contains string s (1≤|s|≤106) consisting only of characters + and -.</p><p>It’s guaranteed that sum of |s| over all test cases doesn’t exceed 106.</p><p><em>Output</em><br>For each test case print one integer — the value of the res after the process ends.</p><p><strong>Example</strong></p><p><strong>input</strong></p><blockquote><p>3<br>–+-<br>-–<br>++–+-</p></blockquote><p><strong>output</strong></p><blockquote><p>7<br>9<br>6</p></blockquote><p>题意: 就是题中所给代码最后得到 res 的值 . </p><p>翻译一下就比如一个横板2D闯关游戏 ,一开始血量 cur = 0 ,每一格对应一个字符 ,每次碰到 ‘-‘ 则血量– ,’+’ 则血量++ ,若血量cur &lt; 0 则从头再来且初始血量 +1 直至通关,求最后一共走过多少格 .</p><p>解: 求前缀和 ,记 ‘-‘ 为 -1 ,’+’ 为 +1 ,因为前缀和是连续的 ,所以每次记录血量为 0 时找前缀和<strong>第一次</strong>为 -1 的下标 ,记录血量为 1 是<strong>第一次</strong>为 -2 的下标… 最后下标值相加即可 .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 1000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS],a[MS];</span><br><span class="line"><span class="keyword">char</span> s[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">LL h = <span class="built_in">strlen</span>(s);</span><br><span class="line">LL t = <span class="number">0</span> ,cc = <span class="number">-1</span> ,tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">p[i+<span class="number">1</span>] = p[i] - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> p[i+<span class="number">1</span>] = p[i] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(p[i+<span class="number">1</span>] == cc)&#123;</span><br><span class="line">cc--;</span><br><span class="line">a[++tot] = i+<span class="number">1</span>; <span class="comment">// 记录值为-1 ,-2 ,-3 ...的下标</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="number">0</span>; <span class="comment">// 记录答案</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;i++)&#123;</span><br><span class="line">ans += a[i];</span><br><span class="line">&#125;</span><br><span class="line">ans += h; <span class="comment">// 加上通关的一遍</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-Maximum-Sum-on-Even-Positions"><a href="#D-Maximum-Sum-on-Even-Positions" class="headerlink" title="D. Maximum Sum on Even Positions"></a>D. Maximum Sum on Even Positions</h1><p>You are given an array a consisting of n integers. Indices of the array start from zero (i. e. the first element is a0, the second one is a1, and so on).</p><p>You can reverse at most one subarray (continuous subsegment) of this array. Recall that the subarray of a with borders l and r is a[l;r]=al,al+1,…,ar.</p><p>Your task is to reverse such a subarray that the sum of elements on even positions of the resulting array is maximized (i. e. the sum of elements a0,a2,…,a2k for integer k=⌊n−12⌋ should be maximum possible).</p><p>You have to answer t independent test cases.</p><p><em>Input</em><br>The first line of the input contains one integer t (1≤t≤2⋅104) — the number of test cases. Then t test cases follow.</p><p>The first line of the test case contains one integer n (1≤n≤2⋅105) — the length of a. The second line of the test case contains n integers a0,a1,…,an−1 (1≤ai≤109), where ai is the i-th element of a.</p><p>It is guaranteed that the sum of n does not exceed 2⋅105 (∑n≤2⋅105).</p><p><em>Output</em><br>For each test case, print the answer on the separate line — the maximum possible sum of elements on even positions after reversing at most one subarray (continuous subsegment) of a.</p><p><strong>Example</strong></p><p><strong>input</strong></p><blockquote><p>4<br>8<br>1 7 3 4 7 6 2 9<br>5<br>1 2 1 2 1<br>10<br>7 8 4 5 7 6 8 9 7 3<br>4<br>3 1 2 1</p></blockquote><p><strong>output</strong></p><blockquote><p>26<br>5<br>37<br>5</p></blockquote><p>题意: 给一段数组 ,可以翻转一次连续的子序列 ,使得 a0 ,a2 ,a4 … ,a2k 之和最大 ,输出最大值 .</p><p>解: 显然翻转长度为奇数的序列没有任何用处 ,所以翻转偶数长度的片段 .</p><p>例如 7 8 4 5 7 6 本来是 7 + 4 + 7 翻转后为 8 + 5 + 6,也就是相当于 7 8 换位 ,4 5 换位 ,7 6 换位</p><p>则 记录两两换位后的差值存储与数组 a ,原数组 p 是 7 8 4 5 7 6 则 a 为 1 1 -1 ,显然此时交换 7 8 4 5 比交换整体更赚 ,所以求数组 a 的连续一段 <strong>和最大</strong> 的区间值 ta 即可 ,可记录 a 的前缀和求解 .</p><p>当然在 7 8 4 5 7 6 中 ,8 不仅可以和 7 交换 ,也可与 4 交换 ,则新建数组 b 记录 8 4 差值 ,5 7 差值 … 也求数组 b 的连续一段 <strong>和最大</strong> 的区间值 tb ,取 ta ,tb 大者 .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 200009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS],a[MS],b[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line">a[<span class="number">0</span>] = b[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">LL h,ans = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; h;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h;i++)&#123;</span><br><span class="line">cin &gt;&gt; p[i];</span><br><span class="line"><span class="keyword">if</span>(!(i&amp;<span class="number">1</span>)) ans += p[i]; <span class="comment">// 记录不进行任何翻转操作的答案</span></span><br><span class="line">&#125;</span><br><span class="line">LL maxx = <span class="number">0</span>,tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;h;i+=<span class="number">2</span>)&#123;</span><br><span class="line">a[tot] = p[i] - p[i<span class="number">-1</span>]; <span class="comment">// a 差值</span></span><br><span class="line">b[tot] = p[i] - p[i+<span class="number">1</span>]; <span class="comment">// b 差值</span></span><br><span class="line"><span class="keyword">if</span>(i == h<span class="number">-1</span>) b[tot] = -INF;</span><br><span class="line">tot++;</span><br><span class="line">&#125;</span><br><span class="line">maxx = <span class="built_in">max</span>(maxx,<span class="built_in">max</span>(a[<span class="number">0</span>],b[<span class="number">0</span>]));</span><br><span class="line">LL ta = a[<span class="number">0</span>];</span><br><span class="line">LL tb = b[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;tot;i++)&#123; <span class="comment">// 求前缀和</span></span><br><span class="line">a[i] += a[i<span class="number">-1</span>]; </span><br><span class="line">b[i] += b[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;tot;i++)&#123; <span class="comment">// 求连续一段 和最大 的区间值 maxx</span></span><br><span class="line"> ta = <span class="built_in">min</span>(ta,a[i]);</span><br><span class="line"> tb = <span class="built_in">min</span>(tb,b[i]);</span><br><span class="line"> a[i] = <span class="built_in">max</span>(a[i],a[i]-ta);</span><br><span class="line"> b[i] = <span class="built_in">max</span>(b[i],b[i]-tb);</span><br><span class="line"> maxx = <span class="built_in">max</span>(maxx,<span class="built_in">max</span>(a[i],b[i]));</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans+maxx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="E-Sum-of-Digits"><a href="#E-Sum-of-Digits" class="headerlink" title="E. Sum of Digits"></a>E. Sum of Digits</h1><p>Let f(x) be the sum of digits of a decimal number x.</p><p>Find the smallest non-negative integer x such that f(x)+f(x+1)+⋯+f(x+k)=n.</p><p><em>Input</em><br>The first line contains one integer t (1≤t≤150) — the number of test cases.</p><p>Each test case consists of one line containing two integers n and k (1≤n≤150, 0≤k≤9).</p><p><em>Output</em><br>For each test case, print one integer without leading zeroes. If there is no such x that f(x)+f(x+1)+⋯+f(x+k)=n, print −1; otherwise, print the minimum x meeting that constraint.</p><p><strong>Example</strong></p><p><strong>input</strong></p><blockquote><p>7<br>1 0<br>1 1<br>42 7<br>13 7<br>99 1<br>99 0<br>99 2</p></blockquote><p><strong>output</strong></p><blockquote><p>1<br>0<br>4<br>-1<br>599998<br>99999999999<br>7997</p></blockquote><p>题意: 设 <strong>f(x)</strong> 为十进制数 <strong>x</strong> 的位数之和 ,找出最小的非负整数 <strong>x</strong>，使 <strong>f(x) + f(x+1) + ⋯ + f(x+k) = n</strong></p><p>解: </p><p><strong>0</strong>. 当我发现 <strong>k</strong> 等于 <strong>9</strong> 时 ,</p><p>若 <strong>x = 0</strong> 时 ==&gt; <strong>0 1 2 3 4 5 6 7 8  9</strong>  位数和为 <strong>45</strong><br>若 <strong>x = 1</strong> 时 ==&gt; <strong>1 2 3 4 5 6 7 8 9  10</strong> 位数和为 <strong>46</strong><br>若 <strong>x = 2</strong> 时 ==&gt; <strong>2 3 4 5 6 7 8 9 10 11</strong> 位数和为 <strong>47</strong></p><p>嗯 … 想着如果说 <strong>n = 55 ,k == 9</strong> 的话 ,我好像可以把个位数定下来 ,这样的话 <strong>10</strong> 个数 每个个位数就可以定为 <strong>0 1 2 3 4 5 6 7 8 9</strong> 和为 <strong>45</strong>.</p><p>为什么这么定呢?  因为 <strong>n - 45 = 10</strong> ,欸! 这不是每个十位数加上一个 <strong>1</strong> 就好了 ,那么答案就是 <strong>10</strong> !</p><p>当然这是非常理想的情况下 ,但是定下了后面的想法框架 .</p><p><strong>1</strong>. 也就是现在想法先是定下个位数数字 ,再减去个位数之和 ,最后确定十位百位千位万位… (比赛时时间有限只能想到这儿了 ,果然是我tcl) .</p><p>个位数怎么确定呢? </p><p>因为有 <strong>k+1</strong> 个数 ,<strong>0 ~ k</strong> 分别表示每一个数 ,既然要确定个位数 ,那就先打表吧 .</p><p>比如说 个位数为 <strong>0</strong> 时 ,<strong>k</strong> = <strong>0,1,2,3…</strong> 令 <strong>p[i][j]</strong> 表示个位数为 <strong>i</strong> 长度为 <strong>j+1</strong> 的各个个位数之和 (毕竟 <strong>k</strong> 为 <strong>1</strong> 时 ,有两个数)</p><p>那么 <strong>p[7][5]</strong> 会出现 <strong>7 8 9 10 11</strong> 这样子 ,<strong>10</strong> 为 <strong>1</strong> ,<strong>11</strong> 为 <strong>2</strong> .</p><p>最大的就是 <strong>p[9][9]</strong> ,<strong>9 10 11 12 13 14 15 16 17 18</strong> 最大就是 <strong>18</strong> 也就是位数和为 <strong>9</strong> .</p><p>这样表就打完了 ,接下来怎么选个位数 .</p><p>现在假设选完了个位数 <strong>p[i][j]</strong> ,毕竟数字都是连续的所以 <strong>n - p[i][j]</strong> 这个值要平均分配到每个数的十位以上 .</p><p>所以 <strong>n - p[i][j]</strong> 要能整除 <strong>k + 1</strong> . </p><p>记 <strong>cc = (n - p[i][j])/(k+1)</strong> ,既然个位数确定下来了 ,<strong>cc</strong> 又是十位数以上的位数之和 ,那么贪心即可 .</p><p><strong>2</strong>. 十位数以上的需要注意当 <strong>p[i][j]</strong> 中 <strong>i + j &gt; 9</strong> 时 ,这样每次数字 <strong>+1</strong> 时会进位 这个时候十位数最多到 <strong>8</strong> 即可 .</p><p>感觉写的挺认真 ,但是第三视角看我写的内容好像也不是特别清楚 …</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"><span class="comment">// Notice the input and output </span></span><br><span class="line"> </span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[<span class="number">11</span>][<span class="number">11</span>],a[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) a[i] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;<span class="number">19</span>;i++) a[i] = i<span class="number">-9</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123; <span class="comment">// 打表 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> u=i;u&lt;=i+j;u++)&#123;</span><br><span class="line">p[i][j] += a[u];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">LL t = <span class="number">-1</span> ,cc = INF,flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">9</span>;i&gt;=<span class="number">0</span>;i--)&#123; <span class="comment">// 寻找一个个位数 </span></span><br><span class="line"><span class="keyword">if</span>(p[i][k]&gt;n) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>((n-p[i][k])%(k+<span class="number">1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>((n-p[i][k])/(k+<span class="number">1</span>)&lt;=cc)&#123;</span><br><span class="line">t = i; <span class="comment">// 记录个位数 </span></span><br><span class="line">cc = (n-p[i][k])/(k+<span class="number">1</span>);<span class="comment">// 记录十位以上位数之和 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t == <span class="number">-1</span>)&#123; <span class="comment">// 未能整除 </span></span><br><span class="line">cout &lt;&lt; t &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">LL t9;</span><br><span class="line"><span class="keyword">if</span>(t+k &lt;= <span class="number">9</span>)&#123; <span class="comment">// 不用担心进位 </span></span><br><span class="line">t9 = cc / <span class="number">9</span>;</span><br><span class="line">cc -= t9*<span class="number">9</span>;</span><br><span class="line"><span class="keyword">if</span>(cc != <span class="number">0</span>) cout &lt;&lt; cc;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t9;i++) cout &lt;&lt; <span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">cout &lt;&lt; t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123; <span class="comment">// 需要进位 </span></span><br><span class="line"><span class="keyword">if</span>(cc&lt;<span class="number">9</span>)&#123; <span class="comment">// 十位数不超过 9 </span></span><br><span class="line"><span class="keyword">if</span>(cc!=<span class="number">0</span>) cout &lt;&lt; cc;</span><br><span class="line">cout &lt;&lt; t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123; <span class="comment">// 超过 9 则十位数为 8  </span></span><br><span class="line">cc -= <span class="number">8</span>;</span><br><span class="line">t9 = cc / <span class="number">9</span>;</span><br><span class="line">cc -= t9 * <span class="number">9</span>;</span><br><span class="line"><span class="keyword">if</span>(cc!=<span class="number">0</span>) cout &lt;&lt; cc;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t9;i++) cout &lt;&lt; <span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="number">8</span>;</span><br><span class="line">cout &lt;&lt; t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【KMP】模式串匹配</title>
      <link href="/2020/06/22/ACM/%E3%80%90KMP%E3%80%91%E6%A8%A1%E5%BC%8F%E4%B8%B2%E5%8C%B9%E9%85%8D/"/>
      <url>/2020/06/22/ACM/%E3%80%90KMP%E3%80%91%E6%A8%A1%E5%BC%8F%E4%B8%B2%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="单模式串匹配"><a href="#单模式串匹配" class="headerlink" title="单模式串匹配"></a>单模式串匹配</h1><h2 id="KMP算法"><a href="#KMP算法" class="headerlink" title="KMP算法"></a>KMP算法</h2><p>推理过程见<a href="https://www.cnblogs.com/caiyishuai/p/10701166.html" target="_blank">详解</a> .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> p[MS],nex[MS];</span><br><span class="line"><span class="keyword">char</span> s[MS],ts[MS]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next</span><span class="params">(<span class="keyword">char</span> ts[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>,k=<span class="number">-1</span>;</span><br><span class="line">nex[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(j&lt;len<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">-1</span>||ts[j] == ts[k])&#123;</span><br><span class="line"><span class="comment">// 当 ts[j+1] == ts[nex[j+1]] 时要跳过 </span></span><br><span class="line"><span class="keyword">if</span>(ts[++j] == ts[++k])</span><br><span class="line">nex[j] = nex[k];</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">nex[j] = k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k = nex[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">char</span> ts[],<span class="keyword">int</span> h1,<span class="keyword">int</span> h2)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line">i = j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;h1 &amp;&amp; j&lt;h2)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] == ts[j] || j == <span class="number">-1</span>)&#123;</span><br><span class="line">i++ ,j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> j = nex[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j == h2) <span class="keyword">return</span> i-j; <span class="comment">// 返回从 0 开始的主串下标 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">cin &gt;&gt; ts;</span><br><span class="line"><span class="built_in">get_next</span>(ts,<span class="built_in">strlen</span>(ts));</span><br><span class="line"><span class="keyword">int</span> ans = <span class="built_in">kmp</span>(s,ts,<span class="built_in">strlen</span>(s),<span class="built_in">strlen</span>(ts));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input : 0123456789</span></span><br><span class="line"><span class="comment">567</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output: 5 </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="向量匹配算法"><a href="#向量匹配算法" class="headerlink" title="向量匹配算法"></a>向量匹配算法</h2><p>我也不知道叫什么名字,就随便叫个名字，感觉也挺快的=.=</p><p>例如：主串为 <strong>abcbad</strong> 模式串为 <strong>cba</strong></p><p>可以发现主串从<strong>0~2</strong>的向量值 和 <strong>2~4</strong>的向量值 与 模式串的向量值 相等 (向量值:ASCII值求和) .</p><p>存储主串中长度与模式串相等的向量值,遍历,若向量值相等,判断一遍即可 .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line">LL n,m,k,flag;</span><br><span class="line">LL p[MS];</span><br><span class="line"><span class="keyword">char</span> s[MS],ts[MS]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(j&lt;len)&#123; <span class="comment">// 逐一比较 </span></span><br><span class="line"><span class="keyword">if</span>(s[i] == ts[j]) ++i,++j;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; s; <span class="comment">// 主串 </span></span><br><span class="line">cin &gt;&gt; ts; <span class="comment">// 模式串 </span></span><br><span class="line"><span class="keyword">int</span> h1 = <span class="built_in">strlen</span>(s); <span class="comment">// 主串长度 </span></span><br><span class="line"><span class="keyword">int</span> h2 = <span class="built_in">strlen</span>(ts); <span class="comment">// 模式串长度 </span></span><br><span class="line"><span class="comment">// 记录模式串向量值 </span></span><br><span class="line">LL sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h2;i++) sum += ts[i]; </span><br><span class="line"><span class="comment">// 记录主串每一段长度与模式串相同的向量值 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;h2;i++) p[<span class="number">0</span>] += s[i]; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+h2&lt;=h1;i++) </span><br><span class="line">p[i] = p[i<span class="number">-1</span>] - s[i<span class="number">-1</span>] + s[i+h2<span class="number">-1</span>];</span><br><span class="line"><span class="comment">// 匹配 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=h1-h2;i++)&#123;</span><br><span class="line"><span class="comment">// 如果向量值相同 </span></span><br><span class="line"><span class="keyword">if</span>(p[i] == sum)&#123;</span><br><span class="line"><span class="comment">// 逐一比较 </span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">cmp</span>(i,<span class="number">0</span>,h2))&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i); <span class="comment">// 输出对应指针 </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag) <span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">input : 0123456789</span></span><br><span class="line"><span class="comment">567</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output: 5 </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> KMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【并查集】并查集模板</title>
      <link href="/2020/06/19/ACM/%E3%80%90%E5%B9%B6%E6%9F%A5%E9%9B%86%E3%80%91%E5%B9%B6%E6%9F%A5%E9%9B%86%E6%A8%A1%E6%9D%BF/"/>
      <url>/2020/06/19/ACM/%E3%80%90%E5%B9%B6%E6%9F%A5%E9%9B%86%E3%80%91%E5%B9%B6%E6%9F%A5%E9%9B%86%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>并查集代码真是又短又有趣,易于理解见<a href="https://blog.csdn.net/qq_41593380/article/details/81146850" target="_blank">详解</a> .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> p[MS],tr[MS],fa[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) fa[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x == fa[x]) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">fa[<span class="built_in">find</span>(x)] = <span class="built_in">find</span>(y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【树状数组维护区间和】树状数组模板</title>
      <link href="/2020/06/19/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E5%92%8C%E3%80%91%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF/"/>
      <url>/2020/06/19/ACM/%E3%80%90%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%BB%B4%E6%8A%A4%E5%8C%BA%E9%97%B4%E5%92%8C%E3%80%91%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="单点更新-区间查询"><a href="#单点更新-区间查询" class="headerlink" title="单点更新 区间查询"></a>单点更新 区间查询</h1><p>直接利用树状数组存储原数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> p[MS],tr[MS];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入原数组 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; p[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取出 x 的最低位 1 ,返回 2^k</span></span><br><span class="line"><span class="comment">// ex: 1010 返回 2^1 ,1001 返回 2^0 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立树状数组 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=n;j+=<span class="built_in">lowbit</span>(j))&#123;</span><br><span class="line">tr[j] += p[i]; <span class="comment">// tr 中所有包含 p[i] 的都要加上 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改点值 (+) </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">revise_point</span><span class="params">(<span class="keyword">int</span> sub ,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">p[sub] += val; <span class="comment">// 更新原数组 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=sub;i&lt;=n;i+=<span class="built_in">lowbit</span>(i))&#123;</span><br><span class="line">tr[i] += val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求 原数组 p 1 ~ i 的值 </span></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">LL cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">cnt += tr[i];</span><br><span class="line">i -= <span class="built_in">lowbit</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出原数组 p 当前状态 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cout &lt;&lt; p[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// &gt;&gt; 数组长度 </span></span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="comment">// 建树状数组 </span></span><br><span class="line"><span class="built_in">build</span>();</span><br><span class="line"><span class="comment">// 修改点值 </span></span><br><span class="line"><span class="comment">// 参数: 下标 ,值 </span></span><br><span class="line">cin &gt;&gt; m &gt;&gt; k;</span><br><span class="line"><span class="built_in">revise_point</span>(m,k);</span><br><span class="line"><span class="comment">// &gt;&gt; 当前原数组状态</span></span><br><span class="line"><span class="built_in">output</span>();</span><br><span class="line"><span class="comment">// 求和 </span></span><br><span class="line"><span class="comment">// &gt;&gt; 请求区间</span></span><br><span class="line">cin &gt;&gt; m &gt;&gt; k;</span><br><span class="line">cout &lt;&lt; <span class="built_in">get_sum</span>(k) - <span class="built_in">get_sum</span>(m<span class="number">-1</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="区间更新-单点查询"><a href="#区间更新-单点查询" class="headerlink" title="区间更新 单点查询"></a>区间更新 单点查询</h1><p>利用树状数组存储原数组的差分,这样修改区间时只需要修改两个位置</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> p[MS],tr[MS],a[MS];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入原数组 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; p[i];</span><br><span class="line"><span class="comment">// 得到差分后的数组 a  </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i] = p[i] - p[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取出 x 的最低位 1 ,返回 2^k</span></span><br><span class="line"><span class="comment">// ex: 1010 返回 2^1 ,1001 返回 2^0 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立树状数组 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=n;j+=<span class="built_in">lowbit</span>(j))&#123;</span><br><span class="line">tr[j] += a[i]; <span class="comment">// tr 中所有包含 p[i] 的都要加上 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改点值 (+) </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">revise_point</span><span class="params">(<span class="keyword">int</span> sub ,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">a[sub] += val; <span class="comment">// 更新数组 a</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=sub;i&lt;=n;i+=<span class="built_in">lowbit</span>(i))&#123;</span><br><span class="line">tr[i] += val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求 原数组 p 1 ~ i 的值 </span></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">LL cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">cnt += tr[i];</span><br><span class="line">i -= <span class="built_in">lowbit</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// &gt;&gt; 数组长度 </span></span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="comment">// 建树状数组 </span></span><br><span class="line"><span class="built_in">build</span>();</span><br><span class="line"><span class="comment">// 修改区间值 </span></span><br><span class="line"><span class="keyword">int</span> l,r,val;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r &gt;&gt; val;</span><br><span class="line"><span class="built_in">revise_point</span>(l,val);</span><br><span class="line"><span class="built_in">revise_point</span>(r+<span class="number">1</span>,-val);</span><br><span class="line"><span class="comment">// 单点查询 </span></span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line">cout &lt;&lt; <span class="built_in">get_sum</span>(m) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="区间更新-区间查询"><a href="#区间更新-区间查询" class="headerlink" title="区间更新 区间查询"></a>区间更新 区间查询</h1><p>依旧利用树状数组存储原数组的差分,维护两个数状数组，$sum1[i] = a[i]，sum2[i] = a[i]*(i-1)$; <a href="https://www.cnblogs.com/xenny/p/9739600.html" target="_blank">为何维护</a> .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line">LL n,m,k;</span><br><span class="line">LL p[MS],tr[MS],a[MS];</span><br><span class="line">LL sum1[MS],sum2[MS];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取出 x 的最低位 1 ,返回 2^k</span></span><br><span class="line"><span class="comment">// ex: 1010 返回 2^1 ,1001 返回 2^0 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入原数组 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin &gt;&gt; p[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对原数组 p 利用差分 存入数组 a  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dif</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i] = p[i] - p[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新树状数组 (+)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> sub,LL val)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = sub; <span class="comment">// x 不变 保存 sub 值 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=sub;i&lt;=n;i+=<span class="built_in">lowbit</span>(i))&#123;</span><br><span class="line">tr[i] += val;</span><br><span class="line">sum1[i] += val;</span><br><span class="line">sum2[i] += val*(x<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求前缀和 </span></span><br><span class="line"><span class="function">LL <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">LL cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> x = i;</span><br><span class="line"><span class="keyword">while</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">cnt += x*sum1[i] - sum2[i];</span><br><span class="line">i -= <span class="built_in">lowbit</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// &gt;&gt; 数组长度 </span></span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">dif</span>();</span><br><span class="line"><span class="comment">// 直接更新 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">updata</span>(i,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 区间加减 </span></span><br><span class="line">LL l, r, val;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r &gt;&gt; val;</span><br><span class="line"><span class="built_in">updata</span>(l,val);</span><br><span class="line"><span class="built_in">updata</span>(r+<span class="number">1</span>,-val);</span><br><span class="line"><span class="comment">// 区间求和 </span></span><br><span class="line">cin &gt;&gt; m &gt;&gt; k;</span><br><span class="line">cout &lt;&lt; <span class="built_in">get_sum</span>(k) - <span class="built_in">get_sum</span>(m<span class="number">-1</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【线段树】线段树模板</title>
      <link href="/2020/06/17/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF/"/>
      <url>/2020/06/17/ACM/%E3%80%90%E7%BA%BF%E6%AE%B5%E6%A0%91%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mss 17</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line">LL n; <span class="comment">// 记录原数组个数 </span></span><br><span class="line">LL a[MS]; <span class="comment">// 存原数组 </span></span><br><span class="line">LL p[MS*<span class="number">4</span>]; <span class="comment">// 数组实现树形结构 ,每一个节点对应一段区间 </span></span><br><span class="line">LL la[MS*<span class="number">4</span>]; <span class="comment">// 懒惰标记 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 存储原数组 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向上更新信息 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(LL rt)</span> </span>&#123;</span><br><span class="line">p[rt] = p[rt&lt;&lt;<span class="number">1</span>] + p[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下推标记 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_down</span><span class="params">(LL rt, LL nl, LL nr)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 如果被标记</span></span><br><span class="line"><span class="keyword">if</span>(la[rt])&#123;</span><br><span class="line"><span class="comment">// 下推标记</span></span><br><span class="line">la[rt&lt;&lt;<span class="number">1</span>] = la[rt&lt;&lt;<span class="number">1</span>] + la[rt]; </span><br><span class="line">la[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] = la[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] + la[rt];</span><br><span class="line"><span class="comment">// 更新左右孩子信息</span></span><br><span class="line">p[rt&lt;&lt;<span class="number">1</span>] = p[rt&lt;&lt;<span class="number">1</span>] + nl*la[rt];</span><br><span class="line">p[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] = p[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>] + nr*la[rt];</span><br><span class="line"><span class="comment">// 清除标记</span></span><br><span class="line">la[rt] = <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建树 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(LL l, LL r, LL rt)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line"><span class="comment">// 在 *rt* 节点存储数据 </span></span><br><span class="line">p[rt] = a[l];</span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line">&#125; </span><br><span class="line">LL m = (l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="comment">// 左右递归 寻找最后的叶子 </span></span><br><span class="line"><span class="built_in">build</span>(l,m,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line"><span class="built_in">build</span>(m+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>); </span><br><span class="line"><span class="comment">// 向上更新信息</span></span><br><span class="line"><span class="built_in">push_up</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间修改 (+)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">section_revise</span><span class="params">(LL L, LL R, LL l, LL r, LL x, LL rt)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L&lt;=l &amp;&amp; r&lt;=R)&#123;</span><br><span class="line"><span class="comment">// 修改该节点对应区间的值 </span></span><br><span class="line">p[rt] = p[rt] + x*(r-l+<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 修改懒惰标记 </span></span><br><span class="line">la[rt] = la[rt] + x;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">LL m = (l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="comment">// 下推标记</span></span><br><span class="line"><span class="comment">// 参数:节点, 左,右孩子元素个数</span></span><br><span class="line"><span class="built_in">push_down</span>(rt,m-l+<span class="number">1</span>,r-m); </span><br><span class="line"><span class="comment">// 左右递归 ,寻找包含区间 </span></span><br><span class="line"><span class="keyword">if</span>(m&gt;=L) <span class="built_in">section_revise</span>(L,R,l,m,x,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(m&lt; R) <span class="built_in">section_revise</span>(L,R,m+<span class="number">1</span>,r,x,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line"><span class="comment">//  向上更新信息</span></span><br><span class="line"><span class="built_in">push_up</span>(rt); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间求和 </span></span><br><span class="line"><span class="function">LL <span class="title">section_sum</span><span class="params">(LL L, LL R, LL l, LL r, LL rt)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 若查询到包含区间 </span></span><br><span class="line"><span class="keyword">if</span>(L&lt;=l &amp;&amp; r&lt;=R)&#123; </span><br><span class="line"><span class="keyword">return</span> p[rt];</span><br><span class="line">&#125;</span><br><span class="line">LL m = (l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="comment">// 下推标记</span></span><br><span class="line"><span class="built_in">push_down</span>(rt,m-l+<span class="number">1</span>,r-m);</span><br><span class="line"><span class="comment">// 记录答案 </span></span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(m&gt;=L) ans += <span class="built_in">section_sum</span>(L,R,l,m,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(m&lt; R) ans += <span class="built_in">section_sum</span>(L,R,m+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组现状输出 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(LL l, LL r, LL rt)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">cout &lt;&lt; p[rt] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">LL m = (l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="comment">// 下推标记</span></span><br><span class="line"><span class="built_in">push_down</span>(rt,m-l+<span class="number">1</span>,r-m);</span><br><span class="line"><span class="comment">// 左右递归 寻找最后的叶子 </span></span><br><span class="line"><span class="built_in">output</span>(l,m,rt&lt;&lt;<span class="number">1</span>);</span><br><span class="line"><span class="built_in">output</span>(m+<span class="number">1</span>,r,rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>); </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 输入数据并建树 </span></span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 区间修改 </span></span><br><span class="line">LL l ,r ,x;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r &gt;&gt; x; </span><br><span class="line"><span class="built_in">section_revise</span>(l,r,<span class="number">1</span>,n,x,<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 输出修改后结果</span></span><br><span class="line"><span class="built_in">output</span>(<span class="number">1</span>,n,<span class="number">1</span>); </span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="comment">// 区间求和</span></span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">cout &lt;&lt; <span class="built_in">section_sum</span>(l,r,<span class="number">1</span>,n,<span class="number">1</span>) &lt;&lt; endl; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Codeforces】Educational Codeforces Round 89</title>
      <link href="/2020/06/13/ACM/%E3%80%90Codeforces%E3%80%91Educational%20Codeforces%20Round%2089/"/>
      <url>/2020/06/13/ACM/%E3%80%90Codeforces%E3%80%91Educational%20Codeforces%20Round%2089/</url>
      
        <content type="html"><![CDATA[<h1 id="A-Shovels-and-Swords"><a href="#A-Shovels-and-Swords" class="headerlink" title="A. Shovels and Swords"></a>A. Shovels and Swords</h1><p>Polycarp plays a well-known computer game (we won’t mention its name). In this game, he can craft tools of two types — shovels and swords. To craft a shovel, Polycarp spends two sticks and one diamond; to craft a sword, Polycarp spends two diamonds and one stick.</p><p>Each tool can be sold for exactly one emerald. How many emeralds can Polycarp earn, if he has a sticks and b diamonds?</p><p><em>Input</em><br>The first line contains one integer t (1≤t≤1000) — the number of test cases.</p><p>The only line of each test case contains two integers a and b (0≤a,b≤109) — the number of sticks and the number of diamonds, respectively.</p><p><em>Output</em><br>For each test case print one integer — the maximum number of emeralds Polycarp can earn.</p><p><strong>Example</strong></p><p><strong>input</strong></p><blockquote><p>4<br>4 4<br>1000000000 0<br>7 15<br>8 7</p></blockquote><p><strong>output</strong></p><blockquote><p>2<br>0<br>7<br>5</p></blockquote><p><strong>Note</strong></p><p>In the first test case Polycarp can earn two emeralds as follows: craft one sword and one shovel.</p><p>In the second test case Polycarp does not have any diamonds, so he cannot craft anything.</p><p>题意：游戏我的世界中做一把铲子<strong>2</strong>木棍<strong>1</strong>钻石，一把剑<strong>2</strong>钻石<strong>1</strong>木棍，每件工具可以卖一个绿宝石，给<strong>a</strong>根木棍<strong>b</strong>个钻石，最多能卖多少绿宝石。</p><p>假设做<strong>x</strong>把铲子，<strong>y</strong>把剑，2<em>x+y&lt;=a,x+2</em>y&lt;=b,求x+y最大</p><h2 id="分情况求解"><a href="#分情况求解" class="headerlink" title="分情况求解"></a>分情况求解</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483647</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 200009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k,ans;</span><br><span class="line"><span class="keyword">int</span> p[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">2</span>*n&lt;=m) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n); <span class="comment">// 钻石过多</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">2</span>*m&lt;=n) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,m); <span class="comment">// 棒子过多</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(n+m)/<span class="number">3</span>); <span class="comment">// (x+y)*3&lt;=a+b</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三分"><a href="#三分" class="headerlink" title="三分"></a>三分</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k,ans;</span><br><span class="line"><span class="keyword">int</span> p[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="comment">// 计算能卖多少绿宝石</span></span><br><span class="line"><span class="keyword">int</span> lv_n = n - <span class="number">2</span>*x;</span><br><span class="line"><span class="keyword">int</span> lv_m = m - x;</span><br><span class="line">x += <span class="built_in">min</span>(lv_n,lv_m/<span class="number">2</span>);</span><br><span class="line">ans = <span class="built_in">max</span>(x,ans); <span class="comment">// 更新ans</span></span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">while</span>(k--) &#123;</span><br><span class="line"><span class="keyword">int</span> l,r,m1,m2;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">l = <span class="number">0</span> ,r = <span class="built_in">min</span>(n/<span class="number">2</span>,m);</span><br><span class="line">ans = <span class="built_in">max</span>(<span class="built_in">check</span>(l),<span class="built_in">check</span>(r)); <span class="comment">// 求两端</span></span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r) &#123;</span><br><span class="line">m1 = (l+r)/<span class="number">2</span>;</span><br><span class="line">m2 = (m1+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(m1)&gt;<span class="built_in">check</span>(m2)) &#123;</span><br><span class="line">r = m2;</span><br><span class="line">&#125; <span class="keyword">else</span> l = m1;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Shuffle"><a href="#B-Shuffle" class="headerlink" title="B. Shuffle"></a>B. Shuffle</h1><p>You are given an array consisting of n integers a1, a2, …, an. Initially ax=1, all other elements are equal to 0.</p><p>You have to perform m operations. During the i-th operation, you choose two indices c and d such that li≤c,d≤ri, and swap ac and ad.</p><p>Calculate the number of indices k such that it is possible to choose the operations so that ak=1 in the end.</p><p><em>Input</em><br>The first line contains a single integer t (1≤t≤100) — the number of test cases. Then the description of t testcases follow.</p><p>The first line of each test case contains three integers n, x and m (1≤n≤109; 1≤m≤100; 1≤x≤n).</p><p>Each of next m lines contains the descriptions of the operations; the i-th line contains two integers li and ri (1≤li≤ri≤n).</p><p><em>Output</em><br>For each test case print one integer — the number of indices k such that it is possible to choose the operations so that ak=1 in the end.</p><p><strong>Example</strong></p><p><strong>input</strong></p><blockquote><p>3<br>6 4 3<br>1 6<br>2 3<br>5 5<br>4 1 2<br>2 4<br>1 2<br>3 3 2<br>2 3<br>1 2</p></blockquote><p><strong>outputCopy</strong></p><blockquote><p>6<br>2<br>3</p></blockquote><p><strong>Note</strong><br>In the first test case, it is possible to achieve ak=1 for every k. To do so, you may use the following operations:</p><p>swap ak and a4;<br>swap a2 and a2;<br>swap a5 and a5.</p><p>In the second test case, only k=1 and k=2 are possible answers. To achieve a1=1, you have to swap a1 and a1 during the second operation. To achieve a2=1, you have to swap a1 and a2 during the second operation.</p><p>题意：给出了一个由n个整数a1，a2，…，an组成的数组。最初ax=1，所有其他元素都等于0.</p><p>你必须执行m操作。在第i个操作中，选择两个索引c和d，使li≤c，d≤ri，并交换ac和ad.</p><p>计算索引k的数量，以便可以选择操作，以便ak最终为1。</p><p>例如：<br>在第一个测试用例中，每k可以实现ak=1。为此，可以使用以下操作：</p><p>交换ak和a4；<br>交换a2和a2；<br>交换a5和a5。</p><p>在第二个测试用例中，只有k=1和k=2是可能的答案。<br>要达到a1=1，您必须在第二次操作期间交换a1和a1。要实现a2=1，必须在第二次操作期间交换a1和a2。</p><p>解：向左向右拓展能够得到的区间</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 100009</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> p[MS];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="keyword">int</span> op;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; op;</span><br><span class="line">l = r = m; <span class="comment">// 无任何操作的情况下，只有 ak 能为 1</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;op;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span>(a&lt;=l&amp;&amp;r&lt;=b)&#123; <span class="comment">// 向左向右扩展</span></span><br><span class="line">l = a;</span><br><span class="line">r = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(l&lt;=b&amp;&amp;b&lt;=r&amp;&amp;a&lt;l)&#123; <span class="comment">//向左扩展</span></span><br><span class="line">l = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(l&lt;=a&amp;&amp;a&lt;=r&amp;&amp;b&gt;r)&#123; <span class="comment">//向右扩展</span></span><br><span class="line">r = b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,r-l+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Palindromic-Paths"><a href="#C-Palindromic-Paths" class="headerlink" title="C. Palindromic Paths"></a>C. Palindromic Paths</h1><p>You are given a matrix with n rows (numbered from 1 to n) and m columns (numbered from 1 to m). A number ai,j is written in the cell belonging to the i-th row and the j-th column, each number is either 0 or 1.</p><p>A chip is initially in the cell (1,1), and it will be moved to the cell (n,m). During each move, it either moves to the next cell in the current row, or in the current column (if the current cell is (x,y), then after the move it can be either (x+1,y) or (x,y+1)). The chip cannot leave the matrix.</p><p>Consider each path of the chip from (1,1) to (n,m). A path is called palindromic if the number in the first cell is equal to the number in the last cell, the number in the second cell is equal to the number in the second-to-last cell, and so on.</p><p>Your goal is to change the values in the minimum number of cells so that every path is palindromic.</p><p><em>Input</em><br>The first line contains one integer t (1≤t≤200) — the number of test cases.</p><p>The first line of each test case contains two integers n and m (2≤n,m≤30) — the dimensions of the matrix.</p><p>Then n lines follow, the i-th line contains m integers ai,1, ai,2, …, ai,m (0≤ai,j≤1).</p><p><em>Output</em><br>For each test case, print one integer — the minimum number of cells you have to change so that every path in the matrix is palindromic.</p><p><strong>Example</strong></p><p><strong>input</strong></p><blockquote><p>4<br>2 2<br>1 1<br>0 1<br>2 3<br>1 1 0<br>1 0 0<br>3 7<br>1 0 1 1 1 1 1<br>0 0 0 0 0 0 0<br>1 1 1 1 1 0 1<br>3 5<br>1 0 1 0 0<br>1 1 1 1 0<br>0 0 1 0 0</p></blockquote><p><strong>outputCopy</strong></p><blockquote><p>0<br>3<br>4<br>4</p></blockquote><p><strong>Note</strong><br>The resulting matrices in the first three test cases:<br><img src="https://img2020.cnblogs.com/blog/2062718/202006/2062718-20200613124526431-20190014.png"></p><p>题意：从（1,1）到（n，m）的每条路径要变成回文，最少修改 n,m 矩阵中的几个数字。</p><p>解：从开头走 x 步和从结尾走 x 步对应的值要相等</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 109</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> p[MS][MS];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">cin &gt;&gt; p[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> h = (n+m)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=h;j++)&#123;</span><br><span class="line"><span class="keyword">int</span> t0,t1; <span class="comment">// 计 0 ,1 数量</span></span><br><span class="line">t0 = t1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=(j&lt;=m?<span class="number">1</span>:(j-m+<span class="number">1</span>));i&lt;=(j&lt;=n?j:n);i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[i][j-i+<span class="number">1</span>]==<span class="number">1</span>) t1++; <span class="comment">// 左上角</span></span><br><span class="line"><span class="keyword">else</span> t0++;</span><br><span class="line"><span class="keyword">if</span>(p[n-i+<span class="number">1</span>][m-j+i]==<span class="number">1</span>) t1++; <span class="comment">// 右下角</span></span><br><span class="line"><span class="keyword">else</span> t0++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((n+m)%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;j==h) <span class="keyword">break</span>;</span><br><span class="line">cnt += <span class="built_in">min</span>(t0,t1); <span class="comment">// 取 0 ,1 中数量小的一个</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-Two-Divisors"><a href="#D-Two-Divisors" class="headerlink" title="D. Two Divisors"></a>D. Two Divisors</h1><p>You are given n integers a1,a2,…,an.</p><p>For each ai find its two divisors d1&gt;1 and d2&gt;1 such that gcd(d1+d2,ai)=1 (where gcd(a,b) is the greatest common divisor of a and b) or say that there is no such pair.</p><p><em>Input</em><br>The first line contains single integer n (1≤n≤5⋅105) — the size of the array a.</p><p>The second line contains n integers a1,a2,…,an (2≤ai≤107) — the array a.</p><p><em>Output</em><br>To speed up the output, print two lines with n integers in each line.</p><p>The i-th integers in the first and second lines should be corresponding divisors d1&gt;1 and d2&gt;1 such that gcd(d1+d2,ai)=1 or −1 and −1 if there is no such pair. If there are multiple answers, print any of them.</p><p><strong>Example</strong></p><p><strong>input</strong></p><blockquote><p>10<br>2 3 4 5 6 7 8 9 10 24</p></blockquote><p><strong>output</strong></p><blockquote><p>-1 -1 -1 -1 3 -1 -1 -1 2 2<br>-1 -1 -1 -1 2 -1 -1 -1 5 3 </p></blockquote><p><strong>Note</strong><br>Let’s look at a7=8. It has 3 divisors greater than 1: 2, 4, 8. As you can see, the sum of any pair of divisors is divisible by 2 as well as a7.</p><p>There are other valid pairs of d1 and d2 for a10=24, like (3,4) or (8,3). You can print any of them.</p><p>题意：给你n个整数a1，a2，…，an。             </p><p>对于每个ai，找到其两个除数d1&gt;1和d2&gt;1，使得gcd（d1+d2，ai）=1（其中gcd（a，b）是a和b的最大公约数），或者说不存在这样的对。</p><p>解:找 ai 的两个最小的两个不同质因数，找不到则 -1，-1 . 用到欧拉筛法 1s 以内，普通筛法 1s 多一点 .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483646</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 51</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,f = <span class="number">1</span>,num;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ms=<span class="number">1e6</span>+<span class="number">1</span>,maxn=<span class="number">1e7</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> a[ms],ans[ms][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> prime[maxn];      <span class="comment">// 就是个素数表, prime[] = &#123;0,2,3,5,7...&#125;;</span></span><br><span class="line"><span class="keyword">bool</span> sf[maxn]; <span class="comment">// 判断这个数是不是素数, sf[2] = true;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sushu</span><span class="params">()</span> </span>&#123; <span class="comment">// 欧拉筛</span></span><br><span class="line"><span class="comment">// num 用来记筛到第几个质数</span></span><br><span class="line"><span class="built_in">memset</span>(sf,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(sf));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=maxn; i++) &#123;    </span><br><span class="line"><span class="keyword">if</span>(sf[i]) prime[++num]=i;     </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=num; j++) &#123;    </span><br><span class="line"><span class="keyword">if</span>(i*prime[j]&gt;maxn) <span class="keyword">break</span>; </span><br><span class="line">sf[i*prime[j]]=<span class="literal">false</span>; </span><br><span class="line"><span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sf[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">sf[<span class="number">0</span>]=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">sushu</span>();</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span>(sf[a[i]]==<span class="literal">true</span>) <span class="comment">// 如果是素数则 -1，-1</span></span><br><span class="line">ans[i][<span class="number">0</span>]=<span class="number">-1</span>,ans[i][<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>,x=a[i],pos = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=num; j++) &#123; <span class="comment">// 任何一个数都能展开成有限个质因数的乘积</span></span><br><span class="line"><span class="keyword">if</span>(x%prime[j]==<span class="number">0</span>) &#123;</span><br><span class="line">pos = prime[j]; <span class="comment">// 记录最小质因数</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(x%pos==<span class="number">0</span>) x/=pos; <span class="comment">// 寻找另一个质因数</span></span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>)&#123; <span class="comment">// 只有一个质因数 ex: 9 = 3^2</span></span><br><span class="line">ans[i][<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">ans[i][<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">ans[i][<span class="number">1</span>]=x;</span><br><span class="line">ans[i][<span class="number">0</span>]=pos;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans[i][<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans[i][<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="E-Two-Arrays"><a href="#E-Two-Arrays" class="headerlink" title="E. Two Arrays"></a>E. Two Arrays</h1><p>You are given two arrays a1,a2,…,an and b1,b2,…,bm. Array b is sorted in ascending order (bi&lt;bi+1 for each i from 1 to m−1).</p><p>You have to divide the array a into m consecutive subarrays so that, for each i from 1 to m, the minimum on the i-th subarray is equal to bi. Note that each element belongs to exactly one subarray, and they are formed in such a way: the first several elements of a compose the first subarray, the next several elements of a compose the second subarray, and so on.</p><p>For example, if a=[12,10,20,20,25,30] and b=[10,20,30] then there are two good partitions of array a:</p><p>[12,10,20],[20,25],[30];<br>[12,10],[20,20,25],[30].<br>You have to calculate the number of ways to divide the array a. Since the number can be pretty large print it modulo 998244353.</p><p><em>Input</em><br>The first line contains two integers n and m (1≤n,m≤2⋅105) — the length of arrays a and b respectively.</p><p>The second line contains n integers a1,a2,…,an (1≤ai≤109) — the array a.</p><p>The third line contains m integers b1,b2,…,bm (1≤bi≤109;bi&lt;bi+1) — the array b.</p><p><em>Output</em><br>In only line print one integer — the number of ways to divide the array a modulo 998244353.</p><p><strong>Examples</strong></p><p><strong>input</strong></p><blockquote><p>6 3<br>12 10 20 20 25 30<br>10 20 30</p></blockquote><p><strong>output</strong></p><blockquote><p>2</p></blockquote><p><strong>input</strong></p><blockquote><p>4 2<br>1 3 3 7<br>3 7</p></blockquote><p><strong>output</strong></p><blockquote><p>0</p></blockquote><p>input**</p><blockquote><p>8 2<br>1 2 2 2 2 2 2 2<br>1 2</p></blockquote><p><strong>output</strong></p><blockquote><p>7</p></blockquote><p>题意：给定长 n 的数组 a[] ,长 m 的数组 b[] ,将数组 a[] 划分为 m 个子区间 ,第 i 子区间的最小值与 bi 相等 ,求有多少种划分方法.</p><p>解：a[] 从后往前遍历 ,找到 bm 后标记 pos1 ,再往前遍历找到第一个小于 bm 的值标记 pos2 ,pos2 - pos1 就表示第 m 个子区间可以有几种划分方式 </p><p>因为 b[] 是升序的 ,所以 a(pos1,pos2] 区间内的值 &gt; b[m-1] .  以此类推 bm-1,bm-2 … 各有多少种划分 ,最后相乘即是答案</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ULL unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Pi acos(-1.0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 2147483647</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 200009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// Notice the data size</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> flag;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line">LL a[MS],b[MS];</span><br><span class="line">LL pos[MS][<span class="number">2</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(pos,<span class="number">-1</span>,<span class="keyword">sizeof</span> pos);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> fl; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=m<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">fl = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=(i==m<span class="number">-1</span>?n<span class="number">-1</span>:pos[i+<span class="number">1</span>][<span class="number">1</span>]);j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]==b[i]&amp;&amp;fl == <span class="number">0</span>) &#123;</span><br><span class="line">pos[i][<span class="number">0</span>] = j; <span class="comment">// pos[i][0] 记录第一次出现 b[i] 的位置</span></span><br><span class="line"> fl = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[j]&gt;=b[i]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(pos[i][<span class="number">0</span>] == <span class="number">-1</span>)&#123; <span class="comment">// 若没有出现 b[i] </span></span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">pos[i][<span class="number">1</span>] = j; <span class="comment">// 标记第一个小于 b[i] 的值</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag||pos[<span class="number">0</span>][<span class="number">1</span>]!=<span class="number">-1</span>||fl == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">LL ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;m;i++)&#123;</span><br><span class="line">ans = ans*(pos[i][<span class="number">0</span>]-pos[i][<span class="number">1</span>])%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Codeforces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【数论】求一个数的因子之和</title>
      <link href="/2020/06/13/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E6%B1%82%E4%B8%80%E4%B8%AA%E6%95%B0%E7%9A%84%E5%9B%A0%E5%AD%90%E4%B9%8B%E5%92%8C/"/>
      <url>/2020/06/13/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E6%B1%82%E4%B8%80%E4%B8%AA%E6%95%B0%E7%9A%84%E5%9B%A0%E5%AD%90%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="直接求解"><a href="#直接求解" class="headerlink" title="直接求解"></a>直接求解</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LL <span class="title">factor</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line">LL cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">sqrt</span>(x);i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(x/i == i) cnt += i; <span class="comment">// ex: 9 = 3 * 3</span></span><br><span class="line"><span class="keyword">else</span> cnt += i + x/i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="筛法"><a href="#筛法" class="headerlink" title="筛法"></a>筛法</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">LL sum[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">factor_sieve</span><span class="params">()</span></span>&#123; <span class="comment">// sum[i] 记录 数 i 的各个因子之和 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MS;i++) sum[i] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MS;i++)&#123;</span><br><span class="line">sum[i]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+i;j&lt;=MS;j+=i)&#123;</span><br><span class="line">sum[j] += i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决数独</title>
      <link href="/2020/06/11/ACM/%E8%A7%A3%E5%86%B3%E6%95%B0%E7%8B%AC/"/>
      <url>/2020/06/11/ACM/%E8%A7%A3%E5%86%B3%E6%95%B0%E7%8B%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是数独"><a href="#什么是数独" class="headerlink" title="什么是数独"></a>什么是数独</h1><p>数独（shù dú）是源自18世纪瑞士的一种数学游戏。是一种运用纸、笔进行演算的逻辑游戏。玩家需要根据9×9盘面上的已知数字，推理出所有剩余空格的数字，并满足每一行、每一列、每一个粗线宫（3*3）内的数字均含1-9，不重复 [1]  。<br>数独盘面是个九宫，每一宫又分为九个小格。在这八十一格中给出一定的已知数字和解题条件，利用逻辑和推理，在其他的空格上填入1-9的数字。使1-9每个数字在每一行、每一列和每一宫中都只出现一次，所以又称“九宫格”。<br>————百度百科</p><h1 id="怎么解数独"><a href="#怎么解数独" class="headerlink" title="怎么解数独"></a>怎么解数独</h1><h2 id="带脑子算-手算法"><a href="#带脑子算-手算法" class="headerlink" title="带脑子算(手算法)"></a>带脑子算(手算法)</h2><p>在我没上大学之前，那就是手算了，一个个数字试着填，填满了即为完成了<br>显然效率低而且还头疼(0.0)</p><h2 id="不带脑子算-复读机式算法"><a href="#不带脑子算-复读机式算法" class="headerlink" title="不带脑子算(复读机式算法)"></a>不带脑子算(复读机式算法)</h2><p>试着想了一下数独如何用计算机来解，于是结合一下所学<br>下面这段c++代码编译运行下，把数独盘面输入下就出结果了<br>我的贡献0%(复读题目+1%)，计算机贡献99%，(•ิ_•ิ)  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MS 11</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> flag; </span><br><span class="line"><span class="keyword">char</span> smp[MS][MS];</span><br><span class="line"><span class="keyword">int</span> mp[MS][MS],ans[MS][MS];</span><br><span class="line"><span class="keyword">int</span> vp_row[MS][MS];</span><br><span class="line"><span class="keyword">int</span> vp_col[MS][MS];</span><br><span class="line"><span class="keyword">int</span> vp_cel[<span class="number">4</span>][<span class="number">4</span>][MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">change</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;1&#x27;</span>&lt;=c&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>) <span class="keyword">return</span> c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> jdg_row = vp_row[x][num];</span><br><span class="line"><span class="keyword">int</span> jdg_col = vp_col[y][num];</span><br><span class="line"><span class="keyword">int</span> jdg_cel = vp_cel[x/<span class="number">3</span>][y/<span class="number">3</span>][num];</span><br><span class="line"><span class="keyword">if</span>(jdg_row||jdg_col||jdg_cel) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_or_del_lab</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> num,<span class="keyword">int</span> jdg)</span></span>&#123;</span><br><span class="line">vp_row[x][num] = jdg;</span><br><span class="line">vp_col[y][num] = jdg;</span><br><span class="line">vp_cel[x/<span class="number">3</span>][y/<span class="number">3</span>][num] = jdg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input_smp</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++) <span class="built_in">gets</span>(smp[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">into_mp</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">9</span>;j++)&#123;</span><br><span class="line">mp[i][j] = <span class="built_in">change</span>(smp[i][j]);</span><br><span class="line"><span class="built_in">add_or_del_lab</span>(i,j,mp[i][j],<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> step)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(step==<span class="number">9</span>*<span class="number">9</span>)&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">9</span>;j++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(mp[step/<span class="number">9</span>][step%<span class="number">9</span>]!=<span class="number">0</span>)&#123;</span><br><span class="line">ans[step/<span class="number">9</span>][step%<span class="number">9</span>] = mp[step/<span class="number">9</span>][step%<span class="number">9</span>];</span><br><span class="line"><span class="built_in">solve</span>(step+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> now_x = step/<span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> now_y = step%<span class="number">9</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(now_x,now_y,i)&amp;&amp;mp[now_x][now_y]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">add_or_del_lab</span>(now_x,now_y,i,<span class="number">1</span>);</span><br><span class="line">ans[now_x][now_y] = i;</span><br><span class="line"><span class="built_in">solve</span>(step+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">add_or_del_lab</span>(now_x,now_y,i,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入你想解决的数独：\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;===================\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;注:(9*9)空缺数字用空格代替\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;===================\n&quot;</span>);</span><br><span class="line"><span class="built_in">input_smp</span>();</span><br><span class="line"><span class="built_in">into_mp</span>();</span><br><span class="line"><span class="built_in">solve</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!flag)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;未找到解，请检查输入是否正确合法\n&quot;</span>); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">input:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> 2 5 9 8</span></span><br><span class="line"><span class="comment">    7  5</span></span><br><span class="line"><span class="comment">19    7</span></span><br><span class="line"><span class="comment">  6  7</span></span><br><span class="line"><span class="comment"> 3  8 4</span></span><br><span class="line"><span class="comment">7  95 862</span></span><br><span class="line"><span class="comment">  8  594</span></span><br><span class="line"><span class="comment">  234   6</span></span><br><span class="line"><span class="comment"> 74  15  </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4 2 7 5 3 9 6 8 1</span></span><br><span class="line"><span class="comment">8 6 3 1 7 4 2 5 9</span></span><br><span class="line"><span class="comment">1 9 5 8 6 2 7 3 4</span></span><br><span class="line"><span class="comment">2 8 6 4 1 7 3 9 5</span></span><br><span class="line"><span class="comment">5 3 9 2 8 6 4 1 7</span></span><br><span class="line"><span class="comment">7 4 1 9 5 3 8 6 2</span></span><br><span class="line"><span class="comment">6 1 8 7 2 5 9 4 3</span></span><br><span class="line"><span class="comment">9 5 2 3 4 8 1 7 6</span></span><br><span class="line"><span class="comment">3 7 4 6 9 1 5 2 8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后发现网络上早已有了数独求解器(..•˘_˘•..)</p><h1 id="复读式解数独有啥用"><a href="#复读式解数独有啥用" class="headerlink" title="复读式解数独有啥用"></a>复读式解数独有啥用</h1><p>有利于老年痴呆~</p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【数论】判素数与素数筛法</title>
      <link href="/2020/06/11/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E5%88%A4%E7%B4%A0%E6%95%B0%E4%B8%8E%E7%B4%A0%E6%95%B0%E7%AD%9B%E6%B3%95/"/>
      <url>/2020/06/11/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E5%88%A4%E7%B4%A0%E6%95%B0%E4%B8%8E%E7%B4%A0%E6%95%B0%E7%AD%9B%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="判断素数"><a href="#判断素数" class="headerlink" title="判断素数"></a>判断素数</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="普通筛"><a href="#普通筛" class="headerlink" title="普通筛"></a>普通筛</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> p[MS];</span><br><span class="line"><span class="built_in">memset</span>(p,<span class="number">0</span>,<span class="keyword">sizeof</span> p);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MS;i++) p[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="built_in">sqrt</span>(MS);i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[i])&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+i;j&lt;=MS;j+=i)</span><br><span class="line">p[j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 标记为 1 的即为素数 </span></span><br></pre></td></tr></table></figure><h1 id="欧拉筛"><a href="#欧拉筛" class="headerlink" title="欧拉筛"></a>欧拉筛</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> prime[MS];      <span class="comment">//就是个素数表, prime[] = &#123;0,2,3,5,7...&#125;;</span></span><br><span class="line"><span class="keyword">bool</span> sf[MS]; <span class="comment">//判断这个数是不是素数，sf[i]中的i是从1到maxn的数</span></span><br><span class="line"><span class="function">Void <span class="title">Euler_sieve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//num 用来记筛到第几个质数</span></span><br><span class="line"><span class="built_in">memset</span>(sf,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(sf));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=MS; i++) &#123;       <span class="comment">//外层枚举1~maxn</span></span><br><span class="line"><span class="keyword">if</span>(sf[i]) prime[++num]=i;      <span class="comment">//如果是质数就加入素数表</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=num; j++) &#123;    <span class="comment">//内层枚举num以内的质数</span></span><br><span class="line"><span class="keyword">if</span>(i*prime[j]&gt;MS) <span class="keyword">break</span>; <span class="comment">//筛完结束</span></span><br><span class="line">sf[i*prime[j]]=<span class="literal">false</span>;      <span class="comment">//筛掉...</span></span><br><span class="line"><span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;   <span class="comment">//避免重复筛</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sf[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">sf[<span class="number">0</span>]=<span class="literal">false</span>;  <span class="comment">//1 0 特判</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【数论】排列组合A(n,m)与C(n,m)</title>
      <link href="/2020/06/11/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88A(n,m)%E4%B8%8EC(n,m)/"/>
      <url>/2020/06/11/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88A(n,m)%E4%B8%8EC(n,m)/</url>
      
        <content type="html"><![CDATA[<h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><p><img src="https://img2020.cnblogs.com/blog/2062718/202006/2062718-20200611155630192-928792502.png"><br><img src="https://img2020.cnblogs.com/blog/2062718/202006/2062718-20200611155729279-1837564877.png"></p><p>代码模拟公式计算<br>例：C(7,3)则循环三次每次分别为<br>$5 / 1$ ,<br>$5 * 6 / 1 * 2$ ,<br>$5 * 6 * 7 / 1 * 2 * 3$  </p><h1 id="C-n-m"><a href="#C-n-m" class="headerlink" title="C(n,m)"></a>C(n,m)</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(LL n,LL m)</span> <span class="comment">// n为下标 m为上标</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL k,sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;=m;k++)&#123;</span><br><span class="line">        sum = (sum*(n-m+k))/k;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="A-n-m"><a href="#A-n-m" class="headerlink" title="A(n,m)"></a>A(n,m)</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function">LL <span class="title">A</span><span class="params">(LL n,LL m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL k,sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;=m;k++)&#123;</span><br><span class="line">        sum = (sum*(n-m+k));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【时间优化】快读</title>
      <link href="/2020/06/11/ACM/%E3%80%90%E6%97%B6%E9%97%B4%E4%BC%98%E5%8C%96%E3%80%91%E5%BF%AB%E8%AF%BB/"/>
      <url>/2020/06/11/ACM/%E3%80%90%E6%97%B6%E9%97%B4%E4%BC%98%E5%8C%96%E3%80%91%E5%BF%AB%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="普通快读"><a href="#普通快读" class="headerlink" title="普通快读"></a>普通快读</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">LL x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch))&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="超级快读"><a href="#超级快读" class="headerlink" title="超级快读"></a>超级快读</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> IO&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> BUF_SIZE 100000</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> OUT_SIZE 100000</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line">    <span class="comment">//fread-&gt;read</span></span><br><span class="line">    <span class="keyword">bool</span> IOerror=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">nc</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">char</span> buf[BUF_SIZE],*p1=buf+BUF_SIZE,*pend=buf+BUF_SIZE;</span><br><span class="line">        <span class="keyword">if</span> (p1==pend)&#123;</span><br><span class="line">            p1=buf; pend=buf+<span class="built_in">fread</span>(buf,<span class="number">1</span>,BUF_SIZE,stdin);</span><br><span class="line">            <span class="keyword">if</span> (pend==p1)&#123;IOerror=<span class="number">1</span>;<span class="keyword">return</span> <span class="number">-1</span>;&#125;</span><br><span class="line">            <span class="comment">//&#123;printf(&quot;IO error!\n&quot;);system(&quot;pause&quot;);for (;;);exit(0);&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> *p1++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">blank</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;<span class="keyword">return</span> ch==<span class="string">&#x27; &#x27;</span>||ch==<span class="string">&#x27;\n&#x27;</span>||ch==<span class="string">&#x27;\r&#x27;</span>||ch==<span class="string">&#x27;\t&#x27;</span>;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> sign=<span class="number">0</span>; <span class="keyword">char</span> ch=<span class="built_in">nc</span>(); x=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (;<span class="built_in">blank</span>(ch);ch=<span class="built_in">nc</span>());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>)sign=<span class="number">1</span>,ch=<span class="built_in">nc</span>();</span><br><span class="line">        <span class="keyword">for</span> (;ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>;ch=<span class="built_in">nc</span>())x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (sign)x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(ll &amp;x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> sign=<span class="number">0</span>; <span class="keyword">char</span> ch=<span class="built_in">nc</span>(); x=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (;<span class="built_in">blank</span>(ch);ch=<span class="built_in">nc</span>());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>)sign=<span class="number">1</span>,ch=<span class="built_in">nc</span>();</span><br><span class="line">        <span class="keyword">for</span> (;ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>;ch=<span class="built_in">nc</span>())x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (sign)x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">double</span> &amp;x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> sign=<span class="number">0</span>; <span class="keyword">char</span> ch=<span class="built_in">nc</span>(); x=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (;<span class="built_in">blank</span>(ch);ch=<span class="built_in">nc</span>());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>)sign=<span class="number">1</span>,ch=<span class="built_in">nc</span>();</span><br><span class="line">        <span class="keyword">for</span> (;ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>;ch=<span class="built_in">nc</span>())x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">double</span> tmp=<span class="number">1</span>; ch=<span class="built_in">nc</span>();</span><br><span class="line">            <span class="keyword">for</span> (;ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>;ch=<span class="built_in">nc</span>())tmp/=<span class="number">10.0</span>,x+=tmp*(ch-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sign)x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> ch=<span class="built_in">nc</span>();</span><br><span class="line">        <span class="keyword">for</span> (;<span class="built_in">blank</span>(ch);ch=<span class="built_in">nc</span>());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">for</span> (;!<span class="built_in">blank</span>(ch)&amp;&amp;!IOerror;ch=<span class="built_in">nc</span>())*s++=ch;</span><br><span class="line">        *s=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">char</span> &amp;c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (c=<span class="built_in">nc</span>();<span class="built_in">blank</span>(c);c=<span class="built_in">nc</span>());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)&#123;c=<span class="number">-1</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Ostream_fwrite</span>&#123;</span></span><br><span class="line">        <span class="keyword">char</span> *buf,*p1,*pend;</span><br><span class="line">        <span class="built_in">Ostream_fwrite</span>()&#123;buf=<span class="keyword">new</span> <span class="keyword">char</span>[BUF_SIZE];p1=buf;pend=buf+BUF_SIZE;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">out</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (p1==pend)&#123;</span><br><span class="line">                <span class="built_in">fwrite</span>(buf,<span class="number">1</span>,BUF_SIZE,stdout);p1=buf;</span><br><span class="line">            &#125;</span><br><span class="line">            *p1++=ch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">15</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">&#x27;0&#x27;</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)<span class="built_in">out</span>(<span class="string">&#x27;-&#x27;</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)<span class="built_in">out</span>(*s1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">15</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">&#x27;0&#x27;</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)<span class="built_in">out</span>(<span class="string">&#x27;-&#x27;</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)<span class="built_in">out</span>(*s1); <span class="built_in">out</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">25</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">&#x27;0&#x27;</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)<span class="built_in">out</span>(<span class="string">&#x27;-&#x27;</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)<span class="built_in">out</span>(*s1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">25</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">&#x27;0&#x27;</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)<span class="built_in">out</span>(<span class="string">&#x27;-&#x27;</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)<span class="built_in">out</span>(*s1); <span class="built_in">out</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> ll mul[]=&#123;<span class="number">1</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">1000</span>,<span class="number">10000</span>,<span class="number">100000</span>,<span class="number">1000000</span>,<span class="number">10000000</span>,<span class="number">100000000</span>,</span><br><span class="line">                <span class="number">1000000000</span>,<span class="number">10000000000LL</span>,<span class="number">100000000000LL</span>,<span class="number">1000000000000LL</span>,<span class="number">10000000000000LL</span>,</span><br><span class="line">                <span class="number">100000000000000LL</span>,<span class="number">1000000000000000LL</span>,<span class="number">10000000000000000LL</span>,<span class="number">100000000000000000LL</span>&#125;;</span><br><span class="line">            <span class="keyword">if</span> (x&lt;<span class="number">-1e-12</span>)<span class="built_in">out</span>(<span class="string">&#x27;-&#x27;</span>),x=-x;x*=mul[y];</span><br><span class="line">            ll x1=(ll)<span class="built_in">floor</span>(x); <span class="keyword">if</span> (x-<span class="built_in">floor</span>(x)&gt;=<span class="number">0.5</span>)++x1;</span><br><span class="line">            ll x2=x1/mul[y],x3=x1-x2*mul[y]; <span class="built_in">print</span>(x2);</span><br><span class="line">            <span class="keyword">if</span> (y&gt;<span class="number">0</span>)&#123;<span class="built_in">out</span>(<span class="string">&#x27;.&#x27;</span>); <span class="keyword">for</span> (<span class="keyword">size_t</span> i=<span class="number">1</span>;i&lt;y&amp;&amp;x3*mul[i]&lt;mul[y];<span class="built_in">out</span>(<span class="string">&#x27;0&#x27;</span>),++i); <span class="built_in">print</span>(x3);&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="built_in">print</span>(x,y);<span class="built_in">out</span>(<span class="string">&#x27;\n&#x27;</span>);&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;<span class="keyword">while</span> (*s)<span class="built_in">out</span>(*s++);&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;<span class="keyword">while</span> (*s)<span class="built_in">out</span>(*s++);<span class="built_in">out</span>(<span class="string">&#x27;\n&#x27;</span>);&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span></span>&#123;<span class="keyword">if</span> (p1!=buf)&#123;<span class="built_in">fwrite</span>(buf,<span class="number">1</span>,p1-buf,stdout);p1=buf;&#125;&#125;</span><br><span class="line">        ~<span class="built_in">Ostream_fwrite</span>()&#123;<span class="built_in">flush</span>();&#125;</span><br><span class="line">    &#125;Ostream;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;Ostream.<span class="built_in">print</span>(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;Ostream.<span class="built_in">println</span>(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> x)</span></span>&#123;Ostream.<span class="built_in">out</span>(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">char</span> x)</span></span>&#123;Ostream.<span class="built_in">out</span>(x);Ostream.<span class="built_in">out</span>(<span class="string">&#x27;\n&#x27;</span>);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(ll x)</span></span>&#123;Ostream.<span class="built_in">print</span>(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(ll x)</span></span>&#123;Ostream.<span class="built_in">println</span>(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;Ostream.<span class="built_in">print</span>(x,y);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;Ostream.<span class="built_in">println</span>(x,y);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;Ostream.<span class="built_in">print</span>(s);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;Ostream.<span class="built_in">println</span>(s);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">()</span></span>&#123;Ostream.<span class="built_in">out</span>(<span class="string">&#x27;\n&#x27;</span>);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span></span>&#123;Ostream.<span class="built_in">flush</span>();&#125;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">undef</span> ll</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">undef</span> OUT_SIZE</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">undef</span> BUF_SIZE</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时间优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【数论】快速乘</title>
      <link href="/2020/06/11/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E5%BF%AB%E9%80%9F%E4%B9%98/"/>
      <url>/2020/06/11/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E5%BF%AB%E9%80%9F%E4%B9%98/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function">LL <span class="title">qmul</span><span class="params">(LL a,LL b,LL mod)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans = (ans+a)%mod;</span><br><span class="line">a = a*<span class="number">2</span>%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【数论】快速幂</title>
      <link href="/2020/06/11/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
      <url>/2020/06/11/ACM/%E3%80%90%E6%95%B0%E8%AE%BA%E3%80%91%E5%BF%AB%E9%80%9F%E5%B9%82/</url>
      
        <content type="html"><![CDATA[<h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL n,LL m)</span></span>&#123;</span><br><span class="line">LL ans = <span class="number">1</span>%mod;</span><br><span class="line"><span class="keyword">while</span>(m&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(m&amp;<span class="number">1</span>) ans = ans*n%mod;</span><br><span class="line">n = n*n%mod;</span><br><span class="line">    m &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL n,LL m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>%mod;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(m&amp;<span class="number">1</span>) <span class="keyword">return</span> <span class="built_in">qpow</span>(n,m<span class="number">-1</span>)*n%mod;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        LL tmp = <span class="built_in">qpow</span>(n,m/<span class="number">2</span>)%mod;</span><br><span class="line">        <span class="keyword">return</span> tmp * tmp % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
